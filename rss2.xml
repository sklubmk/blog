<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JK&#39;s Devlog</title>
    <link>https://sklubmk.github.io/</link>
    
    <atom:link href="https://sklubmk.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Jinki Kim&#39;s Front End Devlog</description>
    <pubDate>Thu, 30 Sep 2021 14:15:18 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[프로그래머스] (LV2) 최댓값과 최솟값</title>
      <link>https://sklubmk.github.io/2021/09/30/0d930aa5c30a/</link>
      <guid>https://sklubmk.github.io/2021/09/30/0d930aa5c30a/</guid>
      <pubDate>Thu, 30 Sep 2021 14:13:54 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>문자열 s에는 공백으로 구분된 숫자들이 저장되어 있습니다. str에 나타나는 숫자 중 최소값과 최대값을 찾아 이를 “(최소값) (최대값)”형태의 문자열을 반환하는 함수, solution을 완성하세요.\<br>예를들어 s가 “1 2 3 4”라면 “1 4”를 리턴하고, “-1 -2 -3 -4”라면 “-4 -1”을 리턴하면 됩니다.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>s에는 둘 이상의 정수가 공백으로 구분되어 있습니다.</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>s</th><th>return</th></tr></thead><tbody><tr><td>“1 2 3 4”</td><td>“1 4”</td></tr><tr><td>“-1 -2 -3 -4”</td><td>“-4 -1”</td></tr><tr><td>“-1 -1”</td><td>“-1 -1”</td></tr></tbody></table></div></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s</span>):</span></span><br><span class="line">    s = <span class="built_in">sorted</span>(<span class="built_in">int</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> s.split(<span class="string">&#x27; &#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;s[<span class="number">0</span>]&#125;</span> <span class="subst">&#123;s[-<span class="number">1</span>]&#125;</span>&#x27;</span></span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/30/0d930aa5c30a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 최소직사각형</title>
      <link>https://sklubmk.github.io/2021/09/28/d939dfb298e6/</link>
      <guid>https://sklubmk.github.io/2021/09/28/d939dfb298e6/</guid>
      <pubDate>Tue, 28 Sep 2021 09:50:29 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p>명함 지갑을 만드는 회사에서 지갑의 크기를 정하려고 합니다. 다양한 모양과 크기의 명함들을 모두 수납할 수 있으면서, 작아서 들고 다니기 편한 지갑을 만들어야 합니다. 이러한 요건을 만족하는 지갑을 만들기 위해 디자인팀은 모든 명함의 가로 길이와 세로 길이를 조사했습니다.</p><p>아래 표는 4가지 명함의 가로 길이와 세로 길이를 나타냅니다.</p><div class="table-container"><table><thead><tr><th>명함 번호</th><th>가로 길이</th><th>세로 길이</th></tr></thead><tbody><tr><td>1</td><td>60</td><td>50</td></tr><tr><td>2</td><td>30</td><td>70</td></tr><tr><td>3</td><td>60</td><td>30</td></tr><tr><td>4</td><td>80</td><td>40</td></tr></tbody></table></div><p>가장 긴 가로 길이와 세로 길이가 각각 80, 70이기 때문에 80(가로) x 70(세로) 크기의 지갑을 만들면 모든 명함들을 수납할 수 있습니다. 하지만 2번 명함을 가로로 눕혀 수납한다면 80(가로) x 50(세로) 크기의 지갑으로 모든 명함들을 수납할 수 있습니다. 이때의 지갑 크기는 4000(=80 x 50)입니다.</p><p>모든 명함의 가로 길이와 세로 길이를 나타내는 2차원 배열 sizes가 매개변수로 주어집니다. 모든 명함을 수납할 수 있는 가장 작은 지갑을 만들 때, 지갑의 크기를 return 하도록 solution 함수를 완성해주세요.</p><hr><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>sizes의 길이는 1 이상 10,000 이하입니다.<ul><li>sizes의 원소는 [w, h] 형식입니다.</li><li>w는 명함의 가로 길이를 나타냅니다.</li><li>h는 명함의 세로 길이를 나타냅니다.</li><li>w와 h는 1 이상 1,000 이하인 자연수입니다.</li></ul></li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>sizes</th><th>result</th></tr></thead><tbody><tr><td>[[60, 50], [30, 70], [60, 30], [80, 40]]</td><td>4000</td></tr><tr><td>[[10, 7], [12, 3], [8, 15], [14, 7], [5, 15]]</td><td>120</td></tr><tr><td>[[14, 4], [19, 6], [6, 16], [18, 7], [7, 11]]</td><td>133</td></tr></tbody></table></div><hr><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1\<br>문제 예시와 같습니다.</p><p>입출력 예 #2\<br>명함들을 적절히 회전시켜 겹쳤을 때, 3번째 명함(가로: 8, 세로: 15)이 다른 모든 명함보다 크기가 큽니다. 따라서 지갑의 크기는 3번째 명함의 크기와 같으며, 120(=8 x 15)을 return 합니다.</p><p>입출력 예 #3\<br>명함들을 적절히 회전시켜 겹쳤을 때, 모든 명함을 포함하는 가장 작은 지갑의 크기는 133(=19 x 7)입니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">sizes</span>):</span></span><br><span class="line">    result = [<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> sizes:</span><br><span class="line">        result = [ <span class="built_in">max</span>(result[<span class="number">0</span>],<span class="built_in">min</span>(s)), <span class="built_in">max</span>(result[<span class="number">1</span>],<span class="built_in">max</span>(s)) ]</span><br><span class="line">    <span class="keyword">return</span> result[<span class="number">0</span>] * result[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/%EC%9C%84%ED%81%B4%EB%A6%AC%EC%B1%8C%EB%A6%B0%EC%A7%80/">위클리챌린지</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/28/d939dfb298e6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 땅따먹기</title>
      <link>https://sklubmk.github.io/2021/09/27/40cdd52ef911/</link>
      <guid>https://sklubmk.github.io/2021/09/27/40cdd52ef911/</guid>
      <pubDate>Mon, 27 Sep 2021 02:37:26 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>땅따먹기 게임을 하려고 합니다. 땅따먹기 게임의 땅(land)은 총 N행 4열로 이루어져 있고, 모든 칸에는 점수가 쓰여 있습니다. 1행부터 땅을 밟으며 한 행씩 내려올 때, 각 행의 4칸 중 한 칸만 밟으면서 내려와야 합니다. 단, 땅따먹기 게임에는 한 행씩 내려올 때, 같은 열을 연속해서 밟을 수 없는 특수 규칙이 있습니다.</p><p>예를 들면,</p><p>| 1 | 2 | 3 | 5 |</p><p>| 5 | 6 | 7 | 8 |</p><p>| 4 | 3 | 2 | 1 |</p><p>로 땅이 주어졌다면, 1행에서 네번째 칸 (5)를 밟았으면, 2행의 네번째 칸 (8)은 밟을 수 없습니다.</p><p>마지막 행까지 모두 내려왔을 때, 얻을 수 있는 점수의 최대값을 return하는 solution 함수를 완성해 주세요. 위 예의 경우, 1행의 네번째 칸 (5), 2행의 세번째 칸 (7), 3행의 첫번째 칸 (4) 땅을 밟아 16점이 최고점이 되므로 16을 return 하면 됩니다.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>행의 개수 N : 100,000 이하의 자연수</li><li>열의 개수는 4개이고, 땅(land)은 2차원 배열로 주어집니다.</li><li>점수 : 100 이하의 자연수</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>land</th><th>answer</th></tr></thead><tbody><tr><td>[[1,2,3,5],[5,6,7,8],[4,3,2,1]]</td><td>16</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1\<br>문제의 예시와 같습니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">land</span>):</span></span><br><span class="line">    dp = [[<span class="number">0</span>]*<span class="number">4</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(land))]</span><br><span class="line">    dp[<span class="number">0</span>] = land[<span class="number">0</span>][:]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(land)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            dp[i][j] = <span class="built_in">max</span>(k <span class="keyword">for</span> k_i, k <span class="keyword">in</span> <span class="built_in">enumerate</span>(dp[i-<span class="number">1</span>]) <span class="keyword">if</span> k_i != j) + land[i][j]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(dp[-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li><code>Brute Force</code> 방식의 풀이는 <script type="math/tex">O(4^N)</script>의 효율성, 즉 최대 <script type="math/tex">4^{1000000}</script>의 효율성을 보인다.</li><li><code>Dinamic Programming</code>을 적용하면 쉽게 풀이할 수 있다.</li><li>2차원 배열인 <code>DP[i][j]</code>는, <code>DP[i-1]</code> 중 가장 큰 값에 <code>land[i][j]</code> 값을 포함한 결과다.<ul><li>그러나 이때, 문제 조건대로 <code>DP[i-1]</code>의 가장 큰 값의 인덱스가 <code>j</code>와 같아서는 안된다. </li><li>따라서 정확히는 <code>DP[i-1]</code> 배열에서 <code>j</code>번째 값을 제외한 결과 중 가장 큰 값을 사용한다.</li></ul></li><li><code>DP</code> 풀이 방식을 통해 <script type="math/tex">O(N)</script>의 효율성으로 문제를 풀 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/DP/">DP</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/27/40cdd52ef911/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) N개의 최소공배수</title>
      <link>https://sklubmk.github.io/2021/09/26/91475a0d6b1b/</link>
      <guid>https://sklubmk.github.io/2021/09/26/91475a0d6b1b/</guid>
      <pubDate>Sun, 26 Sep 2021 11:18:42 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>두 수의 최소공배수(Least Common Multiple)란 입력된 두 수의 배수 중 공통이 되는 가장 작은 숫자를 의미합니다. 예를 들어 2와 7의 최소공배수는 14가 됩니다. 정의를 확장해서, n개의 수의 최소공배수는 n 개의 수들의 배수 중 공통이 되는 가장 작은 숫자가 됩니다. n개의 숫자를 담은 배열 arr이 입력되었을 때 이 수들의 최소공배수를 반환하는 함수, solution을 완성해 주세요.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>arr은 길이 1이상, 15이하인 배열입니다.</li><li>arr의 원소는 100 이하인 자연수입니다.</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>arr</th><th>result</th></tr></thead><tbody><tr><td>[2,6,8,14]</td><td>168</td></tr><tr><td>[1,2,3]</td><td>6</td></tr></tbody></table></div></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">arr</span>):</span></span><br><span class="line">    arr.sort()</span><br><span class="line">    max_v = arr[-<span class="number">1</span>]</span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> count:</span><br><span class="line">        satis_value_count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">reversed</span>(<span class="built_in">range</span>(<span class="built_in">len</span>(arr)-<span class="number">1</span>)):</span><br><span class="line">            <span class="keyword">if</span> (max_v*count) % arr[i] == <span class="number">0</span>:</span><br><span class="line">                satis_value_count+= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>: </span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> satis_value_count == <span class="built_in">len</span>(arr)-<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            count+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> max_v * count </span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li>최소 공배수는 반드시 배열 중 가장 큰 수의 거듭제곱 중 하나다.</li><li>이를 이용하여 가장 큰 수의 거듭제곱 값을 늘려가며 조건에 만족하는 값을 구한다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/26/91475a0d6b1b/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV3) 이중우선순위큐</title>
      <link>https://sklubmk.github.io/2021/09/24/a254528274a1/</link>
      <guid>https://sklubmk.github.io/2021/09/24/a254528274a1/</guid>
      <pubDate>Fri, 24 Sep 2021 03:32:24 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다.</p><div class="table-container"><table><thead><tr><th>명령어</th><th>수신 탑(높이)</th></tr></thead><tbody><tr><td>I 숫자</td><td>큐에 주어진 숫자를 삽입합니다.</td></tr><tr><td>D 1</td><td>큐에서 최댓값을 삭제합니다.</td></tr><tr><td>D -1</td><td>큐에서 최솟값을 삭제합니다.</td></tr></tbody></table></div><p>이중 우선순위 큐가 할 연산 operations가 매개변수로 주어질 때, 모든 연산을 처리한 후 큐가 비어있으면 [0,0] 비어있지 않으면 [최댓값, 최솟값]을 return 하도록 solution 함수를 구현해주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>operations는 길이가 1 이상 1,000,000 이하인 문자열 배열입니다.</li><li>operations의 원소는 큐가 수행할 연산을 나타냅니다.<ul><li>원소는 “명령어 데이터” 형식으로 주어집니다.- 최댓값/최솟값을 삭제하는 연산에서 최댓값/최솟값이 둘 이상인 경우, 하나만 삭제합니다.</li></ul></li><li>빈 큐에 데이터를 삭제하라는 연산이 주어질 경우, 해당 연산은 무시합니다.</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>operations</th><th>return</th></tr></thead><tbody><tr><td>[“I 16”,”D 1”]</td><td>[0,0]</td></tr><tr><td>[“I 7”,”I 5”,”I -5”,”D -1”]</td><td>[7,5]</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>16을 삽입 후 최댓값을 삭제합니다. 비어있으므로 [0,0]을 반환합니다.\<br>7,5,-5를 삽입 후 최솟값을 삭제합니다. 최대값 7, 최소값 5를 반환합니다.</p><p><a href="http://icpckorea.org/problems/2013/onlineset.pdf">출처</a></p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq <span class="keyword">as</span> h</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">operations</span>):</span></span><br><span class="line">    heap_queue = []</span><br><span class="line">    <span class="keyword">for</span> oper <span class="keyword">in</span> operations:</span><br><span class="line">        order, value = oper.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> order == <span class="string">&#x27;D&#x27;</span> <span class="keyword">and</span> value == <span class="string">&#x27;-1&#x27;</span> <span class="keyword">and</span> <span class="built_in">len</span>(heap_queue) != <span class="number">0</span>:</span><br><span class="line">            h.heappop(heap_queue)</span><br><span class="line">        <span class="keyword">elif</span> order == <span class="string">&#x27;D&#x27;</span> <span class="keyword">and</span> value == <span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> <span class="built_in">len</span>(heap_queue) != <span class="number">0</span>:</span><br><span class="line">            heap_queue.pop(heap_queue.index(h.nlargest(<span class="number">1</span>,heap_queue)[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">elif</span> order == <span class="string">&#x27;I&#x27;</span>:</span><br><span class="line">            h.heappush(heap_queue,<span class="built_in">int</span>(value))</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(heap_queue) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>] </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> [h.nlargest(<span class="number">1</span>,heap_queue)[<span class="number">0</span>],h.heappop(heap_queue)]</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li>python <code>heapq</code> 라이브러리의 <code>nlargest</code> 함수는 queue 안의 가장 큰 <code>n</code>개의 숫자로 이루어진 배열을 반환한다. 이를 이용해 손쉽게 <code>heapq</code>의 <code>max</code> 값을 구할 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv3/">lv3</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      <category domain="https://sklubmk.github.io/tags/lv3/">lv3</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/24/a254528274a1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 게임 맵 최단거리</title>
      <link>https://sklubmk.github.io/2021/09/21/c72c24f8d1cd/</link>
      <guid>https://sklubmk.github.io/2021/09/21/c72c24f8d1cd/</guid>
      <pubDate>Tue, 21 Sep 2021 08:24:13 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>ROR 게임은 두 팀으로 나누어서 진행하며, 상대 팀 진영을 먼저 파괴하면 이기는 게임입니다. 따라서, 각 팀은 상대 팀 진영에 최대한 빨리 도착하는 것이 유리합니다.</p><p>지금부터 당신은 한 팀의 팀원이 되어 게임을 진행하려고 합니다. 다음은 5 x 5 크기의 맵에, 당신의 캐릭터가 (행: 1, 열: 1) 위치에 있고, 상대 팀 진영은 (행: 5, 열: 5) 위치에 있는 경우의 예시입니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/dc3a1b49-13d3-4047-b6f8-6cc40b2702a7/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B51_sxuruo.png" alt="최단거리1_sxuruo.png"></p><p>위 그림에서 검은색 부분은 벽으로 막혀있어 갈 수 없는 길이며, 흰색 부분은 갈 수 있는 길입니다. 캐릭터가 움직일 때는 동, 서, 남, 북 방향으로 한 칸씩 이동하며, 게임 맵을 벗어난 길은 갈 수 없습니다.\<br>아래 예시는 캐릭터가 상대 팀 진영으로 가는 두 가지 방법을 나타내고 있습니다.</p><ul><li>첫 번째 방법은 11개의 칸을 지나서 상대 팀 진영에 도착했습니다.</li></ul><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/9d909e5a-ca95-4088-9df9-d84cb804b2b0/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B52_hnjd3b.png" alt="최단거리2_hnjd3b.png"></p><ul><li>두 번째 방법은 15개의 칸을 지나서 상대팀 진영에 도착했습니다.</li></ul><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/4b7cd629-a3c2-4e02-b748-a707211131de/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B53_ntxygd.png" alt="최단거리3_ntxygd.png"></p><p>위 예시에서는 첫 번째 방법보다 더 빠르게 상대팀 진영에 도착하는 방법은 없으므로, 이 방법이 상대 팀 진영으로 가는 가장 빠른 방법입니다.</p><p>만약, 상대 팀이 자신의 팀 진영 주위에 벽을 세워두었다면 상대 팀 진영에 도착하지 못할 수도 있습니다. 예를 들어, 다음과 같은 경우에 당신의 캐릭터는 상대 팀 진영에 도착할 수 없습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/d963b4bd-12e5-45da-9ca7-549e453d58a9/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B54_of9xfg.png" alt="최단거리4_of9xfg.png"></p><p>게임 맵의 상태 maps가 매개변수로 주어질 때, 캐릭터가 상대 팀 진영에 도착하기 위해서 지나가야 하는 칸의 개수의 최솟값을 return 하도록 solution 함수를 완성해주세요. 단, 상대 팀 진영에 도착할 수 없을 때는 -1을 return 해주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>maps는 n x m 크기의 게임 맵의 상태가 들어있는 2차원 배열로, n과 m은 각각 1 이상 100 이하의 자연수입니다.<ul><li>n과 m은 서로 같을 수도, 다를 수도 있지만, n과 m이 모두 1인 경우는 입력으로 주어지지 않습니다.</li></ul></li><li>maps는 0과 1로만 이루어져 있으며, 0은 벽이 있는 자리, 1은 벽이 없는 자리를 나타냅니다.</li><li>처음에 캐릭터는 게임 맵의 좌측 상단인 (1, 1) 위치에 있으며, 상대방 진영은 게임 맵의 우측 하단인 (n, m) 위치에 있습니다.</li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>maps</th><th>answer</th></tr></thead><tbody><tr><td>[[1,0,1,1,1],[1,0,1,0,1],[1,0,1,1,1],[1,1,1,0,1],[0,0,0,0,1]]</td><td>11</td></tr><tr><td>[[1,0,1,1,1],[1,0,1,0,1],[1,0,1,1,1],[1,1,1,0,0],[0,0,0,0,1]]</td><td>-1</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1\<br>주어진 데이터는 다음과 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/6db71f7f-58d3-4623-9fab-7cd99fa863a5/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B56_lgjvrb.png" alt="최단거리6_lgjvrb.png"></p><p>캐릭터가 적 팀의 진영까지 이동하는 가장 빠른 길은 다음 그림과 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/d223d017-b3e2-4772-9045-a565133d45ff/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B52_hnjd3b%20%281%29.png" alt="최단거리2_hnjd3b (1).png"></p><p>따라서 총 11칸을 캐릭터가 지나갔으므로 11을 return 하면 됩니다.</p><p>입출력 예 #2\<br>문제의 예시와 같으며, 상대 팀 진영에 도달할 방법이 없습니다. 따라서 -1을 return 합니다.</p><p><br/></p><p><br/></p></blockquote><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq <span class="keyword">as</span> h</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">maps</span>):</span></span><br><span class="line">    n = <span class="built_in">len</span>(maps[<span class="number">0</span>])</span><br><span class="line">    m = <span class="built_in">len</span>(maps)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>: <span class="keyword">return</span> m</span><br><span class="line">    <span class="keyword">elif</span> m == <span class="number">1</span>: <span class="keyword">return</span> n</span><br><span class="line">    </span><br><span class="line">    dxdy = (-<span class="number">1</span>,<span class="number">1</span>,n,-n)</span><br><span class="line">    isVisit = [<span class="literal">False</span>]*(n*m)</span><br><span class="line">    graph = [(<span class="number">1</span>,<span class="number">0</span>)]</span><br><span class="line">    <span class="keyword">while</span> graph:</span><br><span class="line">        dist, idx = h.heappop(graph)</span><br><span class="line">        idx *= -<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> idx == m*n -<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> dist</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> isVisit[idx]: <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>: isVisit[idx] = <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> dxdy:</span><br><span class="line">            i = idx + d</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (d == n <span class="keyword">or</span> d == -n) <span class="keyword">and</span> <span class="keyword">not</span> (-<span class="number">1</span> &lt; i &lt; n*m): <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> (d == <span class="number">1</span> <span class="keyword">or</span> d == -<span class="number">1</span>) <span class="keyword">and</span> i//n != idx//n: <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> maps[i//n][i%n] == <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> isVisit[i]:</span><br><span class="line">                h.heappush(graph,(dist+<span class="number">1</span>,-i))</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li><code>n</code>이나 <code>m</code>이 1인 상황은 따로 대비한다.</li><li><code>heap queue</code>를 이용한 <code>BFS</code> 풀이, 그 중에서도 다익스트라 방식을 이용했다.</li><li>이동 가능한 노드들을 <code>heap queue</code>인 <code>graph</code>에 계속 저장한다.</li><li><code>graph</code>에서 꺼낸 노드는 최단거리 노드이므로 종료지점이면 바로 거리를 반환한다.</li><li><code>isVisit</code> 변수를 둬 이미 지난 노드로의 역행을 막는다</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/21/c72c24f8d1cd/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV1) 없는 숫자 더하기</title>
      <link>https://sklubmk.github.io/2021/09/21/8200d484d55f/</link>
      <guid>https://sklubmk.github.io/2021/09/21/8200d484d55f/</guid>
      <pubDate>Tue, 21 Sep 2021 08:19:05 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>0부터 9까지의 숫자 중 일부가 들어있는 배열 <code>numbers</code>가 매개변수로 주어집니다. <code>numbers</code>에서 찾을 수 없는 0부터 9까지의 숫자를 모두 찾아 더한 수를 return 하도록 solution 함수를 완성해주세요.</p><hr><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>1 ≤ <code>numbers</code>의 길이 ≤ 9</li><li>0 ≤ <code>numbers</code>의 모든 수 ≤ 9</li><li><code>numbers</code>의 모든 수는 서로 다릅니다.</li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>numbers</th><th>result</th></tr></thead><tbody><tr><td><code>[1,2,3,4,6,7,8,0]</code></td><td>14</td></tr><tr><td><code>[5,8,4,0,6,7,9]</code></td><td>6</td></tr></tbody></table></div><hr><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1</p><ul><li>5, 9가 <code>numbers</code>에 없으므로, 5 + 9 = 14를 return 해야 합니다.</li></ul><p>입출력 예 #2</p><ul><li>1, 2, 3이 <code>numbers</code>에 없으므로, 1 + 2 + 3 = 6을 return 해야 합니다.</li></ul></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">numbers</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>) <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> numbers)</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/">lv1</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv1/">lv1</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/21/8200d484d55f/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 행렬의 곱셈</title>
      <link>https://sklubmk.github.io/2021/09/20/ea59c7a6fc4e/</link>
      <guid>https://sklubmk.github.io/2021/09/20/ea59c7a6fc4e/</guid>
      <pubDate>Mon, 20 Sep 2021 08:21:43 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>2차원 행렬 arr1과 arr2를 입력받아, arr1에 arr2를 곱한 결과를 반환하는 함수, solution을 완성해주세요.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>행렬 arr1, arr2의 행과 열의 길이는 2 이상 100 이하입니다.</li><li>행렬 arr1, arr2의 원소는 -10 이상 20 이하인 자연수입니다.</li><li>곱할 수 있는 배열만 주어집니다.</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>arr1</th><th>arr2</th><th>return</th></tr></thead><tbody><tr><td>[[1, 4], [3, 2], [4, 1]]</td><td>[[3, 3], [3, 3]]</td><td>[[15, 15], [15, 15], [15, 15]]</td></tr><tr><td>[[2, 3, 2], [4, 2, 4], [3, 1, 4]]</td><td>[[5, 4, 3], [2, 4, 1], [3, 1, 1]]</td><td>[[22, 22, 11], [36, 28, 18], [29, 20, 14]]</td></tr></tbody></table></div></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">arr1, arr2</span>):</span></span><br><span class="line">    answer = []</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> arr1:</span><br><span class="line">        arr_ = []</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr2[<span class="number">0</span>])):</span><br><span class="line">            cnt = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> b_i, b <span class="keyword">in</span> <span class="built_in">enumerate</span>(a):</span><br><span class="line">                cnt += b*arr2[b_i][c]</span><br><span class="line">            arr_.append(cnt)</span><br><span class="line">        answer.append(arr_)</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/20/ea59c7a6fc4e/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 최솟값 만들기</title>
      <link>https://sklubmk.github.io/2021/09/19/95369e2b9a26/</link>
      <guid>https://sklubmk.github.io/2021/09/19/95369e2b9a26/</guid>
      <pubDate>Sun, 19 Sep 2021 08:51:04 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>길이가 같은 배열 A, B 두개가 있습니다. 각 배열은 자연수로 이루어져 있습니다.\<br>배열 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱합니다. 이러한 과정을 배열의 길이만큼 반복하며, 두 수를 곱한 값을 누적하여 더합니다. 이때 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다. (단, 각 배열에서 k번째 숫자를 뽑았다면 다음에 k번째 숫자는 다시 뽑을 수 없습니다.)</p><p>예를 들어 A = <code>[1, 4, 2]</code> , B = <code>[5, 4, 4]</code> 라면</p><ul><li>A에서 첫번째 숫자인 1, B에서 첫번째 숫자인 5를 뽑아 곱하여 더합니다. (누적된 값 : 0 + 5(1x5) = 5)</li><li>A에서 두번째 숫자인 4, B에서 세번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 5 + 16(4x4) = 21)</li><li>A에서 세번째 숫자인 2, B에서 두번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 21 + 8(2x4) = 29)</li></ul><p>즉, 이 경우가 최소가 되므로 29를 return 합니다.</p><p>배열 A, B가 주어질 때 최종적으로 누적된 최솟값을 return 하는 solution 함수를 완성해 주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>배열 A, B의 크기 : 1,000 이하의 자연수</li><li>배열 A, B의 원소의 크기 : 1,000 이하의 자연수</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>A</th><th>B</th><th>answer</th></tr></thead><tbody><tr><td>[1, 4, 2]</td><td>[5, 4, 4]</td><td>29</td></tr><tr><td>[1,2]</td><td>[3,4]</td><td>10</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1\<br>문제의 예시와 같습니다.</p><p>입출력 예 #2\<br>A에서 첫번째 숫자인 1, B에서 두번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 4) 다음, A에서 두번째 숫자인 2, B에서 첫번째 숫자인 3을 뽑아 곱하여 더합니다. (누적된 값 : 4 + 6 = 10)\<br>이 경우가 최소이므로 10을 return 합니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">A,B</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>([a*b <span class="keyword">for</span> a,b <span class="keyword">in</span> <span class="built_in">zip</span>(<span class="built_in">sorted</span>(A),<span class="built_in">sorted</span>(B,reverse=<span class="literal">True</span>))])</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/19/95369e2b9a26/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 입실 퇴실</title>
      <link>https://sklubmk.github.io/2021/09/18/4ac2141eab59/</link>
      <guid>https://sklubmk.github.io/2021/09/18/4ac2141eab59/</guid>
      <pubDate>Sat, 18 Sep 2021 07:41:12 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>사회적 거리두기를 위해 회의실에 출입할 때 명부에 이름을 적어야 합니다. 입실과 퇴실이 동시에 이뤄지는 경우는 없으며, 입실 시각과 퇴실 시각은 따로 기록하지 않습니다.</p><p>오늘 회의실에는 총 n명이 입실 후 퇴실했습니다. 편의상 사람들은 1부터 n까지 번호가 하나씩 붙어있으며, 두 번 이상 회의실에 들어온 사람은 없습니다. 이때, 각 사람별로 반드시 만난 사람은 몇 명인지 구하려 합니다.</p><p>예를 들어 입실 명부에 기재된 순서가 [1, 3, 2], 퇴실 명부에 기재된 순서가 [1, 2, 3]인 경우,</p><ul><li>1번과 2번은 만났는지 알 수 없습니다.</li><li>1번과 3번은 만났는지 알 수 없습니다.</li><li>2번과 3번은 반드시 만났습니다.</li></ul><p>또 다른 예로 입실 순서가 [1, 4, 2, 3], 퇴실 순서가 [2, 1, 3, 4]인 경우,</p><ul><li>1번과 2번은 반드시 만났습니다.</li><li>1번과 3번은 만났는지 알 수 없습니다.</li><li>1번과 4번은 반드시 만났습니다.</li><li>2번과 3번은 만났는지 알 수 없습니다.</li><li>2번과 4번은 반드시 만났습니다.</li><li>3번과 4번은 반드시 만났습니다.</li></ul><p>회의실에 입실한 순서가 담긴 정수 배열 enter, 퇴실한 순서가 담긴 정수 배열 leave가 매개변수로 주어질 때, 각 사람별로 반드시 만난 사람은 몇 명인지 번호 순서대로 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p><hr><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>1 ≤ <code>enter</code>의 길이 ≤ 1,000</li><li>1 ≤ <code>enter</code>의 원소 ≤ <code>enter</code>의 길이<ul><li>모든 사람의 번호가 중복없이 하나씩 들어있습니다.</li></ul></li><li><code>leave</code>의 길이 = <code>enter</code>의 길이</li><li>1 ≤ <code>leave</code>의 원소 ≤ <code>leave</code>의 길이<ul><li>모든 사람의 번호가 중복없이 하나씩 들어있습니다.</li></ul></li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>enter</th><th>leave</th><th>result</th></tr></thead><tbody><tr><td>[1,3,2]</td><td>[1,2,3]</td><td>[0,1,1]</td></tr><tr><td>[1,4,2,3]</td><td>[2,1,3,4]</td><td>[2,2,1,3]</td></tr><tr><td>[3,2,1]</td><td>[2,1,3]</td><td>[1,1,2]</td></tr><tr><td>[3,2,1]</td><td>[1,3,2]</td><td>[2,2,2]</td></tr><tr><td>[1,4,2,3]</td><td>[2,1,4,3]</td><td>[2,2,0,2]</td></tr></tbody></table></div><hr><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1</p><p>만약, 다음과 같이 회의실에 입실, 퇴실했다면</p><div class="table-container"><table><thead><tr><th>회의실</th><th>설명</th></tr></thead><tbody><tr><td>[1]</td><td>1번 입실</td></tr><tr><td>[1, 3]</td><td>3번 입실</td></tr><tr><td>[3]</td><td>1번 퇴실</td></tr><tr><td>[2, 3]</td><td>2번 입실</td></tr><tr><td>[3]</td><td>2번 퇴실</td></tr><tr><td>[]</td><td>3번 퇴실</td></tr></tbody></table></div><ul><li>1번과 2번은 만나지 않습니다.</li><li>1번과 3번은 만납니다</li><li>2번과 3번은 만납니다.</li></ul><p>만약, 다음과 같이 회의실에 입실, 퇴실했다면</p><div class="table-container"><table><thead><tr><th>회의실</th><th>설명</th></tr></thead><tbody><tr><td>[1]</td><td>1번 입실</td></tr><tr><td>[]</td><td>1번 퇴실</td></tr><tr><td>[3]</td><td>3번 입실</td></tr><tr><td>[2, 3]</td><td>2번 입실</td></tr><tr><td>[3]</td><td>2번 퇴실</td></tr><tr><td>[]</td><td>3번 퇴실</td></tr></tbody></table></div><ul><li>1번과 2번은 만나지 않습니다.</li><li>1번과 3번은 만나지 않습니다.</li><li>2번과 3번은 만납니다.</li></ul><p>위 방법 외에 다른 순서로 입실, 퇴실 할 경우 1번과 2번이 만나도록 할 수도 있습니다. 하지만 2번과 3번이 만나지 않도록 하는 방법은 없습니다.</p><p>따라서</p><ul><li>1번과 2번은 만났는지 알 수 없습니다.</li><li>1번과 3번은 만났는지 알 수 없습니다.</li><li>2번과 3번은 반드시 만났습니다.</li></ul><p>입출력 예 #2</p><p>문제의 예시와 같습니다.</p><p>입출력 예 #3</p><ul><li>1번과 2번은 만났는지 알 수 없습니다.</li><li>1번과 3번은 반드시 만났습니다.</li><li>2번과 3번은 반드시 만났습니다.</li></ul><p>입출력 예 #4</p><ul><li>1번과 2번은 반드시 만났습니다.</li><li>1번과 3번은 반드시 만났습니다.</li><li>2번과 3번은 반드시 만났습니다.</li></ul><p>입출력 예 #5</p><ul><li>1번과 2번은 반드시 만났습니다.</li><li>1번과 3번은 만났는지 알 수 없습니다.</li><li>1번과 4번은 반드시 만났습니다.</li><li>2번과 3번은 만났는지 알 수 없습니다.</li><li>2번과 4번은 반드시 만났습니다.</li><li>3번과 4번은 만났는지 알 수 없습니다.</li></ul></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">enter, leave</span>):</span></span><br><span class="line">    stack = []</span><br><span class="line">    N = <span class="built_in">len</span>(enter)</span><br><span class="line">    enter_info = [<span class="number">0</span>]*N</span><br><span class="line">    e_cnt = <span class="number">0</span></span><br><span class="line">    l_cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> e_cnt &lt; N <span class="keyword">or</span> l_cnt &lt; N:</span><br><span class="line">        <span class="keyword">if</span> l_cnt &lt; N <span class="keyword">and</span> leave[l_cnt] <span class="keyword">in</span> stack:</span><br><span class="line">            stack.remove(leave[l_cnt])</span><br><span class="line">            l_cnt +=<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> s <span class="keyword">in</span> stack:</span><br><span class="line">                enter_info[s-<span class="number">1</span>] += <span class="number">1</span></span><br><span class="line">            enter_info[enter[e_cnt]-<span class="number">1</span>] += <span class="built_in">len</span>(stack) </span><br><span class="line">            stack.append(enter[e_cnt])</span><br><span class="line">            e_cnt+=<span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> enter_info</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><ul><li>상황 속 조건이 있는 문제는 숨겨진 규칙을 찾으려 하는것보다 시물레이션 풀이를 이용해야 한다.</li><li>규칙을 찾으려 한다면 이를 검증하는 작업도 필요해 오히려 복잡할 수 있기 때문이다.</li><li>해당 문제도 입장과 퇴장의 상황을 실시간으로 시뮬레이션 하는 코드를 작성했다.</li><li>현재 순서에 퇴장 인원이 있으면 퇴실을, 없으면 입실을 진행한다.</li><li>이 과정에서 함께 <code>stack</code>에 담겨있던 사람들간의 접촉 횟수를 카운팅하여 풀이한다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/%EC%9C%84%ED%81%B4%EB%A6%AC%EC%B1%8C%EB%A6%B0%EC%A7%80/">위클리챌린지</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/18/4ac2141eab59/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV3) 다단계 칫솔 판매</title>
      <link>https://sklubmk.github.io/2021/09/17/7f954d7943aa/</link>
      <guid>https://sklubmk.github.io/2021/09/17/7f954d7943aa/</guid>
      <pubDate>Fri, 17 Sep 2021 09:26:38 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>민호는 다단계 조직을 이용하여 칫솔을 판매하고 있습니다. 판매원이 칫솔을 판매하면 그 이익이 피라미드 조직을 타고 조금씩 분배되는 형태의 판매망입니다. 어느정도 판매가 이루어진 후, 조직을 운영하던 민호는 조직 내 누가 얼마만큼의 이득을 가져갔는지가 궁금해졌습니다. 예를 들어, 민호가 운영하고 있는 다단계 칫솔 판매 조직이 아래 그림과 같다고 합시다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/69c07bd8-1707-422c-a05d-5de3498b7048/%E1%84%80%E1%85%B3%E1%84%85%E1%85%B5%E1%86%B71.png" alt="그림1.png"></p><p>민호는 center이며, 파란색 네모는 여덟 명의 판매원을 표시한 것입니다. 각각은 자신을 조직에 참여시킨 추천인에 연결되어 피라미드 식의 구조를 이루고 있습니다. 조직의 이익 분배 규칙은 간단합니다. 모든 판매원은 칫솔의 판매에 의하여 발생하는 이익에서 10% 를 계산하여 자신을 조직에 참여시킨 추천인에게 배분하고 나머지는 자신이 가집니다. 모든 판매원은 자신이 칫솔 판매에서 발생한 이익 뿐만 아니라, 자신이 조직에 추천하여 가입시킨 판매원에게서 발생하는 이익의 10% 까지 자신에 이익이 됩니다. 자신에게 발생하는 이익 또한 마찬가지의 규칙으로 자신의 추천인에게 분배됩니다. 단, 10% 를 계산할 때에는 원 단위에서 절사하며, 10%를 계산한 금액이 1 원 미만인 경우에는 이득을 분배하지 않고 자신이 모두 가집니다.</p><p>예를 들어, 아래와 같은 판매 기록이 있다고 가정하겠습니다. 칫솔의 판매에서 발생하는 이익은 개당 100 원으로 정해져 있습니다.</p><div class="table-container"><table><thead><tr><th>판매원</th><th>판매 수량</th><th>이익금</th></tr></thead><tbody><tr><td>young</td><td>12</td><td>1,200 원</td></tr><tr><td>john</td><td>4</td><td>400 원</td></tr><tr><td>tod</td><td>2</td><td>200 원</td></tr><tr><td>emily</td><td>5</td><td>500 원</td></tr><tr><td>mary</td><td>10</td><td>1,000 원</td></tr></tbody></table></div><p>판매원 young 에 의하여 1,200 원의 이익이 발생했습니다. young 은 이 중 10% 에 해당하는 120 원을, 자신을 조직에 참여시킨 추천인인 edward 에게 배분하고 자신은 나머지인 1,080 원을 가집니다. edward 는 young 에게서 받은 120 원 중 10% 인 12 원을 mary 에게 배분하고 자신은 나머지인 108 원을 가집니다. 12 원을 edward 로부터 받은 mary 는 10% 인 1 원을 센터에 (즉, 민호에게) 배분하고 자신은 나머지인 11 원을 가집니다. 이 상태를 그림으로 나타내면 아래와 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/f016005d-6555-4c05-ad39-b413645b9217/%E1%84%80%E1%85%B3%E1%84%85%E1%85%B5%E1%86%B72.png" alt="그림2.png"></p><p>그 후, 판매원 john 에 의하여 400 원의 이익이 발생합니다. john 은 10% 인 40 원을 센터에 배분하고 자신이 나머지인 360 원을 가집니다. 이 상태를 그림으로 나타내면 아래와 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/89418fb8-a704-4856-81e2-f84038d71ee2/%E1%84%80%E1%85%B3%E1%84%85%E1%85%B5%E1%86%B73.png" alt="그림3.png"></p><p>또 그 후에는 판매원 tod 에 의하여 200 원 이익이 발생하는데, tod 자신이 180 원을, 추천인인 jaimie 가 그 중 10% 인 20 원을 받아서 18 원을 가지고, jaimie 의 추천인인 mary 는 2 원을 받지만 이것의 10% 는 원 단위에서 절사하면 배분할 금액이 없기 때문에 mary 는 2 원을 모두 가집니다. 이 상태를 그림으로 나타내면 아래와 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/ec4a60a1-bb7d-45bd-befe-1ea652d094b7/%E1%84%80%E1%85%B3%E1%84%85%E1%85%B5%E1%86%B74.png" alt="그림4.png"></p><p>그 다음으로 emily 가 칫솔 판매를 통하여 얻은 이익 500 원은 마찬가지의 규칙에 따라 emily 에게 450 원, mary 에게 45 원, 그리고 센터에 5 원으로 분배됩니다. 이 상태를 그림으로 나타내면 아래와 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/4fb2164f-71b0-48ff-a2d0-e2fd8133e329/%E1%84%80%E1%85%B3%E1%84%85%E1%85%B5%E1%86%B75.png" alt="그림5.png"></p><p>마지막으로, 판매원 mary 는 1,000 원의 이익을 달성하고, 이 중 10% 인 100 원을 센터에 배분한 후 그 나머지인 900 원을 자신이 가집니다. 이 상태를 그림으로 나타내면 아래와 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/0527a713-4fc4-47db-98d3-49ce6d911dfd/%E1%84%80%E1%85%B3%E1%84%85%E1%85%B5%E1%86%B76.png" alt="그림6.png"></p><p>위와 같이 하여 모든 조직 구성원들의 이익 달성 현황 집계가 끝났습니다. 지금까지 얻은 이익을 모두 합한 결과를 그림으로 나타내면 아래와 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/970f1df0-4f00-480f-93a3-13c7e30b19cb/%E1%84%80%E1%85%B3%E1%84%85%E1%85%B5%E1%86%B77.png" alt="그림7.png"></p><p>이 결과가 민호가 파악하고자 하는 이익 배분 현황입니다.</p><p>각 판매원의 이름을 담은 배열 enroll, 각 판매원을 다단계 조직에 참여시킨 다른 판매원의 이름을 담은 배열 referral, 판매량 집계 데이터의 판매원 이름을 나열한 배열 seller, 판매량 집계 데이터의 판매 수량을 나열한 배열 amount가 매개변수로 주어질 때, 각 판매원이 득한 이익금을 나열한 배열을 return 하도록 solution 함수를 완성해주세요. 판매원에게 배분된 이익금의 총합을 계산하여(정수형으로), 입력으로 주어진 enroll에 이름이 포함된 순서에 따라 나열하면 됩니다.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>enroll의 길이는 1 이상 10,000 이하입니다.<ul><li>enroll에 민호의 이름은 없습니다. 따라서 enroll의 길이는 민호를 제외한 조직 구성원의 총 수입니다.</li></ul></li><li>referral의 길이는 enroll의 길이와 같습니다.<ul><li>referral 내에서 i 번째에 있는 이름은 배열 enroll 내에서 i 번째에 있는 판매원을 조직에 참여시킨 사람의 이름입니다.</li><li>어느 누구의 추천도 없이 조직에 참여한 사람에 대해서는 referral 배열 내에 추천인의 이름이 기입되지 않고 <code>&quot;-&quot;</code> 가 기입됩니다. 위 예제에서는 john 과 mary 가 이러한 예에 해당합니다.</li><li>enroll 에 등장하는 이름은 조직에 참여한 순서에 따릅니다.</li><li>즉, 어느 판매원의 이름이 enroll 의 i 번째에 등장한다면, 이 판매원을 조직에 참여시킨 사람의 이름, 즉 referral 의 i 번째 원소는 이미 배열 enroll 의 j 번째 (j &lt; i) 에 등장했음이 보장됩니다.</li></ul></li><li>seller의 길이는 1 이상 100,000 이하입니다.<ul><li>seller 내의 i 번째에 있는 이름은 i 번째 판매 집계 데이터가 어느 판매원에 의한 것인지를 나타냅니다.</li><li>seller 에는 같은 이름이 중복해서 들어있을 수 있습니다.</li></ul></li><li>amount의 길이는 seller의 길이와 같습니다.<ul><li>amount 내의 i 번째에 있는 수는 i 번째 판매 집계 데이터의 판매량을 나타냅니다.</li><li>판매량의 범위, 즉 amount 의 원소들의 범위는 1 이상 100 이하인 자연수입니다.</li></ul></li><li>칫솔 한 개를 판매하여 얻어지는 이익은 100 원으로 정해져 있습니다.</li><li>모든 조직 구성원들의 이름은 10 글자 이내의 영문 알파벳 소문자들로만 이루어져 있습니다.</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>enroll</th><th>referral</th><th>seller</th><th>amount</th><th>result</th></tr></thead><tbody><tr><td><code>[&quot;john&quot;, &quot;mary&quot;, &quot;edward&quot;, &quot;sam&quot;, &quot;emily&quot;, &quot;jaimie&quot;, &quot;tod&quot;, &quot;young&quot;]</code></td><td><code>[&quot;-&quot;, &quot;-&quot;, &quot;mary&quot;, &quot;edward&quot;, &quot;mary&quot;, &quot;mary&quot;, &quot;jaimie&quot;, &quot;edward&quot;]</code></td><td><code>[&quot;young&quot;, &quot;john&quot;, &quot;tod&quot;, &quot;emily&quot;, &quot;mary&quot;]</code></td><td>[12, 4, 2, 5, 10]</td><td>[360, 958, 108, 0, 450, 18, 180, 1080]</td></tr><tr><td><code>[&quot;john&quot;, &quot;mary&quot;, &quot;edward&quot;, &quot;sam&quot;, &quot;emily&quot;, &quot;jaimie&quot;, &quot;tod&quot;, &quot;young&quot;]</code></td><td><code>[&quot;-&quot;, &quot;-&quot;, &quot;mary&quot;, &quot;edward&quot;, &quot;mary&quot;, &quot;mary&quot;, &quot;jaimie&quot;, &quot;edward&quot;]</code></td><td><code>[&quot;sam&quot;, &quot;emily&quot;, &quot;jaimie&quot;, &quot;edward&quot;]</code></td><td>[2, 3, 5, 4]</td><td>[0, 110, 378, 180, 270, 450, 0, 0]</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1</p><p>문제의 예시와 같습니다.</p><p>입출력 예 #2</p><p>문제에 주어진 예시와 동일한 조직 구성에 조금 다른 판매량 집계를 적용한 것입니다. 이익을 분배하는 규칙이 동일하므로, 간단한 계산에 의하여 표에 보인 결과를 얻을 수 있습니다.</p><p>※ 공지 - 2021년 5월 21일 테스트케이스가 추가되었습니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">enroll, referral, seller, amount</span>):</span></span><br><span class="line">    tree = &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> e_i, e <span class="keyword">in</span> <span class="built_in">enumerate</span>(enroll):</span><br><span class="line">        ref = referral[e_i]</span><br><span class="line">        tree[e] = [ref,<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> s_i, s <span class="keyword">in</span> <span class="built_in">enumerate</span>(seller):</span><br><span class="line">        div_amnt = (amount[s_i] * <span class="number">100</span>) // <span class="number">10</span></span><br><span class="line">        tree[s][<span class="number">1</span>] += (amount[s_i] * <span class="number">100</span> - div_amnt)</span><br><span class="line">        ref = tree[s][<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">while</span> ref != <span class="string">&#x27;-&#x27;</span> <span class="keyword">and</span> div_amnt != <span class="number">0</span>:</span><br><span class="line">            new_div_amnt = div_amnt // <span class="number">10</span></span><br><span class="line">            tree[ref][<span class="number">1</span>] += div_amnt - new_div_amnt</span><br><span class="line">            div_amnt = new_div_amnt</span><br><span class="line">            ref = tree[ref][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x[<span class="number">1</span>],tree.values()))</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><ul><li>전체 금액의 합산(판매금액 선 계산)을 통해서 계산하는 방식은 거듭 실패했다.</li><li><code>seller</code>의 각 계산을 모두 거슬러 추적하는 방식의 풀이가 통과되었다.</li><li>추적하는 과정에서 딕셔너리를 사용해 효율성을 높였다.</li><li>파이썬에서는 <code>float</code>의 계산 오류가 심하다. 따라서 <code>//</code> 연산을 지향해야 한다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv3/">lv3</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv3/">lv3</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/17/7f954d7943aa/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV4) 입양 시각 구하기(2)</title>
      <link>https://sklubmk.github.io/2021/09/16/57f930b1b640/</link>
      <guid>https://sklubmk.github.io/2021/09/16/57f930b1b640/</guid>
      <pubDate>Thu, 16 Sep 2021 12:33:11 GMT</pubDate>
      
      <description>&lt;p&gt;MySQL&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>MySQL<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_OUTCOME</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p>보호소에서는 몇 시에 입양이 가장 활발하게 일어나는지 알아보려 합니다. 0시부터 23시까지, 각 시간대별로 입양이 몇 건이나 발생했는지 조회하는 SQL문을 작성해주세요. 이때 결과는 시간대 순으로 정렬해야 합니다.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>SQL문을 실행하면 다음과 같이 나와야 합니다.</p><div class="table-container"><table><thead><tr><th>HOUR</th><th>COUNT</th></tr></thead><tbody><tr><td>0</td><td>0</td></tr><tr><td>1</td><td>0</td></tr><tr><td>2</td><td>0</td></tr><tr><td>3</td><td>0</td></tr><tr><td>4</td><td>0</td></tr><tr><td>5</td><td>0</td></tr><tr><td>6</td><td>0</td></tr><tr><td>7</td><td>3</td></tr><tr><td>8</td><td>1</td></tr><tr><td>9</td><td>1</td></tr><tr><td>10</td><td>2</td></tr><tr><td>11</td><td>13</td></tr><tr><td>12</td><td>10</td></tr><tr><td>13</td><td>14</td></tr><tr><td>14</td><td>9</td></tr><tr><td>15</td><td>7</td></tr><tr><td>16</td><td>10</td></tr><tr><td>17</td><td>12</td></tr><tr><td>18</td><td>16</td></tr><tr><td>19</td><td>2</td></tr><tr><td>20</td><td>0</td></tr><tr><td>21</td><td>0</td></tr><tr><td>22</td><td>0</td></tr><tr><td>23</td><td>0</td></tr></tbody></table></div><hr><p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes">Kaggle의 “Austin Animal Center Shelter Intakes and Outcomes”</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/">ODbL</a>의 적용을 받습니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> <span class="keyword">RECURSIVE</span> TIMETABLE(<span class="keyword">HOUR</span>) <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">UNION</span></span><br><span class="line">    <span class="keyword">SELECT</span> TIMETABLE.HOUR <span class="operator">+</span> <span class="number">1</span> <span class="keyword">FROM</span> TIMETABLE <span class="keyword">WHERE</span> TIMETABLE.HOUR <span class="operator">&lt;</span> <span class="number">23</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>, <span class="built_in">COUNT</span>(A.ANIMAL_ID)</span><br><span class="line"><span class="keyword">FROM</span> TIMETABLE <span class="keyword">AS</span> T </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> ANIMAL_OUTS <span class="keyword">AS</span> A </span><br><span class="line"><span class="keyword">ON</span> T.HOUR <span class="operator">=</span> <span class="keyword">HOUR</span>(A.DATETIME)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">HOUR</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">HOUR</span></span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv4/">lv4</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv4/">lv4</category>
      
      <category domain="https://sklubmk.github.io/tags/MySQL/">MySQL</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/16/57f930b1b640/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV4) 보호소에서 중성화한 동물</title>
      <link>https://sklubmk.github.io/2021/09/14/442fd5b565c0/</link>
      <guid>https://sklubmk.github.io/2021/09/14/442fd5b565c0/</guid>
      <pubDate>Mon, 13 Sep 2021 17:11:18 GMT</pubDate>
      
      <description>&lt;p&gt;MySQL&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>MySQL<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p><code>ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. <code>ANIMAL_INS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>INTAKE_CONDITION</code>, <code>NAME</code>, <code>SEX_UPON_INTAKE</code>는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>INTAKE_CONDITION</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_INTAKE</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. <code>ANIMAL_OUTS</code> 테이블의 <code>ANIMAL_ID</code>는 <code>ANIMAL_INS</code>의 <code>ANIMAL_ID</code>의 외래 키입니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_OUTCOME</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p>보호소에서 중성화 수술을 거친 동물 정보를 알아보려 합니다. 보호소에 들어올 당시에는 중성화<a href="https://programmers.co.kr/learn/courses/30/lessons/59045#fn1">1</a>되지 않았지만, 보호소를 나갈 당시에는 중성화된 동물의 아이디와 생물 종, 이름을 조회하는 아이디 순으로 조회하는 SQL 문을 작성해주세요.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>예를 들어, <code>ANIMAL_INS</code> 테이블과 <code>ANIMAL_OUTS</code> 테이블이 다음과 같다면</p><p><code>ANIMAL_INS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>INTAKE_CONDITION</th><th>NAME</th><th>SEX_UPON_INTAKE</th></tr></thead><tbody><tr><td>A367438</td><td>Dog</td><td>2015-09-10 16:01:00</td><td>Normal</td><td>Cookie</td><td>Spayed Female</td></tr><tr><td>A382192</td><td>Dog</td><td>2015-03-13 13:14:00</td><td>Normal</td><td>Maxwell 2</td><td>Intact Male</td></tr><tr><td>A405494</td><td>Dog</td><td>2014-05-16 14:17:00</td><td>Normal</td><td>Kaila</td><td>Spayed Female</td></tr><tr><td>A410330</td><td>Dog</td><td>2016-09-11 14:09:00</td><td>Sick</td><td>Chewy</td><td>Intact Female</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>NAME</th><th>SEX_UPON_OUTCOME</th></tr></thead><tbody><tr><td>A367438</td><td>Dog</td><td>2015-09-12 13:30:00</td><td>Cookie</td><td>Spayed Female</td></tr><tr><td>A382192</td><td>Dog</td><td>2015-03-16 13:46:00</td><td>Maxwell 2</td><td>Neutered Male</td></tr><tr><td>A405494</td><td>Dog</td><td>2014-05-20 11:44:00</td><td>Kaila</td><td>Spayed Female</td></tr><tr><td>A410330</td><td>Dog</td><td>2016-09-13 13:46:00</td><td>Chewy</td><td>Spayed Female</td></tr></tbody></table></div><ul><li>Cookie는 보호소에 들어올 당시에 이미 중성화되어있었습니다.</li><li>Maxwell 2는 보호소에 들어온 후 중성화되었습니다.</li><li>Kaila는 보호소에 들어올 당시에 이미 중성화되어있었습니다.</li><li>Chewy는 보호소에 들어온 후 중성화되었습니다.</li></ul><p>따라서 SQL문을 실행하면 다음과 같이 나와야 합니다.</p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>NAME</th></tr></thead><tbody><tr><td>A382192</td><td>Dog</td><td>Maxwell 2</td></tr><tr><td>A410330</td><td>Dog</td><td>Chewy</td></tr></tbody></table></div><hr><p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes">Kaggle의 “Austin Animal Center Shelter Intakes and Outcomes”</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/">ODbL</a>의 적용을 받습니다.</p><hr><ol><li>중성화를 거치지 않은 동물은 <code>성별 및 중성화 여부</code>에 Intact, 중성화를 거친 동물은 <code>Spayed</code> 또는 <code>Neutered</code>라고 표시되어있습니다. <a href="https://programmers.co.kr/learn/courses/30/lessons/59045#fnref1">↩</a></li></ol></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> INS.ANIMAL_ID, INS.ANIMAL_TYPE, INS.NAME</span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS <span class="keyword">AS</span> INS</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> ANIMAL_OUTS <span class="keyword">AS</span> OUTS</span><br><span class="line"><span class="keyword">ON</span> INS.ANIMAL_ID <span class="operator">=</span> OUTS.ANIMAL_ID</span><br><span class="line"><span class="keyword">WHERE</span> INS.SEX_UPON_INTAKE <span class="keyword">LIKE</span> <span class="string">&#x27;Intact%&#x27;</span> <span class="keyword">and</span></span><br><span class="line">OUTS.SEX_UPON_OUTCOME <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">&#x27;Intact%&#x27;</span></span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv4/">lv4</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv4/">lv4</category>
      
      <category domain="https://sklubmk.github.io/tags/MySQL/">MySQL</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/14/442fd5b565c0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV4) 우유와 요거트가 담긴 장바구니</title>
      <link>https://sklubmk.github.io/2021/09/13/d68b44c0f977/</link>
      <guid>https://sklubmk.github.io/2021/09/13/d68b44c0f977/</guid>
      <pubDate>Mon, 13 Sep 2021 09:23:24 GMT</pubDate>
      
      <description>&lt;p&gt;MySQL&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>MySQL<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p><code>CART_PRODUCTS</code> 테이블은 장바구니에 담긴 상품 정보를 담은 테이블입니다. <code>CART_PRODUCTS</code> 테이블의 구조는 다음과 같으며, <code>ID</code>, <code>CART_ID</code>, <code>NAME</code>, <code>PRICE</code>는 각각 테이블의 아이디, 장바구니의 아이디, 상품 종류, 가격을 나타냅니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th></tr></thead><tbody><tr><td>ID</td><td>INT</td></tr><tr><td>CART_ID</td><td>INT</td></tr><tr><td>NAME</td><td>VARCHAR</td></tr><tr><td>PRICE</td><td>INT</td></tr></tbody></table></div><p>데이터 분석 팀에서는 우유(Milk)와 요거트(Yogurt)를 동시에 구입한 장바구니가 있는지 알아보려 합니다. 우유와 요거트를 동시에 구입한 장바구니의 아이디를 조회하는 SQL 문을 작성해주세요. 이때 결과는 장바구니의 아이디 순으로 나와야 합니다.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>예를 들어 <code>CART_PRODUCTS</code> 테이블이 다음과 같다면</p><p><code>CART_PRODUCTS</code> 테이블</p><div class="table-container"><table><thead><tr><th>ID</th><th>CART_ID</th><th>NAME</th><th>PRICE</th></tr></thead><tbody><tr><td>1630</td><td>83</td><td>Cereal</td><td>3980</td></tr><tr><td>1631</td><td>83</td><td>Multipurpose Supply</td><td>3900</td></tr><tr><td>5491</td><td>286</td><td>Yogurt</td><td>2980</td></tr><tr><td>5504</td><td>286</td><td>Milk</td><td>1880</td></tr><tr><td>8435</td><td>448</td><td>Milk</td><td>1880</td></tr><tr><td>8437</td><td>448</td><td>Yogurt</td><td>2980</td></tr><tr><td>8438</td><td>448</td><td>Tea</td><td>11000</td></tr><tr><td>20236</td><td>1034</td><td>Yogurt</td><td>2980</td></tr><tr><td>20237</td><td>1034</td><td>Butter</td><td>4890</td></tr></tbody></table></div><ul><li>83번 장바구니에는 Milk와 Yogurt가 모두 없습니다.</li><li>286번 장바구니에는 Milk와 Yogurt가 모두 있습니다.</li><li>448번 장바구니에는 Milk와 Yogurt가 모두 있습니다.</li><li>1034번 장바구니에는 Milk는 없고 Yogurt만 있습니다.</li></ul><p>따라서 SQL 문을 실행하면 다음과 같이 나와야 합니다.</p><div class="table-container"><table><thead><tr><th>CART_ID</th></tr></thead><tbody><tr><td>286</td></tr><tr><td>448</td></tr></tbody></table></div></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CART_ID</span><br><span class="line"><span class="keyword">FROM</span> CART_PRODUCTS</span><br><span class="line"><span class="keyword">WHERE</span> NAME <span class="keyword">IN</span> (<span class="string">&#x27;Yogurt&#x27;</span>,<span class="string">&#x27;Milk&#x27;</span>)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> CART_ID</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> NAME) <span class="operator">&gt;=</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> CART_ID</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv4/">lv4</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv4/">lv4</category>
      
      <category domain="https://sklubmk.github.io/tags/MySQL/">MySQL</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/13/d68b44c0f977/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV3) 오랜 기간 보호한 동물(2)</title>
      <link>https://sklubmk.github.io/2021/09/09/debf24ba53bc/</link>
      <guid>https://sklubmk.github.io/2021/09/09/debf24ba53bc/</guid>
      <pubDate>Thu, 09 Sep 2021 13:41:01 GMT</pubDate>
      
      <description>&lt;p&gt;MySQL&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>MySQL<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p><code>ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. <code>ANIMAL_INS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>INTAKE_CONDITION</code>, <code>NAME</code>, <code>SEX_UPON_INTAKE</code>는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>INTAKE_CONDITION</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_INTAKE</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. <code>ANIMAL_OUTS</code> 테이블의 <code>ANIMAL_ID</code>는 <code>ANIMAL_INS</code>의 <code>ANIMAL_ID</code>의 외래 키입니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_OUTCOME</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p>입양을 간 동물 중, 보호 기간이 가장 길었던 동물 두 마리의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 기간이 긴 순으로 조회해야 합니다.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>예를 들어, <code>ANIMAL_INS</code> 테이블과 <code>ANIMAL_OUTS</code> 테이블이 다음과 같다면</p><p><code>ANIMAL_INS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>INTAKE_CONDITION</th><th>NAME</th><th>SEX_UPON_INTAKE</th></tr></thead><tbody><tr><td>A354597</td><td>Cat</td><td>2014-05-02 12:16:00</td><td>Normal</td><td>Ariel</td><td>Spayed Female</td></tr><tr><td>A362707</td><td>Dog</td><td>2016-01-27 12:27:00</td><td>Sick</td><td>Girly Girl</td><td>Spayed Female</td></tr><tr><td>A370507</td><td>Cat</td><td>2014-10-27 14:43:00</td><td>Normal</td><td>Emily</td><td>Spayed Female</td></tr><tr><td>A414513</td><td>Dog</td><td>2016-06-07 09:17:00</td><td>Normal</td><td>Rocky</td><td>Neutered Male</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>NAME</th><th>SEX_UPON_OUTCOME</th></tr></thead><tbody><tr><td>A354597</td><td>Cat</td><td>2014-06-03 12:30:00</td><td>Ariel</td><td>Spayed Female</td></tr><tr><td>A362707</td><td>Dog</td><td>2017-01-10 10:44:00</td><td>Girly Girl</td><td>Spayed Female</td></tr><tr><td>A370507</td><td>Cat</td><td>2015-08-15 09:24:00</td><td>Emily</td><td>Spayed Female</td></tr></tbody></table></div><p>SQL문을 실행하면 다음과 같이 나와야 합니다.</p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>NAME</th></tr></thead><tbody><tr><td>A362707</td><td>Girly Girl</td></tr><tr><td>A370507</td><td>Emily</td></tr></tbody></table></div><p>※ 입양을 간 동물이 2마리 이상인 경우만 입력으로 주어집니다.</p><hr><p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes">Kaggle의 “Austin Animal Center Shelter Intakes and Outcomes”</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/">ODbL</a>의 적용을 받습니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.ANIMAL_ID, A.NAME</span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS <span class="keyword">AS</span> A </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> ANIMAL_OUTS <span class="keyword">AS</span> B</span><br><span class="line"><span class="keyword">ON</span> A.ANIMAL_ID <span class="operator">=</span> B.ANIMAL_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> DATEDIFF(B.DATETIME,A.DATETIME) <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv3/">lv3</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/MySQL/">MySQL</category>
      
      <category domain="https://sklubmk.github.io/tags/lv3/">lv3</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/09/debf24ba53bc/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV3) 헤비 유저가 소유한 장소</title>
      <link>https://sklubmk.github.io/2021/09/09/937e1ccf150a/</link>
      <guid>https://sklubmk.github.io/2021/09/09/937e1ccf150a/</guid>
      <pubDate>Thu, 09 Sep 2021 13:40:40 GMT</pubDate>
      
      <description>&lt;p&gt;MySQL&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>MySQL<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p><code>PLACES</code> 테이블은 공간 임대 서비스에 등록된 공간의 정보를 담은 테이블입니다. <code>PLACES</code> 테이블의 구조는 다음과 같으며 <code>ID</code>, <code>NAME</code>, <code>HOST_ID</code>는 각각 공간의 아이디, 이름, 공간을 소유한 유저의 아이디를 나타냅니다. <code>ID</code>는 기본키입니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th></tr></thead><tbody><tr><td>ID</td><td>INT</td></tr><tr><td>NAME</td><td>VARCHAR</td></tr><tr><td>HOST_ID</td><td>INT</td></tr></tbody></table></div><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p>이 서비스에서는 공간을 둘 이상 등록한 사람을 “헤비 유저”라고 부릅니다. 헤비 유저가 등록한 공간의 정보를 아이디 순으로 조회하는 SQL문을 작성해주세요.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>예를 들어, <code>PLACES</code> 테이블이 다음과 같다면</p><div class="table-container"><table><thead><tr><th>ID</th><th>NAME</th><th>HOST_ID</th></tr></thead><tbody><tr><td>4431977</td><td>BOUTIQUE STAYS - Somerset Terrace, Pet Friendly</td><td>760849</td></tr><tr><td>5194998</td><td>BOUTIQUE STAYS - Elwood Beaches 3, Pet Friendly</td><td>760849</td></tr><tr><td>16045624</td><td>Urban Jungle in the Heart of Melbourne</td><td>30900122</td></tr><tr><td>17810814</td><td>Stylish Bayside Retreat with a Luscious Garden</td><td>760849</td></tr><tr><td>22740286</td><td>FREE PARKING - The Velvet Lux in Melbourne CBD</td><td>30900122</td></tr><tr><td>22868779</td><td>★ Fresh Fitzroy Pad with City Views! ★</td><td>21058208</td></tr></tbody></table></div><ul><li>760849번 유저는 공간을 3개 등록했으므로 이 유저는 헤비유저입니다.</li><li>30900122번 유저는 공간을 2개 등록했으므로 이 유저는 헤비유저입니다.</li><li>21058208번 유저는 공간을 1개 등록했으므로 이 유저는 헤비유저가 아닙니다.</li></ul><p>따라서 SQL 문을 실행하면 다음과 같이 나와야 합니다.</p><div class="table-container"><table><thead><tr><th>ID</th><th>NAME</th><th>HOST_ID</th></tr></thead><tbody><tr><td>4431977</td><td>BOUTIQUE STAYS - Somerset Terrace, Pet Friendly</td><td>760849</td></tr><tr><td>5194998</td><td>BOUTIQUE STAYS - Elwood Beaches 3, Pet Friendly</td><td>760849</td></tr><tr><td>16045624</td><td>Urban Jungle in the Heart of Melbourne</td><td>30900122</td></tr><tr><td>17810814</td><td>Stylish Bayside Retreat with a Luscious Garden</td><td>760849</td></tr><tr><td>22740286</td><td>FREE PARKING - The Velvet Lux in Melbourne CBD</td><td>30900122</td></tr></tbody></table></div></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ID, NAME, HOST_ID</span><br><span class="line"><span class="keyword">FROM</span> PLACES</span><br><span class="line"><span class="keyword">WHERE</span> HOST_ID <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> HOST_ID</span><br><span class="line">    <span class="keyword">FROM</span> PLACES</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> HOST_ID</span><br><span class="line">    <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(HOST_ID) <span class="operator">&gt;</span> <span class="number">1</span></span><br><span class="line">    )</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ID</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv3/">lv3</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/MySQL/">MySQL</category>
      
      <category domain="https://sklubmk.github.io/tags/lv3/">lv3</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/09/937e1ccf150a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV3) 오랜 기간 보호한 동물(1)</title>
      <link>https://sklubmk.github.io/2021/09/09/ab81954e9866/</link>
      <guid>https://sklubmk.github.io/2021/09/09/ab81954e9866/</guid>
      <pubDate>Thu, 09 Sep 2021 13:40:18 GMT</pubDate>
      
      <description>&lt;p&gt;MySQL&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>MySQL<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p><code>ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. <code>ANIMAL_INS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>INTAKE_CONDITION</code>, <code>NAME</code>, <code>SEX_UPON_INTAKE</code>는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>INTAKE_CONDITION</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_INTAKE</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. <code>ANIMAL_OUTS</code> 테이블의 <code>ANIMAL_ID</code>는 <code>ANIMAL_INS</code>의 <code>ANIMAL_ID</code>의 외래 키입니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_OUTCOME</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p>아직 입양을 못 간 동물 중, 가장 오래 보호소에 있었던 동물 3마리의 이름과 보호 시작일을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일 순으로 조회해야 합니다.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>예를 들어, <code>ANIMAL_INS</code> 테이블과 <code>ANIMAL_OUTS</code> 테이블이 다음과 같다면</p><p><code>ANIMAL_INS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>INTAKE_CONDITION</th><th>NAME</th><th>SEX_UPON_INTAKE</th></tr></thead><tbody><tr><td>A354597</td><td>Cat</td><td>2014-05-02 12:16:00</td><td>Normal</td><td>Ariel</td><td>Spayed Female</td></tr><tr><td>A373687</td><td>Dog</td><td>2014-03-20 12:31:00</td><td>Normal</td><td>Rosie</td><td>Spayed Female</td></tr><tr><td>A412697</td><td>Dog</td><td>2016-01-03 16:25:00</td><td>Normal</td><td>Jackie</td><td>Neutered Male</td></tr><tr><td>A413789</td><td>Dog</td><td>2016-04-19 13:28:00</td><td>Normal</td><td>Benji</td><td>Spayed Female</td></tr><tr><td>A414198</td><td>Dog</td><td>2015-01-29 15:01:00</td><td>Normal</td><td>Shelly</td><td>Spayed Female</td></tr><tr><td>A368930</td><td>Dog</td><td>2014-06-08 13:20:00</td><td>Normal</td><td></td><td>Spayed Female</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>NAME</th><th>SEX_UPON_OUTCOME</th></tr></thead><tbody><tr><td>A354597</td><td>Cat</td><td>2014-05-02 12:16:00</td><td>Ariel</td><td>Spayed Female</td></tr><tr><td>A373687</td><td>Dog</td><td>2014-03-20 12:31:00</td><td>Rosie</td><td>Spayed Female</td></tr><tr><td>A368930</td><td>Dog</td><td>2014-06-13 15:52:00</td><td></td><td>Spayed Female</td></tr></tbody></table></div><p>SQL문을 실행하면 다음과 같이 나와야 합니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>DATETIME</th></tr></thead><tbody><tr><td>Shelly</td><td>2015-01-29 15:01:00</td></tr><tr><td>Jackie</td><td>2016-01-03 16:25:00</td></tr><tr><td>Benji</td><td>2016-04-19 13:28:00</td></tr></tbody></table></div><p>※ 입양을 가지 못한 동물이 3마리 이상인 경우만 입력으로 주어집니다.</p><hr><p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes">Kaggle의 “Austin Animal Center Shelter Intakes and Outcomes”</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/">ODbL</a>의 적용을 받습니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME, DATETIME</span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line"><span class="keyword">WHERE</span> ANIMAL_ID <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> ANIMAL_ID <span class="keyword">FROM</span> ANIMAL_OUTS)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> DATETIME</span><br><span class="line">LIMIT <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv3/">lv3</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/MySQL/">MySQL</category>
      
      <category domain="https://sklubmk.github.io/tags/lv3/">lv3</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/09/ab81954e9866/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV3) 있었는데요 없었습니다</title>
      <link>https://sklubmk.github.io/2021/09/09/3aa14c928f79/</link>
      <guid>https://sklubmk.github.io/2021/09/09/3aa14c928f79/</guid>
      <pubDate>Thu, 09 Sep 2021 13:33:56 GMT</pubDate>
      
      <description>&lt;p&gt;MySQL&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>MySQL<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p><code>ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. <code>ANIMAL_INS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>INTAKE_CONDITION</code>, <code>NAME</code>, <code>SEX_UPON_INTAKE</code>는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>INTAKE_CONDITION</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_INTAKE</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. <code>ANIMAL_OUTS</code> 테이블의 <code>ANIMAL_ID</code>는 <code>ANIMAL_INS</code>의 <code>ANIMAL_ID</code>의 외래 키입니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_OUTCOME</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p>관리자의 실수로 일부 동물의 입양일이 잘못 입력되었습니다. 보호 시작일보다 입양일이 더 빠른 동물의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일이 빠른 순으로 조회해야합니다.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>예를 들어, <code>ANIMAL_INS</code> 테이블과 <code>ANIMAL_OUTS</code> 테이블이 다음과 같다면</p><p><code>ANIMAL_INS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>INTAKE_CONDITION</th><th>NAME</th><th>SEX_UPON_INTAKE</th></tr></thead><tbody><tr><td>A350276</td><td>Cat</td><td>2017-08-13 13:50:00</td><td>Normal</td><td>Jewel</td><td>Spayed Female</td></tr><tr><td>A381217</td><td>Dog</td><td>2017-07-08 09:41:00</td><td>Sick</td><td>Cherokee</td><td>Neutered Male</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>NAME</th><th>SEX_UPON_OUTCOME</th></tr></thead><tbody><tr><td>A350276</td><td>Cat</td><td>2018-01-28 17:51:00</td><td>Jewel</td><td>Spayed Female</td></tr><tr><td>A381217</td><td>Dog</td><td>2017-06-09 18:51:00</td><td>Cherokee</td><td>Neutered Male</td></tr></tbody></table></div><p>SQL문을 실행하면 다음과 같이 나와야 합니다.</p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>NAME</th></tr></thead><tbody><tr><td>A381217</td><td>Cherokee</td></tr></tbody></table></div><hr><p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes">Kaggle의 “Austin Animal Center Shelter Intakes and Outcomes”</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/">ODbL</a>의 적용을 받습니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.ANIMAL_ID, A.NAME</span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS A, ANIMAL_OUTS B</span><br><span class="line"><span class="keyword">WHERE</span> A.ANIMAL_ID <span class="operator">=</span> B.ANIMAL_ID </span><br><span class="line"><span class="keyword">and</span> A.DATETIME <span class="operator">&gt;</span> B.DATETIME</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> A.DATETIME;</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv3/">lv3</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/MySQL/">MySQL</category>
      
      <category domain="https://sklubmk.github.io/tags/lv3/">lv3</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/09/3aa14c928f79/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV3) 없어진 기록 찾기</title>
      <link>https://sklubmk.github.io/2021/09/08/60644356a94f/</link>
      <guid>https://sklubmk.github.io/2021/09/08/60644356a94f/</guid>
      <pubDate>Wed, 08 Sep 2021 07:23:25 GMT</pubDate>
      
      <description>&lt;p&gt;MySQL&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>MySQL<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p><code>ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. <code>ANIMAL_INS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>INTAKE_CONDITION</code>, <code>NAME</code>, <code>SEX_UPON_INTAKE</code>는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>INTAKE_CONDITION</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_INTAKE</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. <code>ANIMAL_OUTS</code> 테이블의 <code>ANIMAL_ID</code>는 <code>ANIMAL_INS</code>의 <code>ANIMAL_ID</code>의 외래 키입니다.</p><div class="table-container"><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_OUTCOME</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table></div><p>천재지변으로 인해 일부 데이터가 유실되었습니다. 입양을 간 기록은 있는데, 보호소에 들어온 기록이 없는 동물의 ID와 이름을 ID 순으로 조회하는 SQL문을 작성해주세요.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>예를 들어, <code>ANIMAL_INS</code> 테이블과 <code>ANIMAL_OUTS</code> 테이블이 다음과 같다면</p><p><code>ANIMAL_INS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>INTAKE_CONDITION</th><th>NAME</th><th>SEX_UPON_INTAKE</th></tr></thead><tbody><tr><td>A352713</td><td>Cat</td><td>2017-04-13 16:29:00</td><td>Normal</td><td>Gia</td><td>Spayed Female</td></tr><tr><td>A350375</td><td>Cat</td><td>2017-03-06 15:01:00</td><td>Normal</td><td>Meo</td><td>Neutered Male</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code></p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>ANIMAL_TYPE</th><th>DATETIME</th><th>NAME</th><th>SEX_UPON_OUTCOME</th></tr></thead><tbody><tr><td>A349733</td><td>Dog</td><td>2017-09-27 19:09:00</td><td>Allie</td><td>Spayed Female</td></tr><tr><td>A352713</td><td>Cat</td><td>2017-04-25 12:25:00</td><td>Gia</td><td>Spayed Female</td></tr><tr><td>A349990</td><td>Cat</td><td>2018-02-02 14:18:00</td><td>Spice</td><td>Spayed Female</td></tr></tbody></table></div><p><code>ANIMAL_OUTS</code> 테이블에서</p><ul><li>Allie의 ID는 <code>ANIMAL_INS</code>에 없으므로, Allie의 데이터는 유실되었습니다.</li><li>Gia의 ID는 <code>ANIMAL_INS</code>에 있으므로, Gia의 데이터는 유실되지 않았습니다.</li><li>Spice의 ID는 <code>ANIMAL_INS</code>에 없으므로, Spice의 데이터는 유실되었습니다.</li></ul><p>따라서 SQL문을 실행하면 다음과 같이 나와야 합니다.</p><div class="table-container"><table><thead><tr><th>ANIMAL_ID</th><th>NAME</th></tr></thead><tbody><tr><td>A349733</td><td>Allie</td></tr><tr><td>A349990</td><td>Spice</td></tr></tbody></table></div><hr><p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes">Kaggle의 “Austin Animal Center Shelter Intakes and Outcomes”</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/">ODbL</a>의 적용을 받습니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ANIMAL_ID, NAME</span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_OUTS</span><br><span class="line"><span class="keyword">WHERE</span> ANIMAL_ID <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> ANIMAL_ID <span class="keyword">FROM</span> ANIMAL_INS)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ANIMAL_ID</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv3/">lv3</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/MySQL/">MySQL</category>
      
      <category domain="https://sklubmk.github.io/tags/lv3/">lv3</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/08/60644356a94f/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 복서 정렬하기</title>
      <link>https://sklubmk.github.io/2021/09/06/62bfc11a1271/</link>
      <guid>https://sklubmk.github.io/2021/09/06/62bfc11a1271/</guid>
      <pubDate>Mon, 06 Sep 2021 09:55:26 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p>복서 선수들의 몸무게 weights와, 복서 선수들의 전적을 나타내는 head2head가 매개변수로 주어집니다. 복서 선수들의 번호를 다음과 같은 순서로 정렬한 후 return 하도록 solution 함수를 완성해주세요.</p><ol><li>전체 승률이 높은 복서의 번호가 앞쪽으로 갑니다. 아직 다른 복서랑 붙어본 적이 없는 복서의 승률은 0%로 취급합니다.</li><li>승률이 동일한 복서의 번호들 중에서는 자신보다 몸무게가 무거운 복서를 이긴 횟수가 많은 복서의 번호가 앞쪽으로 갑니다.</li><li>자신보다 무거운 복서를 이긴 횟수까지 동일한 복서의 번호들 중에서는 자기 몸무게가 무거운 복서의 번호가 앞쪽으로 갑니다.</li><li>자기 몸무게까지 동일한 복서의 번호들 중에서는 작은 번호가 앞쪽으로 갑니다.</li></ol><hr><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>weights의 길이는 2 이상 1,000 이하입니다.<ul><li>weights의 모든 값은 45 이상 150 이하의 정수입니다.</li><li><code>weights[i]</code> 는 i+1번 복서의 몸무게(kg)를 의미합니다.</li></ul></li><li>head2head의 길이는 weights의 길이와 같습니다.<ul><li>head2head의 모든 문자열은 길이가 weights의 길이와 동일하며, ‘N’, ‘W’, ‘L’로 이루어진 문자열입니다.</li><li><code>head2head[i]</code> 는 i+1번 복서의 전적을 의미하며, <code>head2head[i][j]</code>는 i+1번 복서와 j+1번 복서의 매치 결과를 의미합니다.<ul><li>‘N’ (None)은 두 복서가 아직 붙어본 적이 없음을 의미합니다.</li><li>‘W’ (Win)는 i+1번 복서가 j+1번 복서를 이겼음을 의미합니다.</li><li>‘L’ (Lose)는 i+1번 복사가 j+1번 복서에게 졌음을 의미합니다.</li></ul></li><li>임의의 i에 대해서 <code>head2head[i][i]</code> 는 항상 ‘N’입니다. 자기 자신과 싸울 수는 없기 때문입니다.</li><li>임의의 i, j에 대해서 <code>head2head[i][j]</code> = ‘W’ 이면, <code>head2head[j][i]</code> = ‘L’입니다.</li><li>임의의 i, j에 대해서 <code>head2head[i][j]</code> = ‘L’ 이면, <code>head2head[j][i]</code> = ‘W’입니다.</li><li>임의의 i, j에 대해서 <code>head2head[i][j]</code> = ‘N’ 이면, <code>head2head[j][i]</code> = ‘N’입니다.</li></ul></li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>weights</th><th>head2head</th><th>result</th></tr></thead><tbody><tr><td><code>[50,82,75,120]</code></td><td><code>[&quot;NLWL&quot;,&quot;WNLL&quot;,&quot;LWNW&quot;,&quot;WWLN&quot;]</code></td><td><code>[3,4,1,2]</code></td></tr><tr><td><code>[145,92,86]</code></td><td><code>[&quot;NLW&quot;,&quot;WNL&quot;,&quot;LWN&quot;]</code></td><td><code>[2,3,1]</code></td></tr><tr><td><code>[60,70,60]</code></td><td><code>[&quot;NNN&quot;,&quot;NNN&quot;,&quot;NNN&quot;]</code></td><td><code>[2,1,3]</code></td></tr></tbody></table></div><hr><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1</p><ul><li>다음은 선수들의 정보를 나타낸 표입니다.</li></ul><div class="table-container"><table><thead><tr><th>선수 번호</th><th>vs 1번</th><th>vs 2번</th><th>vs 3번</th><th>vs 4번</th><th>승률</th><th>자기보다 무거운 복서를 이긴 횟수</th><th>몸무게</th></tr></thead><tbody><tr><td>1번</td><td>-</td><td>패배</td><td>승리</td><td>패배</td><td>33.33%</td><td>1회</td><td>50kg</td></tr><tr><td>2번</td><td>승리</td><td>-</td><td>패배</td><td>패배</td><td>33.33%</td><td>0회</td><td>82kg</td></tr><tr><td>3번</td><td>패배</td><td>승리</td><td>-</td><td>승리</td><td>66.66%</td><td>2회</td><td>75kg</td></tr><tr><td>4번</td><td>승리</td><td>승리</td><td>패배</td><td>-</td><td>66.66%</td><td>0회</td><td>120kg</td></tr></tbody></table></div><ul><li>본문에 서술된 우선순위를 따라 <code>[3,4,1,2]</code> 를 return 합니다.</li></ul><p>입출력 예 #2</p><ul><li>다음은 선수들의 정보를 나타낸 표입니다.</li></ul><div class="table-container"><table><thead><tr><th>선수 번호</th><th>vs 1번</th><th>vs 2번</th><th>vs 3번</th><th>승률</th><th>자기보다 무거운 복서를 이긴 횟수</th><th>몸무게</th></tr></thead><tbody><tr><td>1번</td><td>-</td><td>패배</td><td>승리</td><td>50%</td><td>0회</td><td>145kg</td></tr><tr><td>2번</td><td>승리</td><td>-</td><td>패배</td><td>50%</td><td>1회</td><td>92kg</td></tr><tr><td>3번</td><td>패배</td><td>승리</td><td>-</td><td>50%</td><td>1회</td><td>86kg</td></tr></tbody></table></div><ul><li>본문에 서술된 우선순위를 따라 <code>[2,3,1]</code> 을 return 합니다.</li></ul><p>입출력 예 #3</p><ul><li>다음은 선수들의 정보를 나타낸 표입니다.</li></ul><div class="table-container"><table><thead><tr><th>선수 번호</th><th>vs 1번</th><th>vs 2번</th><th>vs 3번</th><th>승률</th><th>자기보다 무거운 복서를 이긴 횟수</th><th>몸무게</th></tr></thead><tbody><tr><td>1번</td><td>-</td><td>-</td><td>-</td><td>0% (무전적)</td><td>0회</td><td>60kg</td></tr><tr><td>2번</td><td>-</td><td>-</td><td>-</td><td>0% (무전적)</td><td>0회</td><td>70kg</td></tr><tr><td>3번</td><td>-</td><td>-</td><td>-</td><td>0% (무전적)</td><td>0회</td><td>60kg</td></tr></tbody></table></div><ul><li>본문에 서술된 우선순위를 따라 <code>[2,1,3]</code> 을 return 합니다.</li></ul></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">weights, head2head</span>):</span></span><br><span class="line">    answer = []</span><br><span class="line">    <span class="keyword">for</span> i,h <span class="keyword">in</span> <span class="built_in">enumerate</span>(head2head):</span><br><span class="line">        total = <span class="built_in">len</span>(h)</span><br><span class="line">        win = [<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(h)):</span><br><span class="line">            <span class="keyword">if</span> h[j] == <span class="string">&#x27;N&#x27;</span>: total-=<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> h[j] == <span class="string">&#x27;W&#x27;</span>: </span><br><span class="line">                win[<span class="number">0</span>]+=<span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> weights[i] &lt; weights[j]: win[<span class="number">1</span>]+=<span class="number">1</span></span><br><span class="line">            </span><br><span class="line">        win_ratio = win[<span class="number">0</span>]/total <span class="keyword">if</span> total != <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">        answer.append((win_ratio,win[<span class="number">1</span>],weights[i],-i))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sorted</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(weights)+<span class="number">1</span>),key=<span class="keyword">lambda</span> x:answer[x-<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><ul><li><p>파이썬에서 튜플로 이루어진 리스트를 정렬하면, <strong>튜플</strong>의 첫 값부터 마지막 값까지 차례대로 비교해 나아가는 원리를 이용한다.</p></li><li><p>문제에서 요구한 비교 조건들을 차례대로 튜플에 담고 이를 거꾸로 정렬하여 인덱스 값을 반환한다.</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/%EC%9C%84%ED%81%B4%EB%A6%AC%EC%B1%8C%EB%A6%B0%EC%A7%80/">위클리챌린지</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/06/62bfc11a1271/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
