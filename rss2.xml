<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JK&#39;s Devlog</title>
    <link>https://sklubmk.github.io/</link>
    
    <atom:link href="https://sklubmk.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Jinki Kim&#39;s Front End Devlog</description>
    <pubDate>Sat, 16 Oct 2021 14:47:17 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[NCS] 대인관계능력</title>
      <link>https://sklubmk.github.io/2021/10/16/99dff55b01c6/</link>
      <guid>https://sklubmk.github.io/2021/10/16/99dff55b01c6/</guid>
      <pubDate>Sat, 16 Oct 2021 04:32:13 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;💡-tl-dr&quot;&gt;&lt;a href=&quot;#💡-tl-dr&quot; class=&quot;headerlink&quot; title=&quot;💡 tl;dr&quot;&gt;&lt;/a&gt;💡 tl;dr&lt;/h1&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;대인관계능력&lt;/li&gt;
&lt;li&gt;하위능력&lt;ul&gt;
&lt;li&gt;팀워크능력&lt;/li&gt;
&lt;li&gt;리더십능력&lt;/li&gt;
&lt;li&gt;갈등관리능력&lt;/li&gt;
&lt;li&gt;협상능력&lt;/li&gt;
&lt;li&gt;고객서비스능력&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="💡-tl-dr"><a href="#💡-tl-dr" class="headerlink" title="💡 tl;dr"></a>💡 tl;dr</h1><hr><ol><li>대인관계능력</li><li>하위능력<ul><li>팀워크능력</li><li>리더십능력</li><li>갈등관리능력</li><li>협상능력</li><li>고객서비스능력</li></ul></li></ol><span id="more"></span><p><br/></p><h1 id="대인관계능력"><a href="#대인관계능력" class="headerlink" title="대인관계능력"></a>대인관계능력</h1><hr><p><br/></p><ol><li><code>대인관계능력</code>이란 <ul><li>직업생활에서 협조적인 관계를 유지하고, </li><li>조직구성원들에게 도움을 줄 수 있으며, </li><li>조직 내부 및 외부의 갈등을 원만히 해결하고 </li><li>고객의 요구를 충족시켜줄 수 있는 능력이다.</li></ul></li><li>대인관계를 형성할 때 가장 중요한 요소는 <ul><li>무엇을 말하느냐, 어떻게 행동하느냐 보다는 우리의 <code>사람됨</code>이라 할 수 있다. </li><li>대인관계에서 정말로 중요한 기법이나 기술은 <code>독립적인 성품</code>으로부터 자연스럽게 나오는 것이어야 한다.</li></ul></li><li><code>대인관계 향상</code>이란 <ul><li>인간관계에서 구축하는 신뢰의 정도를 높이는 것을 의미한다. </li><li>다른 사람에 대해 공손하고 친절하며, 정직하고 약속을 지킨다면 신뢰를 높이는 셈이 된다.</li></ul></li><li>대인관계를 향상시키는 주요 방법에는 <ul><li>상대방에 대한 이해와 배려, </li><li>사소한 일에 대한 관심, </li><li>칭찬하고 감사하기, </li><li>약속의 이행 및 언행일치, </li><li>진지한 태도가 있다.</li></ul></li><li>대인관계를 잘 형성하고 유지하기 위해서는 <ul><li>다양한 대인관계 양식에 대한 이해가 필요하다. </li><li>대인관계 양식에는 <code>지배형, 실리형, 냉담형, 고립형, 복종형, 순박형, 친화형, 사교형</code>이 있다.</li></ul></li></ol><p><br/></p><p><br/></p><h1 id="하위능력"><a href="#하위능력" class="headerlink" title="하위능력"></a>하위능력</h1><hr><p><br/></p><h2 id="팀워크-능력"><a href="#팀워크-능력" class="headerlink" title="팀워크 능력"></a>팀워크 능력</h2><p><br/></p><ol><li><code>팀워크</code>란 <ul><li>팀구성원이 공동의 목적을 달성하기 위하여 <code>상호관계성</code>을 가지고 협력하여 업무를 수행하는 것을 말한다.</li></ul></li><li><code>효과적인 팀</code>은 <ol><li>팀의 사명과 목표를 명확하게 기술 </li><li>창조적인 운영 </li><li>결과에 초점을 맞춤 </li><li>역할과 책임의 명료화 </li><li>조직화 </li><li>개인의 강점 활용 </li><li>리더십 역량을 공유 </li><li>팀 풍토를 발전 </li><li>의견의 불일치를 건설적으로 해결 </li><li>개방적으로 의사소통 </li><li>객관적인 의사소통 </li><li>팀 자체의 효과성 평가 등의 특성을 지닌다.</li></ol></li><li><code>팔로워십(followership)</code>은 <ul><li>부하로서 바람직한 특성과 행동을 의미한다. </li><li>일반적으로 건강한 부하는 상사가 바람직한 리더십을 발휘하도록 유도하고 지원해야 하며, </li><li>상사에 대한 <code>동의</code>뿐만 아니라 <code>건전한 비판</code>도 함께 해야 한다. </li><li>그렇기 때문에 팔로워 들은 헌신, 전문성, 용기, 정직하고 현명한 평가 능력이 있어야 한다.</li></ul></li><li><code>팀워크</code>를 <code>촉진</code>시키기 위해서는 <ol><li>동료 피드백 장려하기 </li><li>갈등을 해결하기 </li><li>창의력 조성을 위해 협력하기 </li><li>참여적으로 의사결정하기 등의 요소가 필요하다.</li></ol></li></ol><p><br/></p><h2 id="리더십-능력"><a href="#리더십-능력" class="headerlink" title="리더십 능력"></a>리더십 능력</h2><p><br/></p><ol><li><code>리더십</code>이란 <ul><li>조직의 <code>공통된 목적</code>을 달성하기 위하여 <code>개인</code>이 <code>조직원</code>들에게 영향을 미치는 과정이다.</li></ul></li><li><code>리더</code>와 <code>관리자</code>의 최대의 <code>차이점</code>은 <code>비전</code>의 유무에서 나타난다. <ul><li>그리고 <code>관리자</code>의 역할이 자원을 관리‧분배하고, 당면한 문제를 해결하는 것이라면 </li><li><code>리더</code>의 역할은 비전을 선명하게 구축하고, 그 비전이 팀원의 협력 아래 실현되도록 환경을 만들어 주는 것이다. </li><li>따라서 관리자의 관심사가 주로 사람이나 물건을 관리하는 것에 있는 데 비해, </li><li>리더의 관심사는 사람의 마음을 중시하고 동기를 부여하는 데 있다. </li><li>또한 관리자는 오늘의 구체적인 문제를 대상으로 삼고 일하지만, </li><li>리더는 미래를 향한 새로운 상황을 창조한다. 즉 새로운 상황 창조자인 것이다.</li></ul></li><li>일반적으로 <code>리더십 유형</code>은 <ul><li>독재자 유형, </li><li>민주주의에 근접한 유형, </li><li>파트너십 유형, </li><li>변혁적 리더십 유형 등 크게 4가지로 구분할 수 있다.</li></ul></li><li>지속적으로 유지될 수 있는 <code>내적 동기유발</code>의 7가지 방법에는 <ol><li>긍정적 강화법 활용 </li><li>새로운 도전의 기회 부여 </li><li>창의적인 문제해결법 찾기 </li><li>책임감으로 철저히 무장 </li><li>몇 가지 코칭을 하기 </li><li>변화를 두려워하지 않는 것 </li><li>지속적인 교육 등이 있다.</li></ol></li><li><code>임파워먼트</code>란 <ul><li>조직구성원들을 신뢰하고, </li><li>그들의 잠재력을 믿으며, </li><li>그 잠재력의 개발을 통해 고성과 조직이 되도록 하는 일련의 행위로 정의할 수 있다.</li></ul></li><li>일반적인 <code>변화관리</code>의 3단계는 <ul><li>변화 이해하기, </li><li>변화 인식하기, </li><li>변화 수용하기이다.</li></ul></li></ol><p><br/></p><h2 id="갈등관리-능력"><a href="#갈등관리-능력" class="headerlink" title="갈등관리 능력"></a>갈등관리 능력</h2><p><br/></p><ol><li><code>갈등</code>이란 <ul><li>상호간에 의견 차이 때문에 발생하게 된다. </li><li>목표를 달성하기 위해 노력하는 팀이라면 갈등은 항상 일어나게 마련이다. </li><li>그러나 이러한 의견 차이는 항상 부정적인 것만은 아니다.</li></ul></li><li>갈등을 확인할 수 있는 <code>단서</code>에는 <ol><li>지나치게 감정적인 논평과 제안 </li><li>타인의 의견발표가 끝나기도 전에 타인의 의견에 대해 공격 </li><li>핵심을 이해하지 못한 것에 대해 서로 비난 </li><li>편을 가르고 타협하기를 거부 </li><li>개인적인 수준에서 미묘한 방식으로 서로를 공격하는 것 등이 있다.</li></ol></li><li>갈등을 <code>증폭</code>시키는 원인에는 <ol><li>적대적 행동 </li><li>입장 고수 </li><li>감정적 관여 등이 있다.</li></ol></li><li>갈등의 두 가지 <code>쟁점</code>은 <code>핵심 문제</code>와 <code>감정적 문제</code>로 구분할 수 있다.</li><li>갈등의 두 가지 유형은 <code>불필요한 갈등</code>과 <code>해결할 수 있는 갈등</code>으로 구분할 수 있다.</li><li>갈등 해결 방법 모색 시 명심해야 할 사항으로는 <ol><li>다른 사람들의 입장 이해하기 </li><li>어려운 문제는 피하지 말고 맞서기 </li><li>자신의 의견을 명확하게 밝히고 지속적으로 강화하기 </li><li>사람들과 눈을 자주 마주치기 </li><li>마음을 열어놓고 적극적으로 경청하기 </li><li>타협하려 애쓰기 </li><li>어느 한쪽으로 치우치지 않기 </li><li>논쟁하고 싶은 유혹을 떨쳐내기 </li><li>존중하는 자세로 사람들을 대하기 등이 있다.</li></ol></li><li><code>윈-윈(Win-Win)</code> 전략이란 <ul><li>갈등과 관련된 모든 사람으로부터 의견을 받아서 문제의 본질적인 해결책을 얻는 것을 의미한다.</li></ul></li></ol><p><br/></p><h2 id="협상-능력"><a href="#협상-능력" class="headerlink" title="협상 능력"></a>협상 능력</h2><p><br/></p><ol><li><code>협상</code>이란 <ul><li>갈등상태에 있는 이해당사자들이 <code>대화와 논쟁</code>을 통해서 서로를 <code>설득</code>하여 문제를 해결하려는 <code>정보전달과정</code>이자 <code>의사결정과정</code>이다.</li></ul></li><li>협상과정은 관점에 따라 다양한 형태로 언급되어질 수 있다. 협상과정은 <ol><li>협상시작 </li><li>상호이해 </li><li>실질이해 </li><li>해결방안 </li><li>합의문서 등의 5단계로 구분할 수 있다.</li></ol></li><li>협상에 활용되는 전략은 다양하다. 대체로 <code>협상전략</code>은 <ol><li>협력전략 </li><li>유화전략 </li><li>회피전략 </li><li>강압전략 등으로 구분할 수 있다. </li></ol><ul><li>협력전략은 “Win-Win”전략, </li><li>유화전략은 “Lose-Win”전략, </li><li>회피전략은 “Lose-Lose”전략, </li><li>강압전략은 “Win-Lose”전략으로 요약할 수 있다.</li></ul></li><li>협상에 있어 상대방을 설득하는 일은 필수적이다. <ul><li>상대방을 설득시키기 위해 활용 할 수 있는 전략으로는 </li></ul><ol><li>See-Feel-Change 전략 </li><li>상대방 이해 전략 </li><li>호혜관계 형성 전략 </li><li>헌신과 일관성 전략 </li><li>사회적 입증 전략 </li><li>연결 전략 </li><li>권위 전략 </li><li>희소성 해결 전략 </li><li>반항심 극복 전략 등이 있다.</li></ol></li></ol><p><br/></p><h2 id="고객서비스-능력"><a href="#고객서비스-능력" class="headerlink" title="고객서비스 능력"></a>고객서비스 능력</h2><p><br/></p><ol><li><code>고객서비스</code>란 <ul><li>다양한 고객의 요구를 파악하고, </li><li>대응법을 마련하여 고객에게 양질의 서비스를 제공하는 것을 말한다.</li></ul></li><li>고객 불만 표현 유형은 크게 <code>거만형, 의심형, 트집형, 빨리빨리 형</code>으로 나눌 수 있다. <ul><li><code>거만형</code>은 과시적으로 자신이 가진 지식이나 능력, 소유를 드러내고 싶어 하는 유형이고, </li><li><code>의심형</code>은 직원의 설명이나 제품의 품질에 대해 의심을 많이 하는 유형이다. </li><li><code>트집형</code>은 사소한 것을 트집을 잡는 까다로운 고객 유형이며, </li><li><code>빨리빨리 형</code>은 매사에 성격이 급하고, 일처리가 늦어지는 것에 대해 특히 불만을 갖는 고객 유형을 말한다.</li></ul></li><li>고객 불만 처리 프로세스는 다음의 8단계로 이루어진다.<ol><li>경청</li><li>감사와 공감표시</li><li>사과</li><li>해결약속</li><li>정보파악</li><li>신속처리</li><li>처리확인과 사과</li><li>피드백</li></ol></li><li><code>고객만족 조사계획</code>에서 수행되어야 할 것은, <ul><li>조사 분야 및 대상 결정, </li><li>조사목적 설정, </li><li>조사방법 및 횟수, </li><li>조사결과 활용 계획이 있다.</li></ul></li></ol>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/categories/etc/NCS/">NCS</category>
      
      
      <category domain="https://sklubmk.github.io/tags/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/tags/NCS/">NCS</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/16/99dff55b01c6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[NCS] 정보능력</title>
      <link>https://sklubmk.github.io/2021/10/15/a7d7df5b6236/</link>
      <guid>https://sklubmk.github.io/2021/10/15/a7d7df5b6236/</guid>
      <pubDate>Fri, 15 Oct 2021 13:55:05 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;💡-tl-dr&quot;&gt;&lt;a href=&quot;#💡-tl-dr&quot; class=&quot;headerlink&quot; title=&quot;💡 tl;dr&quot;&gt;&lt;/a&gt;💡 tl;dr&lt;/h1&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;정보능력&lt;/li&gt;
&lt;li&gt;하위능력&lt;ul&gt;
&lt;li&gt;컴퓨터활용능력&lt;/li&gt;
&lt;li&gt;정보처리능력&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="💡-tl-dr"><a href="#💡-tl-dr" class="headerlink" title="💡 tl;dr"></a>💡 tl;dr</h1><hr><ol><li>정보능력</li><li>하위능력<ul><li>컴퓨터활용능력</li><li>정보처리능력</li></ul></li></ol><span id="more"></span><p><br/></p><h1 id="정보능력"><a href="#정보능력" class="headerlink" title="정보능력"></a>정보능력</h1><hr><p><br/></p><ol><li><code>정보능력</code>이란 <ul><li>기본적인 컴퓨터를 활용하여 업무에 필요한 정보를 수집, 분석, 활용 하는 능력이다. </li><li>정보능력의 함양은 매일 수십 개의 정보가 생성되고 소멸될 정도로 변화가 빠른 현대 사회에서 필수적이다.</li></ul></li><li>업무 수행 중에 주위에 있는 모든 자료가 유용한 정보가 될 수 있는 것은 아니다. <ul><li>자료는 특정한 목적과 문제해결에 도움이 되도록 <code>가공</code>해야만 <code>유용한 정보</code>로서의 가치를 지닌다.</li></ul></li><li>컴퓨터와 통신기술의 발전을 기반으로 한 <code>정보화 사회</code>의 도래로 인하여 <ul><li>미래의 모습은 상상을 초월할 정도로 변할 것이다.</li><li>직업인으로서 이러한 변화에 대처할 수 있는 능력을 함양해야 한다.</li></ul></li><li>업무 수행 중에 컴퓨터를 활용할 수 있는 경우는 수없이 많다. <ul><li>업무의 목적과 상황을 고려하여 컴퓨터를 적절하게 활용할 수 있는 능력을 함양하여야 할 것이다.</li></ul></li><li>업무 수행에 필요한 정보를 활용하기 위해서는 <ul><li>일정한 정보처리절차에 따라 정보를 <code>기획, 수집, 관리, 활용</code>하는 것이 필요하다.</li></ul></li><li>업무 수행에 필요한 정보를 수집, 관리, 활용하기에 앞서 <ul><li>어떠한 정보를 <code>어디에서, 언제까지, 왜, 누가, 어떻게, 얼마나</code> 수집할 것인지에 대한 <code>전략적 기획</code>을 수립하는 것은 매우 중요하다.</li></ul></li></ol><p><br/></p><p><br/></p><h1 id="하위-능력"><a href="#하위-능력" class="headerlink" title="하위 능력"></a>하위 능력</h1><hr><p><br/></p><h2 id="컴퓨터활용능력"><a href="#컴퓨터활용능력" class="headerlink" title="컴퓨터활용능력"></a>컴퓨터활용능력</h2><p><br/></p><ol><li><code>컴퓨터활용능력</code>은 <ul><li>업무 수행에 필요한 정보를 수집, 분석, 조직, 관리, 활용할 때 컴퓨터를 활용하는 능력이다. </li><li>정보사회의 도래에 가장 결정적인 역할을 한 것은 컴퓨터 기술의 발전이었으며, </li><li>직업인이 컴퓨터를 통해 필요한 정보를 얻고 자신에게 잠재되어 있는 재능을 발휘하기 위해서는 컴퓨터활용능력의 함양이 필수적이다.</li></ul></li><li>대부분의 직업인들은 원활한 업무 수행을 위해 다양한 인터넷 서비스를 활용하고 있다. <ul><li><code>이메일(E-mail), 웹하드(Web Hard), 메신저, 클라우드</code> 등 다양한 인터넷 서비스의 특징을 파악하여 업무 수행 과정에서 적재적소에 활용할 수 있어야 한다.</li></ul></li><li>직업인으로서 업무를 효과적으로 수행하기 위해서는 <ul><li>문제해결을 위해 필요한 정보를 찾는 일이 매우 중요하다. </li><li>인터넷을 활용하여 업무에 필요한 정보를 찾기 위해서는 몇 가지의 기본적인 지식들이 필요하다. </li><li>다양한 인터넷 검색 엔진의 특징을 파악하여 효과적으로 활용할 수 있어야 한다.</li></ul></li><li>직업인으로서 특정 업무를 수행하기 위해서는 그 일에 해당하는 소프트웨어를 선택하여 활용할 수 있어야 한다. <ul><li>소프트웨어는 업무 처리의 특성에 따라 여러 종류가 있으며, </li><li>대표적인 소프트웨어로는 <code>워드프로세서, 스프레드시트, 프레젠테이션, 유틸리티 프로그램</code> 등이 있다.</li></ul></li><li>컴퓨터를 이용하여 업무의 효율을 높이기 위해서는 <code>데이터의 효과적인 활용</code>이 필요하며, <ul><li>이를 위해서는 <code>데이터베이스</code>의 구축이 필수적이다. </li><li>직업인으로서 업무를 수행하는 데 데이터베이스 시스템을 활용하면<ol><li>데이터 중복을 줄일 수 있고</li><li>데이터의 무결성을 높이며 </li><li>데이터 검색을 쉽게 할 수 있고 </li><li>데이터의 안정성을 높일 수 있으며 </li><li>프로그램의 개발 기간을 단축시킬 수 있다.</li></ol></li></ul></li></ol><p><br/></p><h2 id="정보처리능력"><a href="#정보처리능력" class="headerlink" title="정보처리능력"></a>정보처리능력</h2><p><br/></p><ol><li><code>정보처리능력</code>은 <ul><li>직업생활에서 필요한 정보를 수집하고, 분석하여 의미있는 정보를 찾아내며, </li><li>찾아낸 정보를 업무 수행에 적절하도록 조직-관리하고 활용하는 능력이다. </li><li>문제해결에 적합한 정보를 찾고 선택할 수 있는 능력과 </li><li>찾은 정보를 문제해결에 적용할 수 있는 능력의 함양은 필수적이다.</li></ul></li><li>직업인이 업무를 수행할 때 목적에 <code>적합한 정보</code>를 수집하는 것은 무엇보다도 중요한 일이다. <ul><li>효과적으로 필요한 정보를 수집하기 위해서는 우선 정보수집 목적을 명확하게 설정하여야 한다. </li><li>그 후 적합한 <code>정보원(sources)</code>을 탐색하여 효과적인 방법에 따라 정보를 수집해야 할 것이다.</li></ul></li><li>업무를 수행하기 위해서는 수많은 정보가 필요하며, <ul><li>이러한 정보는 한 번 활용하고 나면 필요 없는 것이 아니라 대부분의 경우 같은 정보를 다시 이용하게 된다. </li><li>따라서 정보의 체계적인 분석 및 가공 절차가 필요하며, </li><li>효율적인 정보관리 방법을 숙지하여 정보를 체계적으로 관리하는 것이 중요하다.</li></ul></li><li>직업인은 정보를 효과적으로 활용함으로써 <ul><li>합리적인 의사결정을 할 수 있고, </li><li>새로운 기회를 탐색할 수 있으며, </li><li>위험을 사전에 예방할 수도 있다. </li><li>따라서 유용한 정보와 그렇지 않은 정보를 구분하여 합리적으로 적시에 활용하는 것은 직업인으로서의 성공에 큰 열쇠가 될 수 있다.</li></ul></li><li>업무 수행 혹은 일상생활에서 인터넷을 활용할 때에는 항상 네티켓을 지키도록 노력해야 한다. <ul><li>네티켓은 네트워크와 에티켓의 합성어로, 사이버 공간에서 지켜야 할 비공식적인 규약이다.</li></ul></li><li>컴퓨터를 활용하다 보면 중요한 개인정보가 유출될 수 있다. <ul><li>이러한 정보가 유출될 경우 막대한 손해를 입을 수도 있기 때문에 개인정보 유출 방지를 위한 노력을 기울여야 한다.</li></ul></li></ol>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/categories/etc/NCS/">NCS</category>
      
      
      <category domain="https://sklubmk.github.io/tags/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/tags/NCS/">NCS</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/15/a7d7df5b6236/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[NCS] 조직이해능력</title>
      <link>https://sklubmk.github.io/2021/10/15/2d886743a438/</link>
      <guid>https://sklubmk.github.io/2021/10/15/2d886743a438/</guid>
      <pubDate>Fri, 15 Oct 2021 11:06:58 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;💡-tl-dr&quot;&gt;&lt;a href=&quot;#💡-tl-dr&quot; class=&quot;headerlink&quot; title=&quot;💡 tl;dr&quot;&gt;&lt;/a&gt;💡 tl;dr&lt;/h1&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;조직이해능력&lt;/li&gt;
&lt;li&gt;하위능력&lt;ul&gt;
&lt;li&gt;경영이해능력&lt;/li&gt;
&lt;li&gt;체제이해능력&lt;/li&gt;
&lt;li&gt;업무이해능력&lt;/li&gt;
&lt;li&gt;국제감각&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="💡-tl-dr"><a href="#💡-tl-dr" class="headerlink" title="💡 tl;dr"></a>💡 tl;dr</h1><hr><ol><li>조직이해능력</li><li>하위능력<ul><li>경영이해능력</li><li>체제이해능력</li><li>업무이해능력</li><li>국제감각</li></ul></li></ol><span id="more"></span><p><br/></p><h1 id="조직이해능력"><a href="#조직이해능력" class="headerlink" title="조직이해능력"></a>조직이해능력</h1><hr><p><br/></p><ol><li>개인들의 삶은 조직과 밀접하게 이루어지며, <ul><li><code>조직</code>이란 두 사람 이상이 공동의 목표를 달성하기 위해 의식적으로 구성된 상호작용과 조정을 행하는 행동의 집합체이다.</li></ul></li><li>일 경험에서 <code>직장</code>은 <ul><li>일을 하는데 필요한 물리적 장소이며 심리적 공간이다. </li><li>일 경험 과정에서 만족감을 얻기도 하고, 좌절감을 경험하기도 한다.</li></ul></li><li>조직은 <code>공식화 정도</code>에 따라서 공식조직과 비공식조직으로 구분할 수 있으며, <ul><li>사기업과 같이 <code>영리</code>를 추구하는 <code>영리조직</code>과 정부조직과 같은 <code>비영리조직</code>으로도 구분할 수 있다. </li><li>또한 조직의 <code>규모</code>에 따라 <code>소규모 조직</code>과 <code>대규모 조직</code>으로 나눌 수 있다.</li></ul></li><li>조직은 외부로부터 끊임없이 영향을 받으며 목적, 체제, 구조와 같은 다양한 요소로 구성된다. <ul><li>따라서 일 경험을 할 때, 여러 국면에서 조직을 이해해야 조직전체의 경영효과를 높이는 데 기여할 수 있다.</li></ul></li><li>일 경험을 위해 조직 전체의 체제에서 자신이 속한 위치를 확인할 수 있어야 한다. <ul><li>따라서 체제를 구성하는 조직목표, 조직구조, 조직문화, 조직의 규칙이나 규정을 이해하고 전체 조직의 목적 달성에 합목적적으로 행동할 수 있어야 한다.</li></ul></li><li>환경의 변화에 따라 조직은 변화해야 생존할 수 있으므로, <ul><li>일 경험의 발전을 위해 조직변화에 영향을 미치는 환경변화를 인지하고, 조직변화 방향을 수립하여 이를 평가하고 실행할 수 있어야 한다.</li></ul></li></ol><p><br/></p><p><br/></p><h1 id="하위능력"><a href="#하위능력" class="headerlink" title="하위능력"></a>하위능력</h1><hr><p><br/></p><h2 id="경영이해능력"><a href="#경영이해능력" class="headerlink" title="경영이해능력"></a>경영이해능력</h2><p><br/></p><ol><li><code>경영</code>이란 <ul><li>조직의 목적을 달성하기 위한 전략, 관리, 운영활동으로 특정 조직에게 적합한 <code>특수경영</code>과 </li><li>조직의 특성에 관계없이 적용할 수 있는 <code>일반경영</code>이 있다. </li><li>경영은 경영목적, 구성원, 자금, 전략의 <code>4요소</code>로 구성되며 경영계획, 경영실행 및 경영 평가의 단계를 거친다.</li></ul></li><li>조직의 구성원들은 경영참가제도를 통해 조직의 경영의사결정 과정에 참여할 수 있다. <ul><li>경영참가제도는 경영의 민주성을 제고하고, </li><li>현장에 적합한 해결방안을 마련할 수 있다는 장점이 있다.</li></ul></li><li>일 경험을 하다 보면 집단적으로 의사결정을 내려야 할 경우가 많이 있다. <ul><li>조직의 의사결정과정은 개인의 의사결정에 비해 복잡하며 불확실한 환경에서 이루어지는 경우가 많다. </li><li>조직의 의사결정과정에서 혁신적인 결정뿐만 아니라 점진적인 개선을 위한 의사결정을 내리는 경우가 많다.</li></ul></li><li>일 경험 과정에서 <code>점진적 의사결정모형</code>을 활용하여 <ul><li><code>확인 단계</code>(의사결정이 필요한 문제를 확인하는 단계와 주요 문제나 혹은 근본원인을 도출하기 위한 정보를 얻는 진단 단계), </li><li><code>개발 단계</code>(조직 내 기존 해결방법을 찾는 탐색단계와 새로운 문제에 대 한 해결안을 설계하는 설계 단계), </li><li><code>선택 단계</code>(실행가능한 해결안을 선택하고 이를 승인하는 단계)의 순으로 의사결정을 내릴 수 있다.</li></ul></li><li>조직 <code>경영전략</code>은 <ul><li>조직이 변화하는 환경에 적응하기 위하여 경영활동을 체계화하는 것으로 목표달성을 위한 수단이 된다. </li><li>경영전략의 추진과정은 전략목표를 설정하고, </li><li>내-외부 환경을 분석하며, </li><li>경영전략을 도출하고, </li><li>이를 실행하여, </li><li>평가하는 과정 으로 이루어진다.</li></ul></li><li>조직의 경영전략 중 해당 사업에서 경쟁우위를 확보하기 위한 본원적 경쟁전략은 <ul><li>원가절감을 통해 우위를 점하는 <code>원가우위 전략</code>, </li><li>생산품이나 제품의 차별화를 통한 <code>차별화 전략</code>, </li><li>특정 산업을 대상으로 하는 <code>집중화 전략</code>으로 이루어진다.</li></ul></li></ol><p><br/></p><h2 id="체제이해능력"><a href="#체제이해능력" class="headerlink" title="체제이해능력"></a>체제이해능력</h2><p><br/></p><ol><li><code>조직목표</code>는 <ul><li>조직이 달성하려는 <code>장래의 상태</code>로, 모든 조직은 목표를 가지고 있다. </li><li>조직의 목표는 미래지향적이지만 현재의 조직행동의 방향을 결정해 주는 역할을 한다. </li><li>조직목표는 다수일 수 있으며, 이들 사이에는 위계적 관계가 있다. </li><li>이러한 조직의 목표는 조직 전체의 성과, 자원, 시장, 인력개발, 혁신과 변화, 생산성 측면에서 분류될 수 있다.</li></ul></li><li>일 경험을 할 때, 자신에게 주어진 업무를 혼자서 수행할 수 없으며 조직구성원들과 상호작용해야 한다. <ul><li><code>조직구조</code>는 조직 내의 부문 사이에 형성된 관계로, </li><li>조직목표를 달성하기 위한 조직구성원들의 유형화된 상호작용과 이에 영향을 미치는 매개체이다.</li></ul></li><li><code>조직구조</code>에는 조직의 전략과 규모, 기술, 환경 등이 영향을 미친다. <ul><li>이에 따라 기계적 조직과 유기적 조직으로 조직구조가 구분되고, </li><li>조직 활동의 결과 조직성과와 만족을 가져온다. </li><li>조직은 환경의 변화에 적절하게 대응하기 위하여 환경에 따라 조직의 구조가 달라지며 오늘날과 같은 급변하는 환경에서는 유기적 조직이 적합하다.</li></ul></li><li>조직구성원은 조직 내에 여러 집단에 소속된다. <ul><li>집단은 조직구성원들 몇 명이 모여서 일정한 <code>상호작용의 체제</code>를 이룰 때에 형성된다. </li><li>집단에는 <code>공식적 집단</code>과 <code>비공식적 집단</code>이 있으며, 집단 간의 상호작용을 위해 노력해야 한다.</li></ul></li></ol><p><br/></p><h2 id="업무이해능력"><a href="#업무이해능력" class="headerlink" title="업무이해능력"></a>업무이해능력</h2><p><br/></p><ol><li><code>조직구성원</code>은 업무를 수행하여 조직의 목적을 달성한다. <ul><li>업무는 조직의 목적이나 규모에 따라 다양하게 구성될 수 있고, 다양한 특성을 가진다.</li></ul></li><li>조직구성원은 공통된 조직의 목적을 지향하고, 조직문화를 공유하거나 조직문화의 영향을 받지만, 업무에서 요구되는 지식, 기술 및 도구가 다르다. <ul><li>또한 업무는 다른 업무와의 관계에서의 독립성, 업무 수행의 자율성이 각각 다르다. </li><li>따라서 자신에게 주어진 업무의 특성이 무엇인지를 알고 이에 따라 효과적으로 업무를 수행해야 한다.</li></ul></li><li>업무를 효과적으로 수행하기 위해서는 <code>사전에 계획을 수립</code>할 필요가 있다. <ul><li>먼저 조직과 나의 업무지침을 확인하고, </li><li>업무 수행에 활용할 수 있는 자원과 보완해야 할 자원으로 시간, 예산, 기술 및 인적자원을 확인한다. </li><li>그리고 이를 토대로 구체적인 업무 수행 시트를 작성한다.</li></ul></li><li>업무를 수행하다 보면, 아무리 계획을 체계적으로 세웠다고 하더라도 여러 방해요소를 경험하게 된다. <ul><li>이러한 방해요인은 잘 활용하면 오히려 도움이 되는 경우도 있으므로 </li><li>자신의 업무에 방해요소로 작용하는 것들이 무엇인지를 확인하고 이를 효과적으로 통제하고 관리할 필요가 있다.</li></ul></li><li>방해요소 중 방문, 인터넷, 전화, 메신저 등과 같은 문제를 해결하기 위해서는 시간을 정해 놓는 등 방해를 받지 않기 위한 자신만의 원칙을 설정할 필요가 있다. <ul><li>또한 조직 내 갈등이 발생하는 경우 대화와 협상으로 이를 해결하고, </li><li>업무 스트레스를 관리하여 적정수준의 스트레스를 유지하도록 한다.</li></ul></li></ol><p><br/></p><h2 id="국제감각"><a href="#국제감각" class="headerlink" title="국제감각"></a>국제감각</h2><p><br/></p><ol><li>최근 <code>글로벌화</code>가 이루어지면서 일 경험의 활동무대도 세계 속으로 넓어지고 있다. <ul><li>글로벌화는 활동범위가 세계로 확대되는 것으로, </li><li>조직은 세계시장에서 경쟁하고 살아남아야 하는 역량을 가져야 한다. </li><li>최근에는 <code>다국적 기업</code>이 등장하면서 범지구적 시스템과 네트워크 안에서 기업 활동이 이루어지는 국제경영이 중요시되고 있다.</li></ul></li><li>조직의 시장이 세계로 확대되는 것에 맞춰 의식과 태도, 행동도 세계수준에 이르러야 한다. <ul><li>따라서 <code>다른 나라의 문화를 이해</code>하고 국제동향을 이해하며, 이를 업무에 활용하는 국제감각을 키워야 한다.</li></ul></li><li><code>국제동향</code>을 파악해서 <code>업무에 적용</code>할 수 있는 방법으로는 <ul><li>관련 분야 해외사이트 주기적으로 방문하기, </li><li>신문의 국제면 읽기, </li><li>국제잡지 구독하기, </li><li>해외 서점 사이트에서 최신 서적 확인하기 등이 있으며, </li><li>국제감각은 하루아침에 길러지는 것이 아니므로 매일 꾸준히 실행해야 한다.</li></ul></li><li>사람들은 하나의 문화권에 속한 사람이 다른 문화를 접하게 되었을 때 <ul><li>불일치, 위화감, 심리적 부적응과 같은 <code>문화충격</code>을 경험하게 된다. </li><li>문화충격에 대비하기 위해서 자신의 정체성은 유지하되 다른 문화에 대한 <code>개방적인 태도</code>를 견지하고 새롭고 다른 것을 경험하는 데 적극적인 자세를 가져야 한다.</li></ul></li><li>외국인과 함께 일하는 국제비즈니스에서 <ul><li>조직의 목적을 달성하기 위해 문화배경을 달리하는 사람과 커뮤니케이션을 하는 <code>이문화 커뮤니케이션</code>을 해야 한다. </li><li><code>이문화 커뮤니케이션</code>은 언어적, 비언어적 커뮤니케이션으로 이루어진다.</li></ul></li><li>조직을 대표해서 외국에 파견된 사람들의 <code>실수</code>는 <ul><li>조직 전체의 모습으로 비춰지고, 이는 업무 성과에 큰 영향을 미치게 된다. </li><li>따라서 직업인은 나라별 주요 <code>국제매너</code>를 숙지할 필요가 있다.</li></ul></li></ol>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/categories/etc/NCS/">NCS</category>
      
      
      <category domain="https://sklubmk.github.io/tags/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/tags/NCS/">NCS</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/15/2d886743a438/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[NCS] 직업윤리</title>
      <link>https://sklubmk.github.io/2021/10/14/2b7ed54f0859/</link>
      <guid>https://sklubmk.github.io/2021/10/14/2b7ed54f0859/</guid>
      <pubDate>Thu, 14 Oct 2021 07:42:36 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;💡-tl-dr&quot;&gt;&lt;a href=&quot;#💡-tl-dr&quot; class=&quot;headerlink&quot; title=&quot;💡 tl;dr&quot;&gt;&lt;/a&gt;💡 tl;dr&lt;/h1&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;직업윤리&lt;ul&gt;
&lt;li&gt;윤리의 의미&lt;/li&gt;
&lt;li&gt;직업의 의미&lt;/li&gt;
&lt;li&gt;직업윤리의 의미&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;하위능력&lt;ul&gt;
&lt;li&gt;근로 윤리&lt;/li&gt;
&lt;li&gt;공동체 윤리</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="💡-tl-dr"><a href="#💡-tl-dr" class="headerlink" title="💡 tl;dr"></a>💡 tl;dr</h1><hr><ol><li>직업윤리<ul><li>윤리의 의미</li><li>직업의 의미</li><li>직업윤리의 의미</li></ul></li><li>하위능력<ul><li>근로 윤리</li><li>공동체 윤리<span id="more"></span></li></ul></li></ol><p><br/></p><h1 id="직업윤리"><a href="#직업윤리" class="headerlink" title="직업윤리"></a>직업윤리</h1><hr><ol><li><code>윤리적인 인간</code>은 <ul><li>자기 개인의 이익보다 <code>공동의 이익</code>을 추구하고, </li><li><code>도덕적 가치 신념</code>을 중요하게 여기는 사람이다.</li></ul></li><li>살아가는 과정에서 <ul><li>어떤 행위는 ‘마땅히 해야 할 행위’, </li><li>어떤 행위는 ‘결코 해서는 안 될 행위’ 등으로 가치를 인정받게 된다. </li><li>이러한 측면에서 볼 때, <code>모든 윤리적 가치</code>는 만고불변의 진리가 아니라 <code>시대와 사회상황에 따라서 조금씩 다르게 변화</code>되는 것이다.</li></ul></li><li><code>윤리</code>란 <ul><li>‘인간과 인간 사이에서 지켜져야 할 <code>도리</code>를 바르게 하는 것’ 또는 </li><li>‘인간사회에 필요한 올바른 <code>질서</code>‘라고 해석할 수 있다.</li></ul></li><li>현실적으로 사람들이 행하는 <code>비윤리적 행위의 유형</code>에는 <ul><li><code>도덕적 타성</code>과 </li><li><code>도덕적 태만</code>, </li><li><code>거짓말</code>이 있다.</li></ul></li><li>직업은 <ul><li>생활에 필요한 <code>경제적 보상</code>을 줄 뿐 아니라 </li><li>평생에 걸쳐 물질적인 보수 외에 만족감, 명예 등 <code>자아실현</code>의 중요한 기반이 된다.</li></ul></li><li>직업에 종사하는 현대인으로서 누구나 <code>공통</code>으로 지켜야 할 윤리기준을 ‘<code>직업윤리</code>‘ 라고 한다.</li><li><code>직업윤리의 일반적 덕목</code>에는<ol><li><code>소명의식</code></li><li><code>천직의식</code></li><li><code>직분의식</code></li><li><code>책임의식</code></li><li><code>전문가의식</code></li><li><code>봉사의식</code> 등이 있다.</li></ol></li><li><code>한국인</code>들은 중요한 직업윤리 덕목으로<ol><li><code>책임감</code></li><li><code>성실함</code></li><li><code>정직함</code></li><li><code>신뢰성</code></li><li><code>창의성</code></li><li><code>협조성</code></li><li><code>청렴함</code> 등을 강조한다.</li></ol></li><li><code>직업윤리</code>란 <ul><li>개인윤리를 바탕으로 직업에 종사하는 과정에서 요구되는 <code>특수한 윤리 규범</code>이다. </li><li>기본적으로 직업윤리도 <code>개인윤리의 연장선</code>이라 할 수 있다. </li><li>개인윤리의 기본 덕목인 사랑, 자비 등과 방법론상의 이념인 공동발전의 추구, 장기적 상호이익 등의 기본은 동일하다. </li><li>그러나 인간행복을 위한 기본적 가치를 중심으로 관계를 이루는 기술과 전문화된 분업체계로서의 직업이라는 특수상황에서 요구되는 <code>별도의 덕목과 규범</code>이 존재한다.</li></ul></li></ol><p><br/></p><p><br/></p><h1 id="근로윤리"><a href="#근로윤리" class="headerlink" title="근로윤리"></a>근로윤리</h1><hr><p><br/></p><ol><li><code>근면</code>이란 <ul><li>‘부지런히 일하며 힘씀’으로, </li><li>근면의 <code>개념적 특성</code>은 <ol><li>고난의 극복, </li><li>비선호의 수용,</li><li>인내로 나타난다.</li></ol></li></ul></li><li>근면에는 두 종류가 있다. <ul><li>첫째는 외부로부터 강요당한 근면이고, </li><li>둘째는 스스로 자진해서 하는 근면이다. </li><li>외부 조건으로부터 강요당한 근면이 아닌 자진해서 하는 근면은 <code>능동적</code>이며 <code>적극적인 태도</code>가 우선시되어야 한다.</li></ul></li><li>앞으로는 조직이나 타인 등 외부로부터 요구되는 일과 노동을 수행하기 위한 농업적 근면성보다는, 개인의 성장과 자아의 확립, 나아가 행복하고 자유로운 삶을 살기 위한 근면의 구현이 필요하다.</li><li><code>정직</code>은 <ul><li>‘마음에 거짓이나 꾸밈이 없이 바르고 곧음’으로, </li><li>사회시스템은 구성원 서로가 신뢰하는 가운데 운영이 가능한 것이며, </li><li>그 신뢰를 형성하고 유지하는 데 필요한 가장 기본적이고 필수적인 규범이 바로 정직이다.</li></ul></li><li>유교의 전통 가치는 <ul><li>‘정직’이라는 규범적 의미를 이해하는 행위와 </li><li>‘정직 행동’을 선택하는 행위 사이에서 괴리를 발생하게 하는 요소로 작용할 수 있다.</li></ul></li><li><code>성실(誠實)</code>은 <ul><li>“정성스럽고 참됨”으로 정의된다. </li><li>성(誠)은 정성스럽고 순수하고 참됨을 의미하며, </li><li>실(實)은 알차고 진실된 것을 의미한다. </li><li>따라서 성실은 그 단어의 본질을 살펴보았을 때, 그 의미가 근면함보다는 충(忠) 혹은 신(信)의 의미와 더 가깝다.</li></ul></li><li>창조, 변혁, 개혁, 혁신 등의 가치가 강조되는 <code>현대 사회에서 성실</code>은 <ul><li>다분히 도덕적 영역으로 그 범위가 위축되는 경향을 보이지만, </li><li>사회 구성원들이 힘을 합쳐 공동 목표를 효율적으로 추구할 수 있게 하는 가장 확실한 사회적 자본으로 인식되고 있다.</li></ul></li></ol><p><br/></p><h1 id="공동체-윤리"><a href="#공동체-윤리" class="headerlink" title="공동체 윤리"></a>공동체 윤리</h1><p><br/></p><ol><li><code>봉사</code>의 사전적 의미는 <ul><li>국가 사회 또는 남을 위하여 자신의 이해를 돌보지 아니하고 몸과 마음을 다하여 일하는 것을 의미한다.</li></ul></li><li><code>책임</code>이란 <ul><li>직업에 대한 사회적 역할과 책무를 충실히 수행하고 책임지려는 태도이며, </li><li>주어지거나 스스로 맡은 업무를 어떠한 일이 있어도 수행해 내는 태도를 말한다.</li></ul></li><li>모든 직업인들은 생계를 위해서뿐만 아니라 자신이 속한 조직의 번영을 위해서, 나아가 자신이 살고 있는 사회 전체의 발전을 위해서 ‘<code>봉사정신</code>’과 강한 ‘<code>책임의식</code>’을 갖고 직업 활동에 임해야 할 것이다.</li><li><code>준법</code>이란 <ul><li>민주 시민으로서 지켜야 하는 기본 의무이며 생활 자세이다. </li><li>민주 사회의 법과 규칙을 준수하는 것은 시민으로서의 권리를 보장받고, </li><li>다른 사람의 권리를 보호해 주며 사회 질서를 유지하는 역할을 한다.</li></ul></li><li>우리사회는 <code>민주주의와 시장경제를 지향</code>하지만 그것이 제대로 정착될 만한 <code>사회적, 정신적 토대</code>를 갖추지 <code>못하고</code> 있다. <ul><li>선진국들과 경쟁하기 위해서는 개개인의 의식 변화는 물론이지만 이와 함께 <code>체계적 접근</code>과 <code>단계별 실행</code>을 통한 제도적, 시스템적 기반의 확립이 필요한 것이다.</li></ul></li><li><code>예절</code>이란 <ul><li>일정한 생활문화권에서 오랜 생활습관을 통해 하나의 공통된 생활 방법으로 정립되어 관습적으로 행해지는 <code>사회계약적인 생활규범</code>이다.</li></ul></li><li>인사를 할 때나 전화를 걸거나 받을 때, 고객을 만나 명함을 주고받거나, 동료들과 함께 엘리베이터를 타고 이동을 할 때 등 출근부터 퇴근에 이르기까지 모든 일터의 상황에서 요구되는 기본적인 <code>직장예절</code>이 있으며, 이런 예절은 단순히 개인에 대한 호감을 넘어 성과에까지 지대한 영향을 미친다.</li><li>‘예절’의 <code>핵심</code>은 <ul><li>상대를 존중하는 마음이다. </li><li><code>존중</code>이란 <ul><li>우리 자신과 다른 사람을 소중히 여기고 그 권리를 배려해 주는 자세이며, </li><li>우리가 말하고 행동하고 서로를 대하는 태도 속에 반영되어 있다. </li></ul></li><li>그러나 최근 우리 사회의 갑질 행위, 직장 내 괴롭힘, 성차별과 성폭력 등의 문제들은 타인의 기본 인권조차도 존중하지 않는 심각한 실태를 보여준다.</li></ul></li><li>개인은 성별부터 나이, 가치관에 이르기까지 다양할 수밖에 없다. <ul><li>개인의 다양성을 인정하지 못하는 조직은 업무 효율이 떨어지는 것을 넘어 더 큰 문제를 마주할 수 있다. </li><li>따라서 일경험을 통한 관계 속에서 우리는 모욕적이고 타인을 비하하는 언어 등 부적절한 언어와 행동을 삼가고, </li><li>사회적 또는 윤리적으로 비난 받는 행위를 하지 않아야 하며 </li><li>동료, 상하, 거래처 간에 존중과 신뢰를 쌓도록 노력해야 한다.</li></ul></li></ol>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/categories/etc/NCS/">NCS</category>
      
      
      <category domain="https://sklubmk.github.io/tags/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/tags/NCS/">NCS</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/14/2b7ed54f0859/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[NCS] 기술능력</title>
      <link>https://sklubmk.github.io/2021/10/13/9f1e80160652/</link>
      <guid>https://sklubmk.github.io/2021/10/13/9f1e80160652/</guid>
      <pubDate>Wed, 13 Oct 2021 14:18:55 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;💡-tl-dr&quot;&gt;&lt;a href=&quot;#💡-tl-dr&quot; class=&quot;headerlink&quot; title=&quot;💡 tl;dr&quot;&gt;&lt;/a&gt;💡 tl;dr&lt;/h1&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;기술능력&lt;/li&gt;
&lt;li&gt;하위능력&lt;ul&gt;
&lt;li&gt;기술이해능력&lt;/li&gt;
&lt;li&gt;기술선택능력&lt;/li&gt;
&lt;li&gt;기술적용능력&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="💡-tl-dr"><a href="#💡-tl-dr" class="headerlink" title="💡 tl;dr"></a>💡 tl;dr</h1><hr><ol><li>기술능력</li><li>하위능력<ul><li>기술이해능력</li><li>기술선택능력</li><li>기술적용능력</li></ul></li></ol><span id="more"></span><p><br/></p><h1 id="기술-능력"><a href="#기술-능력" class="headerlink" title="기술 능력"></a>기술 능력</h1><hr><ol><li><code>기술</code>은 “물리적인 것뿐 아니라 <code>사회적인 것</code>으로서 <code>지적인 도구를 특정한 목적에 사용</code>하는 지식체계”, “인간이 주위환경에 대한 통제를 확대시키는 데 필요한 지식의 적용” 등으로 정의할 수 있다.</li><li><code>기술능력</code>은 직업에 종사하는 모든 사람들에게 필요한 능력이다. <ul><li>이는 넓은 의미로 확대하면 <code>기술교양(technical literacy)</code>이라는 개념으로 사용될 수 있으며, </li><li><code>기술교양의 개념을 보다 구체화시킨 개념</code>으로 볼 수 있다.</li></ul></li><li><code>기술능력이 뛰어난 사람</code>은 <ul><li>실질적 해결이 필요한 문제를 인식하고, </li><li>인식된 문제를 위한 다양한 해결책을 개발 및 평가하고, </li><li>실제적 문제를 해결하기 위해 지식이나 기타 자원을 선택 및 최적화시키며, </li><li>제한된 자원을 가지고 일을 진행하고, </li><li>기술적 해결에 대한 효용성을 평가할 수 있다.</li></ul></li><li>기술능력은 기술직 종사자에게만 해당되는 것은 아니라고 보기 때문에 기술능력을 보다 확대하여 이해하는 것이 바람직하다. 즉 기술능력을 일반적으로 사용되는 기술교양(Technological Literacy)의 개념을 보다 구체화한 개념으로 보는 것이 바람직하다.</li><li><code>기술능력 향상방법</code>에는 <ul><li>전문연수원에서 제공하는 기술과정 연수, </li><li>e-learning을 활용한 기술교육, </li><li>상급학교 진학을 통한 기술교육, </li><li>OJT(On the Job Training) 등이 있다.</li></ul></li><li>지속가능한 기술은 <ul><li>이용 가능한 자원과 에너지를 고려하고,</li><li>자원이 사용되고 그것이 재생산되는 비율의 조화를 추구하며,</li><li>이러한 자원의 질을 생각하고,</li><li>자원이 생산적인 방식으로 사용되는가에 주의를 기울이는 기술을 의미한다.</li></ul></li><li><code>산업재해</code>란 <ul><li>산업 활동 중의 사고로 인해 사망하거나 부상을 당하고, </li><li>또는 유해 물 질에 의한 중독 등으로 직업성 질환에 걸리거나 신체적 장애를 갖게 되는 것이다.</li></ul></li><li><code>산업재해를 예방하기 위한 과정</code>은 <ul><li>안전 관리 조직</li><li>사실의 발견</li><li>원인 분석</li><li>기술 공고화</li><li>시정책 적용 및 뒤처리이다.</li></ul></li></ol><p><br/></p><p><br/></p><h1 id="하위-능력"><a href="#하위-능력" class="headerlink" title="하위 능력"></a>하위 능력</h1><hr><p><br/></p><h2 id="기술이해능력"><a href="#기술이해능력" class="headerlink" title="기술이해능력"></a>기술이해능력</h2><p><br/></p><ol><li><code>기술시스템</code>은 <ul><li>인공물의 집합체만이 아니라 회사, 투자회사, 법적 제도, 정치, 과학, 자연자원을 <code>모두 포함</code>하는 것이기 때문에, </li><li>기술시스템에는 <code>기술적인 것(the technical)</code>과 <code>사회적인 것(the social)</code>이 <code>결합</code>해서 <code>공존</code>하고 있다. </li><li>이러한 의미에서 기술시스템은 <code>사회기술시스템(sociotechnical system)</code>이라고 불리기도 한다.</li></ul></li><li><code>기술시스템의 발전단계</code>는 <ul><li>발명, </li><li>개발, </li><li>혁신 단계, </li><li>기술이전의 단계, </li><li>기술경쟁의 단계, </li><li>기술공고화 단계로 구분된다.</li></ul></li><li>기술시스템의 발전단계에서 중요한 것은  <ul><li><code>각 단계에서 핵심적인 역할을 하는 사람들이 다르다는 것</code>이다. </li><li><code>첫 번째와 두 번째 단계</code>에서는 시스템을 디자인하고 초기 발전을 추진하는 <code>기술자들의 역할이 중요하다</code>. </li><li>에디슨과 같은 기술자들은 발명에도 능하고 동시에 사업에도 능한 사람이었는데, 그래서 이런 기술자들을 “<code>발명가 겸 기업가</code>”라고 부른다. </li><li>반면 <code>기술시스템의 경쟁 단계</code>에서는 <code>기업가들의 역할이 더 중요하게 부상</code>하며, </li><li><code>시스템</code>이 <code>공고</code>해지면 자문 <code>엔지니어</code>와 <code>금융전문가</code>의 역할이 중요해진다.</li></ul></li><li><code>기술혁신의 특성</code>은 <ul><li>그 <code>과정</code> 자체가 매우 <code>불확실</code>하고 <code>장기간</code>의 시간을 필요로 하며, <code>지식 집약적인 활동</code>이라는 것이다. </li><li>또한 혁신 과정의 <code>불확실성과 모호함</code>은 기업 내에서 많은 논쟁과 갈등을 유발할 수 있으며, 조직의 경계를 넘나드는 특성도 가지고 있다.</li></ul></li><li>실패 중에는 아무런 보탬이 되지 않는 실패도 있지만, 기술자들이 반드시 겪어야 하는 ‘<code>에디슨식 실패</code>’도 있다. <ul><li>개개인은 연구 개발과 같이 <code>지식을 획득하는 과정</code>에서 항상 <code>실패</code>를 겪는다. 이러한 실패는 용서받을 수 있고, 오히려 <code>바람직한 실패</code>이다. </li><li>그렇지만 <code>실패</code>를 <code>은폐</code>하거나 <code>과거의 실패를 반복</code>하는 것은 어떤 의미에서도 바람직하지 않다. 특히 실패를 은폐하다 보면 실패가 반복될 수 있고, 그러다가 커다란 재앙을 낳기도 한다.</li></ul></li><li>미래 사회에 유망하다고 판단되는 기술은 <ul><li>지능형 로봇, </li><li>하이브리드 자동차 기술, </li><li>지속가능한 건축시스템 기술, </li><li>재생에너지 산업이다.</li></ul></li></ol><p><br/></p><h2 id="기술선택능력"><a href="#기술선택능력" class="headerlink" title="기술선택능력"></a>기술선택능력</h2><p><br/></p><ol><li><code>기술선택</code>이란 <ul><li>기업이 <code>어떤 기술</code>을 <code>외부로부터 도입</code>하거나 <code>자체 개발하여 활용</code>할 것 인가를 <code>결정</code>하는 것이다. </li><li><code>기술선택 의사결정</code>은 <ul><li><code>상향식 기술선택(bottom up approach)</code>, <ul><li><code>연구자, 엔지니어의 선택</code></li></ul></li><li><code>하향식 기술선택(top-down approach)</code> 등 2가지가 있다.<ul><li><code>경영진의 선택</code></li></ul></li></ul></li><li><code>기술선택을 위한 절차</code>는 <ul><li>외부 환경 분석, </li><li>중장기 사업목표 설정, </li><li>내부 역량 분석, </li><li>사업 전략 수립, </li><li>요구기술 분석, </li><li>기술전략 수립, </li><li>핵심기술 선택으로 구분할 수 있다.</li></ul></li></ul></li><li><code>벤치마킹</code>은 <ul><li>특정 분야에서 뛰어난 업체나 상품, 기술, 경영 방식 등을 배워 <code>합법적 으로 응용</code>하는 것을 말한다. </li><li><code>모방과는 달리</code> 우수한 기업이나 성공한 상품, 기술, 경영 방식 등의 장점을 자사의 <code>환경에 맞추어 재창조</code>하는 것이다.</li></ul></li><li><code>벤치마킹의 종류</code>는<ul><li>비교 대상에 따라 내부, 경쟁적, 비경쟁적, 글로벌 벤치마킹으로 구분할 수 있으며, </li><li>수행방식에 따라서는 간접적, 직접적 벤치마킹으로 구분할 수 있다. </li></ul></li><li><code>벤치마킹의 단계</code>는 <ul><li>범위결정,</li><li>측정범위 결정, </li><li>대상 결정, </li><li>벤치마킹, </li><li>성과차이 분석, </li><li>개선계획 수립, </li><li>변화 관리 등으로 구분할 수 있다.</li></ul></li><li><code>매뉴얼의 사전적 의미</code>는 <ul><li>어떤 기계의 조작 방법을 설명해 놓은 <code>사용 지침서</code>, 즉 ‘사용서’, ‘설명서’, ‘편람’, ‘안내서’를 의미한다. </li><li>또한 군대에서는 ‘<code>교범</code>(敎範)’을 뜻 한다.</li></ul></li><li><code>매뉴얼</code>은 <ul><li>제품 매뉴얼과 </li><li>업무 매뉴얼로 구분할 수 있다.</li></ul></li><li><code>매뉴얼 작성을 위한 팁 (Tip)</code>으로는 <ol><li>내용이 정확해야 한다.</li><li>사용자가 알기 쉬운 문장으로 쓰여야 한다.</li><li>사용자에 대한 심리적 배려가 있어야 한다.</li><li>사용자가 찾고자 하는 정보를 쉽게 찾을 수 있어야 한다.</li><li>사용하기 쉬워야 한다 등이 있다.</li></ol></li><li><code>지식재산권</code>은 <ul><li>인간의 창조적 활동 또는 경험 등을 통해 창출하거나 발견한 지식·정 보·기술이나 표현, 표시 그 밖에 무형적인 것으로서 재산적 가치가 실현될 수 있는 지적 창작물에 부여된 권리를 말한다. </li><li><code>지식재산권</code>에는 <ul><li>산업재산권, </li><li>저작권, </li><li>신지식 재산권 등이 있다.</li></ul></li></ul></li></ol><p><br/></p><h2 id="기술적용능력"><a href="#기술적용능력" class="headerlink" title="기술적용능력"></a>기술적용능력</h2><p><br/></p><ol><li><code>기술적용 형태</code>는<ol><li>선택한 기술을 그대로 적용한다.</li><li>선택한 기술을 그대로 적용하되, 불필요한 기술은 과감히 버리고 적용한다.</li><li>선택한 기술을 분석하고, 가공하여 활용한다 등으로 구분할 수 있다.</li></ol></li><li><code>기술적용 시 고려사항</code>으로는<ol><li>기술적용에 따른 비용이 많이 드는가</li><li>기술의 수명 주기는 얼마인가</li><li>기술의 전략적 중요도는 어느 정도인가</li><li>잠재적으로 응용 가능성이 있는가 등이 있다.</li></ol></li><li><code>기술경영자</code>는 <ul><li>기술을 기업의 전반적인 전략 목표에 통합시키는 능력, </li><li>빠르고 효과적으로 새로운 기술을 습득하고 기존의 기술에서 탈피하는 능력, </li><li>기술을 효과적으로 평가할 수 있는 능력, </li><li>기술이전을 효과적으로 할 수 있는 능력, </li><li>새로운 제품개발 시간을 단축할 수 있는 능력, </li><li>크고 복잡하고 서로 다른 분야에 걸쳐있는 프로젝트를 수행할 수 있는 능력, </li><li>조직 내의 기술 이용을 수행할 수 있는 능력, </li><li>기술 전문인력을 운용할 수 있는 능력 등이 필요하다.</li></ul></li><li><code>네트워크 혁명의 특징</code>은 <ul><li>전세계의 사람들과, 이들의 지식과 활동이 연결되면서 나의 지식과 활동이 지구 반대편에 있는 사람에게 미치는 영향의 범위와 정도가 증대되는 한편, 지구 저쪽에서 내려진 결정이 내게 영향을 미칠 수 있는 가능성도 커졌다는 것이다. </li><li>이 중에는 내가 예측할 수 있고 내게 도움이 되는 것도 있지만, 그렇지 못한 것도 많다. </li><li>범세계적인 상호 영향이 보편화 되면서 사회의 위험과 개인의 불안이 증가한다고 볼 수 있다.</li></ul></li><li><code>인간 활동의 향상을 위해 중요한 융합기술</code>로는 다음 네 가지가 언급된다.<ol><li>제조, 건설, 교통, 의학, 과학기술 연구에서 사용되는 완전히 새로운 범주의 물질, 장치, 시스템</li><li>나노 규모에서 동작하는 부품과 공정의 시스템을 가진 물질 중에서 가장 복잡한 것으로 알려진 생물 세포</li><li>유비쿼터스 및 글로벌 네트워크로 다양한 요소를 통합하는 컴퓨터 및 통신시스템의 기본 원리</li><li>사람의 뇌와 마음의 구조와 기능에 관련한 생명공학기술, 나노기술, 정보기술과 인지과학</li></ol></li></ol>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/categories/etc/NCS/">NCS</category>
      
      
      <category domain="https://sklubmk.github.io/tags/etc/">etc</category>
      
      <category domain="https://sklubmk.github.io/tags/NCS/">NCS</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/13/9f1e80160652/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 2개 이하로 다른 비트</title>
      <link>https://sklubmk.github.io/2021/10/11/496d4090b8fc/</link>
      <guid>https://sklubmk.github.io/2021/10/11/496d4090b8fc/</guid>
      <pubDate>Mon, 11 Oct 2021 14:32:57 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p>양의 정수 <code>x</code>에 대한 함수 <code>f(x)</code>를 다음과 같이 정의합니다.</p><ul><li><code>x</code>보다 크고 <code>x</code>와 비트가 1~2개 다른 수들 중에서 제일 작은 수</li></ul><p>예를 들어,</p><ul><li><code>f(2) = 3</code> 입니다. 다음 표와 같이 2보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 3이기 때문입니다.</li></ul><div class="table-container"><table><thead><tr><th>수</th><th>비트</th><th>다른 비트의 개수</th></tr></thead><tbody><tr><td>2</td><td><code>000...0010</code></td><td></td></tr><tr><td>3</td><td><code>000...0011</code></td><td>1</td></tr></tbody></table></div><ul><li><code>f(7) = 11</code> 입니다. 다음 표와 같이 7보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 11이기 때문입니다.</li></ul><div class="table-container"><table><thead><tr><th>수</th><th>비트</th><th>다른 비트의 개수</th></tr></thead><tbody><tr><td>7</td><td><code>000...0111</code></td><td></td></tr><tr><td>8</td><td><code>000...1000</code></td><td>4</td></tr><tr><td>9</td><td><code>000...1001</code></td><td>3</td></tr><tr><td>10</td><td><code>000...1010</code></td><td>3</td></tr><tr><td>11</td><td><code>000...1011</code></td><td>2</td></tr></tbody></table></div><p>정수들이 담긴 배열 <code>numbers</code>가 매개변수로 주어집니다. <code>numbers</code>의 모든 수들에 대하여 각 수의 <code>f</code> 값을 배열에 차례대로 담아 return 하도록 solution 함수를 완성해주세요.</p><hr><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>1 ≤ <code>numbers</code>의 길이 ≤ 100,000</li><li>0 ≤ <code>numbers</code>의 모든 수 ≤ 1015</li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>numbers</th><th>result</th></tr></thead><tbody><tr><td><code>[2,7]</code></td><td><code>[3,11]</code></td></tr></tbody></table></div><hr><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1</p><ul><li>문제 예시와 같습니다.</li></ul></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">numbers</span>):</span></span><br><span class="line">    answer = []</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        <span class="keyword">if</span> n % <span class="number">4</span> == <span class="number">3</span>:</span><br><span class="line">            b = <span class="string">&#x27;0&#x27;</span>+<span class="built_in">bin</span>(n)[<span class="number">2</span>:]</span><br><span class="line">            i = <span class="built_in">len</span>(b)-<span class="number">3</span></span><br><span class="line">            <span class="keyword">while</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> b[i] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            answer.append(<span class="built_in">int</span>(b[:i] + <span class="string">&#x27;10&#x27;</span> + b[i+<span class="number">2</span>:],<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">else</span>: answer.append(n+<span class="number">1</span>)    </span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="접근법"><a href="#접근법" class="headerlink" title="접근법"></a>접근법</h2><p>해당 문제는 숨은 규칙성을 찾아내는 것이 가장 중요했다.  </p><p>처음에는 <code>n</code>에 1씩 더하며 <code>A^B</code> 논리 비교로 값을 구하려 했지만, 효율성에서 실패했다.  </p><p>그러다 ‘01’로 끝나는 비트와 <code>10</code>으로 끝나는 비트의 수는 항상 <code>1</code>을 더한값이 정답임을 발견했다. 이는 짝수, 그리고 나머지가 1인 수다. </p><p><br/></p><h2 id="규칙성"><a href="#규칙성" class="headerlink" title="규칙성"></a>규칙성</h2><p>따라서 문제는 크게 다음과 같이 나눠진다.</p><ol><li>4로 나누었을 때 나머지가 3이 아닌 수 (<code>0,1,2</code>)</li><li>4로 나누었을 때 나머지가 3인 수</li></ol><p><br/></p><h2 id="1번-케이스-풀이"><a href="#1번-케이스-풀이" class="headerlink" title="1번 케이스 풀이"></a>1번 케이스 풀이</h2><p>1번 케이스는 단순히 주어진 <code>n</code>값에 1을 더하면 정답이 된다.</p><p><br/></p><h2 id="2번-케이스-풀이"><a href="#2번-케이스-풀이" class="headerlink" title="2번 케이스 풀이"></a>2번 케이스 풀이</h2><p>2번 케이스는 <code>bit</code>로 표현시 마지막 부분이 2개 이상의 <code>1</code>이 반복된 숫자라는 뜻이 된다(<code>1011, 1111</code> 등). 이때 n에 1을 더하면 차례대로 자리수가 올라가 큰 <code>bit</code>에 큰 변화를 가져오고, 문제 요구조건을 만족시키지 못한다.  </p><p>따라서 1~2개의 변화만 가져가면서 더 큰 값을 구하려면, 끝에서부터 <code>0</code>이 나올때까지(없다면 숫자 첫 부분까지) 연속된 <code>1</code>의 비트값에 해당하는 숫자그룹에 1을 더한 값을 다시 더해야 한다.  </p><p>즉, <code>100111</code> 이란 비트가 있으면 끝에서부터 <code>0</code>이 나올때까지 연속된 <code>1</code>의 그룹인 <code>111</code>에 1을 더한 값 <code>1000</code>(=8)을 더해야 한다. 이는 <code>111</code>의 문자열 길이만큼 2를 거듭한 수로 나타낼 수 있다 (<script type="math/tex">2^3</script>).  </p><p>또한, 최소값의 요구조건을 만족시키려면 여기서 방금 더한 <code>1</code>이 아닌 다른 <code>1</code> 값을 빼서 최소값을 만족시켜야한다. 따라서 기존 <code>1</code> 그룹에서 가장 컸던 값(<code>111</code>에서는 <code>100</code>에 해당하는 값 = 4)을 다시 빼야한다.  </p><p><br/></p><h2 id="풀이-코드-결과"><a href="#풀이-코드-결과" class="headerlink" title="풀이 코드 결과"></a>풀이 코드 결과</h2><p>그런데 이는 사실상 <code>0</code>을 만날때까지 연속된 <code>1</code>의 그룹에서 맨 앞자리 <code>01</code>을 <code>10</code>으로 스왑한 결과와 동일하다.  </p><p>따라서 이러한 풀이 방법이 효율성까지 만족시키는 정답이 된다.</p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      <category domain="https://sklubmk.github.io/tags/bit/">bit</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/11/496d4090b8fc/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[일상] M1 아이패드 프로 + (화이트 매직 키보드 + 애플 팬슬 2.0) 간략 후기</title>
      <link>https://sklubmk.github.io/2021/10/09/e521a2981100/</link>
      <guid>https://sklubmk.github.io/2021/10/09/e521a2981100/</guid>
      <pubDate>Sat, 09 Oct 2021 10:53:41 GMT</pubDate>
      
      <description>&lt;h1 style=&quot;color:#f46049&quot;&gt;💡 tl;dr&lt;/h1&gt;

&lt;hr&gt;
&lt;p&gt;&lt;code&gt;후기 3줄 요약&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;M1 아이패드 프로 -&amp;gt; 업무, 공부, 일상 측면에서 전천후 기기&lt;/li&gt;
&lt;li&gt;매직 키보드 -&amp;gt; 이쁜 쓰레기인데.. 이쁘다.&lt;/li&gt;
&lt;li&gt;애플 팬슬 2.0 -&amp;gt; 꼭 필요한게 아니라면 구입 X&lt;/li&gt;
&lt;/ol&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 style="color:#f46049">💡 tl;dr</h1><hr><p><code>후기 3줄 요약</code></p><ol><li>M1 아이패드 프로 -&gt; 업무, 공부, 일상 측면에서 전천후 기기</li><li>매직 키보드 -&gt; 이쁜 쓰레기인데.. 이쁘다.</li><li>애플 팬슬 2.0 -&gt; 꼭 필요한게 아니라면 구입 X</li></ol><span id="more"></span><p><br/></p><p><span style="color:rgb(160,160,160)"> <em>이 포스팅은 쿠팡 파트너스 활동의 일환으로, 이에 따른 일정액의 수수료를 제공받습니다.</em></span></p><p><br/></p><h1 id="구입-배경"><a href="#구입-배경" class="headerlink" title="구입 배경"></a>구입 배경</h1><hr><p>나는 약 4개월 전, 기존 사용하던 <code>14late 맥북프로 레티나</code>가 점점 성능저하를 보이자 새 맥북 기기의 구입 필요성을 느꼈다. <code>m1 맥북 프로</code>와 <code>m1 ipad pro</code> 사이에서 고민하던 중 <code>m1 ipad pro</code>를 구매했는데, 여기에는 몇 가지 이유가 있었다.</p><p><br/></p><h1 id="구매-이유"><a href="#구매-이유" class="headerlink" title="구매 이유"></a>구매 이유</h1><hr><ol><li>일상에서도 자주 사용하고 싶었다. 특히 게임이나 그림, 독서 등 다양한 취미를 이용하고 싶었다.</li><li>당분간 야외에서 업무에 집중할 일이 딱히 없었다.</li><li>오로지 업무용으로 사용할 또다른 맥 기기 구매를 준비중이였다 (<code>m1 mini</code> or <code>m1 imac</code>)</li></ol><p>이런 관점에서 <code>m1 ipad pro 12.9인치</code>를 구매했고, 현재까지 매우 만족하며 사용중이다.</p><p><br/></p><p><br/></p><h1 id="후기-단점"><a href="#후기-단점" class="headerlink" title="후기 단점"></a>후기 단점</h1><hr><p>다만 구매 전 예상하지 못한 단점들을 조금 들자면,</p><ol><li>태블릿이란 OS의 한계(애플의 지향성)는 명확하다<ul><li>PC용으로 제공되는 많은 서비스에서 불이익을 본 경험이 있다.</li></ul></li><li>업무용 생산성이 기대한 만큼보다는 적다.<ul><li>개인적으로 개발까지 가능할 것이라 기대했는데, 이를 만족하진 못했고 결국 PC 원격사용으로 만족하는 중이다.</li></ul></li><li>주변기기 활용이 힘들다<ul><li>애플펜슬을 구매하는 등 이를 보완하려 노력했지만, 역부족이다.</li><li>마찬가지로 <code>매직키보드</code> 또한 엄청난 가격임에도 크게 활용도가 높진 않았다.</li></ul></li></ol><p><br/></p><p><br/></p><h1 id="후기-장점"><a href="#후기-장점" class="headerlink" title="후기 장점"></a>후기 장점</h1><hr><p>그럼에도 이 기기를 사야할 이유들은 충분하다.</p><ol><li>전천후 올라운드 기기<ul><li>업무, 공부, 취미 등 다양한 분야에서 골고루 활용 가능하다. </li><li>특히 어른용 최고의 장난감이 된다..</li></ul></li><li>어떤 자리에도 어울린다<ul><li>강의, 업무, 회의, 여행, 간단한 티타임 순간마저도 그 값어치를 한다.</li></ul></li><li>눈 호강<ul><li>120hz의 부드러움과 4k 화질은 영상미에 대한 새로운 눈을 띄게 만든다.</li></ul></li></ol><p><br/></p><p><br/></p><h1 id="추천"><a href="#추천" class="headerlink" title="추천"></a>추천</h1><hr><p>이러한 점들을 종합하여 본인이 4개월간 사용하며 느껴본 정말로 구입을 추천하는 유형은 다음과 같다.</p><ol><li>(영상 작업을 제외한) 업무용으로 크게 사용할 필요가 없는 사람</li><li>취미가 부족하고 일상에 새로운 자극이 필요한 사람</li><li>영상 제작, 편집, 시청 등의 작업을 목적으로 하는 사람</li></ol><p><br></p><p>무엇보다 가격이 만만치 않기 때문에 만약 구입을 고민하고 있는 사람이라면, 이러한 점들을 잘 고려하여 신중한 소비를 하는데 도움이 됐으면 한다.</p><p><br/></p><p><span style="color:rgb(160,160,160)"> <em>이 포스팅은 쿠팡 파트너스 활동의 일환으로, 이에 따른 일정액의 수수료를 제공받습니다.</em></span></p><iframe src="https://coupa.ng/b8BdTO" width="120" height="240" frameborder="0" scrolling="no" referrerpolicy="unsafe-url"></iframe><iframe src="https://coupa.ng/b8Bd8c" width="120" height="240" frameborder="0" scrolling="no" referrerpolicy="unsafe-url"></iframe><iframe src="https://coupa.ng/b8BeaX" width="120" height="240" frameborder="0" scrolling="no" referrerpolicy="unsafe-url"></iframe>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%9D%BC%EC%83%81/">일상</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%9D%BC%EC%83%81/">일상</category>
      
      <category domain="https://sklubmk.github.io/tags/apple/">apple</category>
      
      <category domain="https://sklubmk.github.io/tags/M1/">M1</category>
      
      <category domain="https://sklubmk.github.io/tags/ipad/">ipad</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%9B%84%EA%B8%B0/">후기</category>
      
      <category domain="https://sklubmk.github.io/tags/tech/">tech</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/09/e521a2981100/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 방문 길이</title>
      <link>https://sklubmk.github.io/2021/10/08/d5da90761b93/</link>
      <guid>https://sklubmk.github.io/2021/10/08/d5da90761b93/</guid>
      <pubDate>Fri, 08 Oct 2021 13:00:03 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p>게임 캐릭터를 4가지 명령어를 통해 움직이려 합니다. 명령어는 다음과 같습니다.</p><ul><li><p>U: 위쪽으로 한 칸 가기</p></li><li><p>D: 아래쪽으로 한 칸 가기</p></li><li><p>R: 오른쪽으로 한 칸 가기</p></li><li><p>L: 왼쪽으로 한 칸 가기</p></li></ul><p>캐릭터는 좌표평면의 (0, 0) 위치에서 시작합니다. 좌표평면의 경계는 왼쪽 위(-5, 5), 왼쪽 아래(-5, -5), 오른쪽 위(5, 5), 오른쪽 아래(5, -5)로 이루어져 있습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/ace0e7bc-9092-4b95-9bfb-3a55a2aa780e/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B51_qpp9l3.png" alt="방문길이1_qpp9l3.png"></p><p>예를 들어, “ULURRDLLU”로 명령했다면</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/668c7458-e184-472d-9d32-f5d2acca759a/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B52_lezmdo.png" alt="방문길이2_lezmdo.png"></p><ul><li>1번 명령어부터 7번 명령어까지 다음과 같이 움직입니다.</li></ul><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/08558e36-d667-4160-bfec-b754c78a7d85/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B53_sootjd.png" alt="방문길이3_sootjd.png"></p><ul><li>8번 명령어부터 9번 명령어까지 다음과 같이 움직입니다.</li></ul><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/a52af28e-5835-438b-9f40-5467ebf9bf03/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B54_hlpiej.png" alt="방문길이4_hlpiej.png"></p><p>이때, 우리는 게임 캐릭터가 지나간 길 중 캐릭터가 처음 걸어본 길의 길이를 구하려고 합니다. 예를 들어 위의 예시에서 게임 캐릭터가 움직인 길이는 9이지만, 캐릭터가 처음 걸어본 길의 길이는 7이 됩니다. (8, 9번 명령어에서 움직인 길은 2, 3번 명령어에서 이미 거쳐 간 길입니다)</p><p>단, 좌표평면의 경계를 넘어가는 명령어는 무시합니다.</p><p>예를 들어, “LULLLLLLU”로 명령했다면</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/f631f005-f8de-4392-a76c-a9ef64b6de08/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B55_nitjwj.png" alt="방문길이5_nitjwj.png"></p><ul><li>1번 명령어부터 6번 명령어대로 움직인 후, 7, 8번 명령어는 무시합니다. 다시 9번 명령어대로 움직입니다.</li></ul><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/35e62f0a-43c6-4142-bec6-6d28fbc57216/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B56_nzhumd.png" alt="방문길이6_nzhumd.png"></p><p>이때 캐릭터가 처음 걸어본 길의 길이는 7이 됩니다.</p><p>명령어가 매개변수 dirs로 주어질 때, 게임 캐릭터가 처음 걸어본 길의 길이를 구하여 return 하는 solution 함수를 완성해 주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>dirs는 string형으로 주어지며, ‘U’, ‘D’, ‘R’, ‘L’ 이외에 문자는 주어지지 않습니다.</li><li>dirs의 길이는 500 이하의 자연수입니다.</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>dirs</th><th>answer</th></tr></thead><tbody><tr><td>“ULURRDLLU”</td><td>7</td></tr><tr><td>“LULLLLLLU”</td><td>7</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1\<br>문제의 예시와 같습니다.</p><p>입출력 예 #2\<br>문제의 예시와 같습니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">dirs</span>):</span></span><br><span class="line">    visited = []</span><br><span class="line">    dxdy = &#123;<span class="string">&#x27;U&#x27;</span>:(<span class="number">0</span>,<span class="number">1</span>),<span class="string">&#x27;D&#x27;</span>:(<span class="number">0</span>,-<span class="number">1</span>),<span class="string">&#x27;R&#x27;</span>:(<span class="number">1</span>,<span class="number">0</span>),<span class="string">&#x27;L&#x27;</span>:(-<span class="number">1</span>,<span class="number">0</span>)&#125;</span><br><span class="line">    point = [<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">list</span>(dirs):</span><br><span class="line">        before = [point[<span class="number">0</span>], point[<span class="number">1</span>]]</span><br><span class="line">        point[<span class="number">0</span>] += dxdy[d][<span class="number">0</span>] <span class="keyword">if</span> -<span class="number">5</span>&lt;=point[<span class="number">0</span>]+dxdy[d][<span class="number">0</span>]&lt;=<span class="number">5</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">        point[<span class="number">1</span>] += dxdy[d][<span class="number">1</span>] <span class="keyword">if</span> -<span class="number">5</span>&lt;=point[<span class="number">1</span>]+dxdy[d][<span class="number">1</span>]&lt;=<span class="number">5</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> before != point:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">tuple</span>(before+point) <span class="keyword">not</span> <span class="keyword">in</span> visited <span class="keyword">and</span> <span class="built_in">tuple</span>(point+before) <span class="keyword">not</span> <span class="keyword">in</span> visited:</span><br><span class="line">                visited.append(<span class="built_in">tuple</span>(before+point))</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(visited)</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li>알파벳별 <code>dx dy</code>를 정리해두어 쉽게 계산한다</li><li>움직일 수 있는 점으로 이동한다면, 출발점과 방문점의 정보를 <code>way</code>로 담아 수집한다<ul><li>이때, 출발점과 방문점이 반대가 되는 방향도 수집한다</li></ul></li><li>이미 존재하는 <code>way</code> 이동시에는 <code>visited</code>의 길이가 증가하지 않는다</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/08/d5da90761b93/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 점프와 순간 이동</title>
      <link>https://sklubmk.github.io/2021/10/06/10fe4cc0cf7c/</link>
      <guid>https://sklubmk.github.io/2021/10/06/10fe4cc0cf7c/</guid>
      <pubDate>Wed, 06 Oct 2021 12:43:12 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p>OO 연구소는 한 번에 K 칸을 앞으로 점프하거나, (현재까지 온 거리) x 2 에 해당하는 위치로 순간이동을 할 수 있는 특수한 기능을 가진 아이언 슈트를 개발하여 판매하고 있습니다. 이 아이언 슈트는 건전지로 작동되는데, 순간이동을 하면 건전지 사용량이 줄지 않지만, 앞으로 K 칸을 점프하면 K 만큼의 건전지 사용량이 듭니다. 그러므로 아이언 슈트를 착용하고 이동할 때는 순간 이동을 하는 것이 더 효율적입니다. 아이언 슈트 구매자는 아이언 슈트를 착용하고 거리가 N 만큼 떨어져 있는 장소로 가려고 합니다. 단, 건전지 사용량을 줄이기 위해 점프로 이동하는 것은 최소로 하려고 합니다. 아이언 슈트 구매자가 이동하려는 거리 N이 주어졌을 때, 사용해야 하는 건전지 사용량의 최솟값을 return하는 solution 함수를 만들어 주세요.</p><p>예를 들어 거리가 5만큼 떨어져 있는 장소로 가려고 합니다.\<br>아이언 슈트를 입고 거리가 5만큼 떨어져 있는 장소로 갈 수 있는 경우의 수는 여러 가지입니다.</p><ul><li>처음 위치 0 에서 5 칸을 앞으로 점프하면 바로 도착하지만, 건전지 사용량이 5 만큼 듭니다.</li><li>처음 위치 0 에서 2 칸을 앞으로 점프한 다음 순간이동 하면 (현재까지 온 거리 : 2) x 2에 해당하는 위치로 이동할 수 있으므로 위치 4로 이동합니다. 이때 1 칸을 앞으로 점프하면 도착하므로 건전지 사용량이 3 만큼 듭니다.</li><li>처음 위치 0 에서 1 칸을 앞으로 점프한 다음 순간이동 하면 (현재까지 온 거리 : 1) x 2에 해당하는 위치로 이동할 수 있으므로 위치 2로 이동됩니다. 이때 다시 순간이동 하면 (현재까지 온 거리 : 2) x 2 만큼 이동할 수 있으므로 위치 4로 이동합니다. 이때 1 칸을 앞으로 점프하면 도착하므로 건전지 사용량이 2 만큼 듭니다.</li></ul><p>위의 3가지 경우 거리가 5만큼 떨어져 있는 장소로 가기 위해서 3번째 경우가 건전지 사용량이 가장 적으므로 답은 2가 됩니다.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>숫자 N: 1 이상 10억 이하의 자연수</li><li>숫자 K: 1 이상의 자연수</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>N</th><th>result</th></tr></thead><tbody><tr><td>5</td><td>2</td></tr><tr><td>6</td><td>2</td></tr><tr><td>5000</td><td>5</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1\<br>위의 예시와 같습니다.</p><p>입출력 예 #2\<br>처음 위치 0 에서 1 칸을 앞으로 점프한 다음 순간이동 하면 (현재까지 온 거리 : 1) x 2에 해당하는 위치로 이동할 수 있으므로 위치 2로 이동합니다. 이때 1 칸을 앞으로 점프하면 위치3으로 이동합니다. 이때 다시 순간이동 하면 (현재까지 온 거리 : 3) x 2 이동할 수 있으므로 위치 6에 도착합니다. 이 경우가 건전지 사용량이 가장 적으므로 2를 반환해주면 됩니다.</p><p>입출력 예 #3\<br>위와 같은 방식으로 합니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bin</span>(n)[<span class="number">2</span>:].count(<span class="string">&#x27;1&#x27;</span>)</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><p>처음 생각해낸 풀이 방법은 <code>n</code>에서 <code>0</code>까지 역으로 값을 줄여나가며 계산하는 방법이었다. 짝수가 되면 반으로 줄이고, 홀수가 되면 <code>1</code>씩 값을 줄이며 <code>count</code>를 늘려나갔다. 그러나 해당 방법은 10억이하의 데이터를 만났을 때 효율성이 좋지 않았다.</p><p>원리 자체는 <code>2</code>로 나눌 수 있을때 나누기, 나눌 수 없을때 값을 <code>1</code> 줄이고 계산에 더하기다. 즉, 풀이 자체가 <code>2</code>의 배수와 관련이 있다. 그리고 잠깐 생각해보면, 문제에서 언급하는 점프는 <code>bit</code>의 <code>shift</code>에 해당하는 개념인 것을 알 수 있다. 한 번의 점프 후, 다음 점프를 할 수 없는 상황일 때 <code>1</code>의 <code>bit</code>값을 남긴다.</p><p>이 과정을 반복하면 점프가 불가능한 상황에서만 <code>1</code>을 남긴 값은 <code>2</code>진법으로 표현한 <code>bit</code>값과 동일한 결과가 된다.</p><p>따라서 주어진 <code>n</code>의 <code>2진법</code> 값에서 <code>1</code>의 개수가 문제의 정답이 된다.</p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/06/10fe4cc0cf7c/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV3) 전력망을 둘로 나누기</title>
      <link>https://sklubmk.github.io/2021/10/05/f63928905c8e/</link>
      <guid>https://sklubmk.github.io/2021/10/05/f63928905c8e/</guid>
      <pubDate>Tue, 05 Oct 2021 13:56:30 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>n개의 송전탑이 전선을 통해 하나의 <a href="https://en.wikipedia.org/wiki/Tree_(data_structure">트리</a>) 형태로 연결되어 있습니다. 당신은 이 전선들 중 하나를 끊어서 현재의 전력망 네트워크를 2개로 분할하려고 합니다. 이때, 두 전력망이 갖게 되는 송전탑의 개수를 최대한 비슷하게 맞추고자 합니다.</p><p>송전탑의 개수 n, 그리고 전선 정보 wires가 매개변수로 주어집니다. 전선들 중 하나를 끊어서 송전탑 개수가 가능한 비슷하도록 두 전력망으로 나누었을 때, 두 전력망이 가지고 있는 송전탑 개수의 차이(절대값)를 return 하도록 solution 함수를 완성해주세요.</p><hr><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>n은 2 이상 100 이하인 자연수입니다.</li><li>wires는 길이가 <code>n-1</code>인 정수형 2차원 배열입니다.<ul><li>wires의 각 원소는 [v1, v2] 2개의 자연수로 이루어져 있으며, 이는 전력망의 v1번 송전탑과 v2번 송전탑이 전선으로 연결되어 있다는 것을 의미합니다.</li><li>1 ≤ v1 &lt; v2 ≤ n 입니다.</li><li>전력망 네트워크가 하나의 트리 형태가 아닌 경우는 입력으로 주어지지 않습니다.</li></ul></li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>n</th><th>wires</th><th>result</th></tr></thead><tbody><tr><td>9</td><td><code>[[1,3],[2,3],[3,4],[4,5],[4,6],[4,7],[7,8],[7,9]]</code></td><td>3</td></tr><tr><td>4</td><td><code>[[1,2],[2,3],[3,4]]</code></td><td>0</td></tr><tr><td>7</td><td><code>[[1,2],[2,7],[3,7],[3,4],[4,5],[6,7]]</code></td><td>1</td></tr></tbody></table></div><hr><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1</p><ul><li>다음 그림은 주어진 입력을 해결하는 방법 중 하나를 나타낸 것입니다.</li><li><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/5b8a0dcd-cba0-47ca-b5e3-d3bafc81f9d6/ex1.png" alt="ex1.png"></li><li>4번과 7번을 연결하는 전선을 끊으면 두 전력망은 각 6개와 3개의 송전탑을 가지며, 이보다 더 비슷한 개수로 전력망을 나눌 수 없습니다.</li><li>또 다른 방법으로는 3번과 4번을 연결하는 전선을 끊어도 최선의 정답을 도출할 수 있습니다.</li></ul><p>입출력 예 #2</p><ul><li>다음 그림은 주어진 입력을 해결하는 방법을 나타낸 것입니다.</li><li><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/b28865e1-a18e-429d-ae7a-14e77e801539/ex2.png" alt="ex2.png"></li><li>2번과 3번을 연결하는 전선을 끊으면 두 전력망이 모두 2개의 송전탑을 가지게 되며, 이 방법이 최선입니다.</li></ul><p>입출력 예 #3</p><ul><li>다음 그림은 주어진 입력을 해결하는 방법을 나타낸 것입니다.</li><li><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/0a7f21af-1e07-4015-8ad3-c06155c613b3/ex3.png" alt="ex3.png"></li><li>3번과 7번을 연결하는 전선을 끊으면 두 전력망이 각각 4개와 3개의 송전탑을 가지게 되며, 이 방법이 최선입니다.</li></ul></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n, wires</span>):</span></span><br><span class="line">    answer = n</span><br><span class="line">    graph = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> wire <span class="keyword">in</span> wires:</span><br><span class="line">        graph[wire[<span class="number">0</span>]].append(wire[<span class="number">1</span>])</span><br><span class="line">        graph[wire[<span class="number">1</span>]].append(wire[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> wire <span class="keyword">in</span> wires:</span><br><span class="line">        A, B = [wire[<span class="number">0</span>]], [wire[<span class="number">1</span>]]</span><br><span class="line">        isVisit = [<span class="literal">False</span>] * (n+<span class="number">1</span>)</span><br><span class="line">        isVisit[A[<span class="number">0</span>]] = <span class="literal">True</span></span><br><span class="line">        isVisit[B[<span class="number">0</span>]] = <span class="literal">True</span></span><br><span class="line">        n_A, n_B = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> A:</span><br><span class="line">            a_pop = A.pop()</span><br><span class="line">            <span class="keyword">for</span> g <span class="keyword">in</span> graph[a_pop]:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> isVisit[g]:</span><br><span class="line">                    A.append(g)</span><br><span class="line">                    n_A += <span class="number">1</span></span><br><span class="line">                    isVisit[g] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> B:</span><br><span class="line">            b_pop = B.pop()</span><br><span class="line">            <span class="keyword">for</span> g <span class="keyword">in</span> graph[b_pop]:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> isVisit[g]:</span><br><span class="line">                    B.append(g)</span><br><span class="line">                    n_B +=<span class="number">1</span></span><br><span class="line">                    isVisit[g] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        answer = <span class="built_in">min</span>(answer, <span class="built_in">abs</span>(n_A - n_B))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><p><br/></p><h2 id="Python-풀이-2"><a href="#Python-풀이-2" class="headerlink" title="Python 풀이 2"></a>Python 풀이 2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n, wires</span>):</span></span><br><span class="line">    ans = n</span><br><span class="line">    <span class="keyword">for</span> sub <span class="keyword">in</span> (wires[i+<span class="number">1</span>:] + wires[:i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(wires))):</span><br><span class="line">        s = <span class="built_in">set</span>(sub[<span class="number">0</span>])</span><br><span class="line">        [s.update(v) <span class="keyword">for</span> _ <span class="keyword">in</span> sub <span class="keyword">for</span> v <span class="keyword">in</span> sub <span class="keyword">if</span> <span class="built_in">set</span>(v) &amp; s]</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, <span class="built_in">abs</span>(<span class="number">2</span> * <span class="built_in">len</span>(s) - n))</span><br><span class="line">    <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-1"><a href="#풀이-1" class="headerlink" title="풀이 1"></a>풀이 1</h2><ul><li>A, B로 갈라진 두 그룹의 자식 노드 수를 구하는 과정을 더 간략화 할 수 있다</li><li>추후 다시 연습해봐야 할 좋은 문제 같다</li></ul><p><br/></p><h2 id="풀이-2"><a href="#풀이-2" class="headerlink" title="풀이 2"></a>풀이 2</h2><ul><li>기존 A,B로 구분하여 자식노드의 합을 구했던 방법을</li><li>한 엣지를 선택하고 이를 끊어 생기는 두 트리로 계산하는 방식으로 간략화</li><li><code>set</code> 자료구조를 활용하여 중복 제거</li><li>abs( i-1-(N-i-1) ) 풀이 활용</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv3/">lv3</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv3/">lv3</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/%EC%9C%84%ED%81%B4%EB%A6%AC%EC%B1%8C%EB%A6%B0%EC%A7%80/">위클리챌린지</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/05/f63928905c8e/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[알고리즘] 페이지 교체 알고리즘</title>
      <link>https://sklubmk.github.io/2021/10/03/f293fd2c0858/</link>
      <guid>https://sklubmk.github.io/2021/10/03/f293fd2c0858/</guid>
      <pubDate>Sun, 03 Oct 2021 11:29:00 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;💡-tl-dr&quot;&gt;&lt;a href=&quot;#💡-tl-dr&quot; class=&quot;headerlink&quot; title=&quot;💡 tl;dr&quot;&gt;&lt;/a&gt;💡 tl;dr&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;FIFO &lt;code&gt;(First In First Out)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;LFU &lt;code&gt;(Least Recently Used)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;LRU &lt;code&gt;(Least Recently Used)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="💡-tl-dr"><a href="#💡-tl-dr" class="headerlink" title="💡 tl;dr"></a>💡 tl;dr</h1><hr><ul><li>FIFO <code>(First In First Out)</code></li><li>LFU <code>(Least Recently Used)</code></li><li>LRU <code>(Least Recently Used)</code></li></ul><span id="more"></span><p><br/></p><p><br/></p><h1 id="FIFO-First-In-First-Out"><a href="#FIFO-First-In-First-Out" class="headerlink" title="FIFO (First In First Out)"></a>FIFO <code>(First In First Out)</code></h1><hr><ul><li>페이지가 주기억장치에 적재된 시간을 기준으로 교체될 페이지를 선정하는 기법</li><li>단점<ul><li>중요한 페이지가 오래 있었다는 이유만으로 교체되는 불합리</li><li>가장 오래 있었던 페이지는 앞으로 계속 사용될 가능성</li></ul></li></ul><p><br/></p><p><br/></p><h1 id="LFU-Least-Frequently-Used"><a href="#LFU-Least-Frequently-Used" class="headerlink" title="LFU (Least Frequently Used)"></a>LFU <code>(Least Frequently Used)</code></h1><hr><p><img src="https://xuri.me/wp-content/uploads/2016/08/lru-algorithm.png" alt="LFU"></p><ul><li>가장 적은 횟수를 참조하는 페이지를 교체</li><li>단점<ul><li>(참조될 가능성이 많음에도 불구하고) 최근에 사용된 프로그램을 교체시킬 가능성</li><li>해당 횟수를 증가시키므로 오버헤드 발생</li></ul></li></ul><p><br/></p><p><br/></p><h1 id="LRU-Least-Recently-Used"><a href="#LRU-Least-Recently-Used" class="headerlink" title="LRU (Least Recently Used)"></a>LRU <code>(Least Recently Used)</code></h1><hr><p><img src="https://xuri.me/wp-content/uploads/2016/08/lfu-algorithm.png" alt="LFU"></p><ul><li>가장 오랫동안 참조되지 않은 페이지를 교체</li><li>단점 : 프로세스가 주기억장치에 접근할 때마다 참조된 페이지에 대한 시간을 기록해야함. 큰 오버헤드가 발생</li></ul><p><br/></p><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://j2wooooo.tistory.com/121">LRU 알고리즘</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EA%B0%9C%EB%85%90/">개념</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/03/f293fd2c0858/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) [1차]캐시</title>
      <link>https://sklubmk.github.io/2021/10/03/24cb0202714f/</link>
      <guid>https://sklubmk.github.io/2021/10/03/24cb0202714f/</guid>
      <pubDate>Sun, 03 Oct 2021 11:16:44 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p><code>[캐시]</code></p><p>지도개발팀에서 근무하는 제이지는 지도에서 도시 이름을 검색하면 해당 도시와 관련된 맛집 게시물들을 데이터베이스에서 읽어 보여주는 서비스를 개발하고 있다.\<br>이 프로그램의 테스팅 업무를 담당하고 있는 어피치는 서비스를 오픈하기 전 각 로직에 대한 성능 측정을 수행하였는데, 제이지가 작성한 부분 중 데이터베이스에서 게시물을 가져오는 부분의 실행시간이 너무 오래 걸린다는 것을 알게 되었다.\<br>어피치는 제이지에게 해당 로직을 개선하라고 닦달하기 시작하였고, 제이지는 DB 캐시를 적용하여 성능 개선을 시도하고 있지만 캐시 크기를 얼마로 해야 효율적인지 몰라 난감한 상황이다.</p><p>어피치에게 시달리는 제이지를 도와, DB 캐시를 적용할 때 캐시 크기에 따른 실행시간 측정 프로그램을 작성하시오.</p><h2 id="입력-형식"><a href="#입력-형식" class="headerlink" title="입력 형식"></a>입력 형식</h2><ul><li>캐시 크기(<code>cacheSize</code>)와 도시이름 배열(<code>cities</code>)을 입력받는다.</li><li><code>cacheSize</code>는 정수이며, 범위는 0 ≦ <code>cacheSize</code> ≦ 30 이다.</li><li><code>cities</code>는 도시 이름으로 이뤄진 문자열 배열로, 최대 도시 수는 100,000개이다.</li><li>각 도시 이름은 공백, 숫자, 특수문자 등이 없는 영문자로 구성되며, 대소문자 구분을 하지 않는다. 도시 이름은 최대 20자로 이루어져 있다.</li></ul><h2 id="출력-형식"><a href="#출력-형식" class="headerlink" title="출력 형식"></a>출력 형식</h2><ul><li>입력된 도시이름 배열을 순서대로 처리할 때, “총 실행시간”을 출력한다.</li></ul><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><ul><li>캐시 교체 알고리즘은 <code>LRU</code>(Least Recently Used)를 사용한다.</li><li><code>cache hit</code>일 경우 실행시간은 <code>1</code>이다.</li><li><code>cache miss</code>일 경우 실행시간은 <code>5</code>이다.</li></ul><h2 id="입출력-예제"><a href="#입출력-예제" class="headerlink" title="입출력 예제"></a>입출력 예제</h2><div class="table-container"><table><thead><tr><th>캐시크기(cacheSize)</th><th>도시이름(cities)</th><th>실행시간</th></tr></thead><tbody><tr><td>3</td><td>[“Jeju”, “Pangyo”, “Seoul”, “NewYork”, “LA”, “Jeju”, “Pangyo”, “Seoul”, “NewYork”, “LA”]</td><td>50</td></tr><tr><td>3</td><td>[“Jeju”, “Pangyo”, “Seoul”, “Jeju”, “Pangyo”, “Seoul”, “Jeju”, “Pangyo”, “Seoul”]</td><td>21</td></tr><tr><td>2</td><td>[“Jeju”, “Pangyo”, “Seoul”, “NewYork”, “LA”, “SanFrancisco”, “Seoul”, “Rome”, “Paris”, “Jeju”, “NewYork”, “Rome”]</td><td>60</td></tr><tr><td>5</td><td>[“Jeju”, “Pangyo”, “Seoul”, “NewYork”, “LA”, “SanFrancisco”, “Seoul”, “Rome”, “Paris”, “Jeju”, “NewYork”, “Rome”]</td><td>52</td></tr><tr><td>2</td><td>[“Jeju”, “Pangyo”, “NewYork”, “newyork”]</td><td>16</td></tr><tr><td>0</td><td>[“Jeju”, “Pangyo”, “Seoul”, “NewYork”, “LA”]</td><td>25</td></tr></tbody></table></div><p><a href="http://tech.kakao.com/2017/09/27/kakao-blind-recruitment-round-1/">해설 보러가기</a></p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">cacheSize, cities</span>):</span></span><br><span class="line">    cache = []</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> city <span class="keyword">in</span> cities:</span><br><span class="line">        l_city = city.lower()</span><br><span class="line">        i = cache.index(l_city) <span class="keyword">if</span> l_city <span class="keyword">in</span> cache <span class="keyword">else</span> -<span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> i &gt;= <span class="number">0</span>:</span><br><span class="line">            cache.insert(<span class="number">0</span>,cache.pop(i))</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cache.insert(<span class="number">0</span>,l_city)</span><br><span class="line">            count += <span class="number">5</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(cache) &gt; cacheSize:</span><br><span class="line">            cache.pop()</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> count</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li><a href="https://zetawiki.com/wiki/%ED%8C%8C%EC%9D%B4%EC%8D%AC_unshift,_shift,_push,_pop">Python shift, unshift, push, pop</a></li><li><code>페이지 교체 알고리즘</code> 참조</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/03/24cb0202714f/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) JadenCase 문자열 만들기</title>
      <link>https://sklubmk.github.io/2021/10/02/a78879dd0eb0/</link>
      <guid>https://sklubmk.github.io/2021/10/02/a78879dd0eb0/</guid>
      <pubDate>Sat, 02 Oct 2021 08:16:05 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p>JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다. 문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>s는 길이 1 이상인 문자열입니다.</li><li>s는 알파벳과 공백문자(“ “)로 이루어져 있습니다.</li><li>첫 문자가 영문이 아닐때에는 이어지는 영문은 소문자로 씁니다. ( 첫번째 입출력 예 참고 )</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>s</th><th>return</th></tr></thead><tbody><tr><td>“3people unFollowed me”</td><td>“3people Unfollowed Me”</td></tr><tr><td>“for the last week”</td><td>“For The Last Week”</td></tr></tbody></table></div></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>.join(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:(x[<span class="number">0</span>].upper()+x[<span class="number">1</span>:].lower()) <span class="keyword">if</span> <span class="built_in">len</span>(x)&gt;<span class="number">0</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>, s.split(<span class="string">&#x27; &#x27;</span>)))</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li>공백이 연속된 문자가 주어진 경우를 체크해야 한다</li><li>숫자를 나타내는 문자열(ex: <code>&#39;3&#39;</code>)도 <code>upper()</code>, <code>lower()</code> 적용을 할 수 있다</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/02/a78879dd0eb0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 다음 큰 숫자</title>
      <link>https://sklubmk.github.io/2021/10/01/e8b7c05185e2/</link>
      <guid>https://sklubmk.github.io/2021/10/01/e8b7c05185e2/</guid>
      <pubDate>Fri, 01 Oct 2021 09:53:07 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다.</p><ul><li>조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다.</li><li>조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다.</li><li>조건 3. n의 다음 큰 숫자는 조건 1, 2를 만족하는 수 중 가장 작은 수 입니다.</li></ul><p>예를 들어서 78(1001110)의 다음 큰 숫자는 83(1010011)입니다.</p><p>자연수 n이 매개변수로 주어질 때, n의 다음 큰 숫자를 return 하는 solution 함수를 완성해주세요.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>n은 1,000,000 이하의 자연수 입니다.</li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>n</th><th>result</th></tr></thead><tbody><tr><td>78</td><td>83</td></tr><tr><td>15</td><td>23</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예#1\<br>문제 예시와 같습니다.\<br>입출력 예#2\<br>15(1111)의 다음 큰 숫자는 23(10111)입니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n</span>):</span></span><br><span class="line">    k = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">bin</span>(n)[<span class="number">2</span>:].count(<span class="string">&#x27;1&#x27;</span>) != <span class="built_in">bin</span>(k)[<span class="number">2</span>:].count(<span class="string">&#x27;1&#x27;</span>):</span><br><span class="line">        k +=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> k</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/10/01/e8b7c05185e2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 최댓값과 최솟값</title>
      <link>https://sklubmk.github.io/2021/09/30/0d930aa5c30a/</link>
      <guid>https://sklubmk.github.io/2021/09/30/0d930aa5c30a/</guid>
      <pubDate>Thu, 30 Sep 2021 14:13:54 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>문자열 s에는 공백으로 구분된 숫자들이 저장되어 있습니다. str에 나타나는 숫자 중 최소값과 최대값을 찾아 이를 “(최소값) (최대값)”형태의 문자열을 반환하는 함수, solution을 완성하세요.\<br>예를들어 s가 “1 2 3 4”라면 “1 4”를 리턴하고, “-1 -2 -3 -4”라면 “-4 -1”을 리턴하면 됩니다.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>s에는 둘 이상의 정수가 공백으로 구분되어 있습니다.</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>s</th><th>return</th></tr></thead><tbody><tr><td>“1 2 3 4”</td><td>“1 4”</td></tr><tr><td>“-1 -2 -3 -4”</td><td>“-4 -1”</td></tr><tr><td>“-1 -1”</td><td>“-1 -1”</td></tr></tbody></table></div></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s</span>):</span></span><br><span class="line">    s = <span class="built_in">sorted</span>(<span class="built_in">int</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> s.split(<span class="string">&#x27; &#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;s[<span class="number">0</span>]&#125;</span> <span class="subst">&#123;s[-<span class="number">1</span>]&#125;</span>&#x27;</span></span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/30/0d930aa5c30a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 최소직사각형</title>
      <link>https://sklubmk.github.io/2021/09/28/d939dfb298e6/</link>
      <guid>https://sklubmk.github.io/2021/09/28/d939dfb298e6/</guid>
      <pubDate>Tue, 28 Sep 2021 09:50:29 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><hr><p>명함 지갑을 만드는 회사에서 지갑의 크기를 정하려고 합니다. 다양한 모양과 크기의 명함들을 모두 수납할 수 있으면서, 작아서 들고 다니기 편한 지갑을 만들어야 합니다. 이러한 요건을 만족하는 지갑을 만들기 위해 디자인팀은 모든 명함의 가로 길이와 세로 길이를 조사했습니다.</p><p>아래 표는 4가지 명함의 가로 길이와 세로 길이를 나타냅니다.</p><div class="table-container"><table><thead><tr><th>명함 번호</th><th>가로 길이</th><th>세로 길이</th></tr></thead><tbody><tr><td>1</td><td>60</td><td>50</td></tr><tr><td>2</td><td>30</td><td>70</td></tr><tr><td>3</td><td>60</td><td>30</td></tr><tr><td>4</td><td>80</td><td>40</td></tr></tbody></table></div><p>가장 긴 가로 길이와 세로 길이가 각각 80, 70이기 때문에 80(가로) x 70(세로) 크기의 지갑을 만들면 모든 명함들을 수납할 수 있습니다. 하지만 2번 명함을 가로로 눕혀 수납한다면 80(가로) x 50(세로) 크기의 지갑으로 모든 명함들을 수납할 수 있습니다. 이때의 지갑 크기는 4000(=80 x 50)입니다.</p><p>모든 명함의 가로 길이와 세로 길이를 나타내는 2차원 배열 sizes가 매개변수로 주어집니다. 모든 명함을 수납할 수 있는 가장 작은 지갑을 만들 때, 지갑의 크기를 return 하도록 solution 함수를 완성해주세요.</p><hr><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>sizes의 길이는 1 이상 10,000 이하입니다.<ul><li>sizes의 원소는 [w, h] 형식입니다.</li><li>w는 명함의 가로 길이를 나타냅니다.</li><li>h는 명함의 세로 길이를 나타냅니다.</li><li>w와 h는 1 이상 1,000 이하인 자연수입니다.</li></ul></li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>sizes</th><th>result</th></tr></thead><tbody><tr><td>[[60, 50], [30, 70], [60, 30], [80, 40]]</td><td>4000</td></tr><tr><td>[[10, 7], [12, 3], [8, 15], [14, 7], [5, 15]]</td><td>120</td></tr><tr><td>[[14, 4], [19, 6], [6, 16], [18, 7], [7, 11]]</td><td>133</td></tr></tbody></table></div><hr><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1\<br>문제 예시와 같습니다.</p><p>입출력 예 #2\<br>명함들을 적절히 회전시켜 겹쳤을 때, 3번째 명함(가로: 8, 세로: 15)이 다른 모든 명함보다 크기가 큽니다. 따라서 지갑의 크기는 3번째 명함의 크기와 같으며, 120(=8 x 15)을 return 합니다.</p><p>입출력 예 #3\<br>명함들을 적절히 회전시켜 겹쳤을 때, 모든 명함을 포함하는 가장 작은 지갑의 크기는 133(=19 x 7)입니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">sizes</span>):</span></span><br><span class="line">    result = [<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> sizes:</span><br><span class="line">        result = [ <span class="built_in">max</span>(result[<span class="number">0</span>],<span class="built_in">min</span>(s)), <span class="built_in">max</span>(result[<span class="number">1</span>],<span class="built_in">max</span>(s)) ]</span><br><span class="line">    <span class="keyword">return</span> result[<span class="number">0</span>] * result[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/%EC%9C%84%ED%81%B4%EB%A6%AC%EC%B1%8C%EB%A6%B0%EC%A7%80/">위클리챌린지</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/28/d939dfb298e6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 땅따먹기</title>
      <link>https://sklubmk.github.io/2021/09/27/40cdd52ef911/</link>
      <guid>https://sklubmk.github.io/2021/09/27/40cdd52ef911/</guid>
      <pubDate>Mon, 27 Sep 2021 02:37:26 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>땅따먹기 게임을 하려고 합니다. 땅따먹기 게임의 땅(land)은 총 N행 4열로 이루어져 있고, 모든 칸에는 점수가 쓰여 있습니다. 1행부터 땅을 밟으며 한 행씩 내려올 때, 각 행의 4칸 중 한 칸만 밟으면서 내려와야 합니다. 단, 땅따먹기 게임에는 한 행씩 내려올 때, 같은 열을 연속해서 밟을 수 없는 특수 규칙이 있습니다.</p><p>예를 들면,</p><p>| 1 | 2 | 3 | 5 |</p><p>| 5 | 6 | 7 | 8 |</p><p>| 4 | 3 | 2 | 1 |</p><p>로 땅이 주어졌다면, 1행에서 네번째 칸 (5)를 밟았으면, 2행의 네번째 칸 (8)은 밟을 수 없습니다.</p><p>마지막 행까지 모두 내려왔을 때, 얻을 수 있는 점수의 최대값을 return하는 solution 함수를 완성해 주세요. 위 예의 경우, 1행의 네번째 칸 (5), 2행의 세번째 칸 (7), 3행의 첫번째 칸 (4) 땅을 밟아 16점이 최고점이 되므로 16을 return 하면 됩니다.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>행의 개수 N : 100,000 이하의 자연수</li><li>열의 개수는 4개이고, 땅(land)은 2차원 배열로 주어집니다.</li><li>점수 : 100 이하의 자연수</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>land</th><th>answer</th></tr></thead><tbody><tr><td>[[1,2,3,5],[5,6,7,8],[4,3,2,1]]</td><td>16</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1\<br>문제의 예시와 같습니다.</p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">land</span>):</span></span><br><span class="line">    dp = [[<span class="number">0</span>]*<span class="number">4</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(land))]</span><br><span class="line">    dp[<span class="number">0</span>] = land[<span class="number">0</span>][:]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(land)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            dp[i][j] = <span class="built_in">max</span>(k <span class="keyword">for</span> k_i, k <span class="keyword">in</span> <span class="built_in">enumerate</span>(dp[i-<span class="number">1</span>]) <span class="keyword">if</span> k_i != j) + land[i][j]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(dp[-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li><code>Brute Force</code> 방식의 풀이는 <script type="math/tex">O(4^N)</script>의 효율성, 즉 최대 <script type="math/tex">4^{1000000}</script>의 효율성을 보인다.</li><li><code>Dinamic Programming</code>을 적용하면 쉽게 풀이할 수 있다.</li><li>2차원 배열인 <code>DP[i][j]</code>는, <code>DP[i-1]</code> 중 가장 큰 값에 <code>land[i][j]</code> 값을 포함한 결과다.<ul><li>그러나 이때, 문제 조건대로 <code>DP[i-1]</code>의 가장 큰 값의 인덱스가 <code>j</code>와 같아서는 안된다. </li><li>따라서 정확히는 <code>DP[i-1]</code> 배열에서 <code>j</code>번째 값을 제외한 결과 중 가장 큰 값을 사용한다.</li></ul></li><li><code>DP</code> 풀이 방식을 통해 <script type="math/tex">O(N)</script>의 효율성으로 문제를 풀 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/DP/">DP</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/27/40cdd52ef911/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) N개의 최소공배수</title>
      <link>https://sklubmk.github.io/2021/09/26/91475a0d6b1b/</link>
      <guid>https://sklubmk.github.io/2021/09/26/91475a0d6b1b/</guid>
      <pubDate>Sun, 26 Sep 2021 11:18:42 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>두 수의 최소공배수(Least Common Multiple)란 입력된 두 수의 배수 중 공통이 되는 가장 작은 숫자를 의미합니다. 예를 들어 2와 7의 최소공배수는 14가 됩니다. 정의를 확장해서, n개의 수의 최소공배수는 n 개의 수들의 배수 중 공통이 되는 가장 작은 숫자가 됩니다. n개의 숫자를 담은 배열 arr이 입력되었을 때 이 수들의 최소공배수를 반환하는 함수, solution을 완성해 주세요.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>arr은 길이 1이상, 15이하인 배열입니다.</li><li>arr의 원소는 100 이하인 자연수입니다.</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>arr</th><th>result</th></tr></thead><tbody><tr><td>[2,6,8,14]</td><td>168</td></tr><tr><td>[1,2,3]</td><td>6</td></tr></tbody></table></div></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">arr</span>):</span></span><br><span class="line">    arr.sort()</span><br><span class="line">    max_v = arr[-<span class="number">1</span>]</span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> count:</span><br><span class="line">        satis_value_count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">reversed</span>(<span class="built_in">range</span>(<span class="built_in">len</span>(arr)-<span class="number">1</span>)):</span><br><span class="line">            <span class="keyword">if</span> (max_v*count) % arr[i] == <span class="number">0</span>:</span><br><span class="line">                satis_value_count+= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>: </span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> satis_value_count == <span class="built_in">len</span>(arr)-<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            count+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> max_v * count </span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li>최소 공배수는 반드시 배열 중 가장 큰 수의 거듭제곱 중 하나다.</li><li>이를 이용하여 가장 큰 수의 거듭제곱 값을 늘려가며 조건에 만족하는 값을 구한다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/26/91475a0d6b1b/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV3) 이중우선순위큐</title>
      <link>https://sklubmk.github.io/2021/09/24/a254528274a1/</link>
      <guid>https://sklubmk.github.io/2021/09/24/a254528274a1/</guid>
      <pubDate>Fri, 24 Sep 2021 03:32:24 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다.</p><div class="table-container"><table><thead><tr><th>명령어</th><th>수신 탑(높이)</th></tr></thead><tbody><tr><td>I 숫자</td><td>큐에 주어진 숫자를 삽입합니다.</td></tr><tr><td>D 1</td><td>큐에서 최댓값을 삭제합니다.</td></tr><tr><td>D -1</td><td>큐에서 최솟값을 삭제합니다.</td></tr></tbody></table></div><p>이중 우선순위 큐가 할 연산 operations가 매개변수로 주어질 때, 모든 연산을 처리한 후 큐가 비어있으면 [0,0] 비어있지 않으면 [최댓값, 최솟값]을 return 하도록 solution 함수를 구현해주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>operations는 길이가 1 이상 1,000,000 이하인 문자열 배열입니다.</li><li>operations의 원소는 큐가 수행할 연산을 나타냅니다.<ul><li>원소는 “명령어 데이터” 형식으로 주어집니다.- 최댓값/최솟값을 삭제하는 연산에서 최댓값/최솟값이 둘 이상인 경우, 하나만 삭제합니다.</li></ul></li><li>빈 큐에 데이터를 삭제하라는 연산이 주어질 경우, 해당 연산은 무시합니다.</li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>operations</th><th>return</th></tr></thead><tbody><tr><td>[“I 16”,”D 1”]</td><td>[0,0]</td></tr><tr><td>[“I 7”,”I 5”,”I -5”,”D -1”]</td><td>[7,5]</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>16을 삽입 후 최댓값을 삭제합니다. 비어있으므로 [0,0]을 반환합니다.\<br>7,5,-5를 삽입 후 최솟값을 삭제합니다. 최대값 7, 최소값 5를 반환합니다.</p><p><a href="http://icpckorea.org/problems/2013/onlineset.pdf">출처</a></p></blockquote><p><br/></p><p><br/></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq <span class="keyword">as</span> h</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">operations</span>):</span></span><br><span class="line">    heap_queue = []</span><br><span class="line">    <span class="keyword">for</span> oper <span class="keyword">in</span> operations:</span><br><span class="line">        order, value = oper.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> order == <span class="string">&#x27;D&#x27;</span> <span class="keyword">and</span> value == <span class="string">&#x27;-1&#x27;</span> <span class="keyword">and</span> <span class="built_in">len</span>(heap_queue) != <span class="number">0</span>:</span><br><span class="line">            h.heappop(heap_queue)</span><br><span class="line">        <span class="keyword">elif</span> order == <span class="string">&#x27;D&#x27;</span> <span class="keyword">and</span> value == <span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> <span class="built_in">len</span>(heap_queue) != <span class="number">0</span>:</span><br><span class="line">            heap_queue.pop(heap_queue.index(h.nlargest(<span class="number">1</span>,heap_queue)[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">elif</span> order == <span class="string">&#x27;I&#x27;</span>:</span><br><span class="line">            h.heappush(heap_queue,<span class="built_in">int</span>(value))</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(heap_queue) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>] </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> [h.nlargest(<span class="number">1</span>,heap_queue)[<span class="number">0</span>],h.heappop(heap_queue)]</span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li>python <code>heapq</code> 라이브러리의 <code>nlargest</code> 함수는 queue 안의 가장 큰 <code>n</code>개의 숫자로 이루어진 배열을 반환한다. 이를 이용해 손쉽게 <code>heapq</code>의 <code>max</code> 값을 구할 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv3/">lv3</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/lv3/">lv3</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/24/a254528274a1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[프로그래머스] (LV2) 게임 맵 최단거리</title>
      <link>https://sklubmk.github.io/2021/09/21/c72c24f8d1cd/</link>
      <guid>https://sklubmk.github.io/2021/09/21/c72c24f8d1cd/</guid>
      <pubDate>Tue, 21 Sep 2021 08:24:13 GMT</pubDate>
      
      <description>&lt;p&gt;Python3&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Python3<br><span id="more"></span></p><p><br/></p><blockquote><h1 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h1><p>ROR 게임은 두 팀으로 나누어서 진행하며, 상대 팀 진영을 먼저 파괴하면 이기는 게임입니다. 따라서, 각 팀은 상대 팀 진영에 최대한 빨리 도착하는 것이 유리합니다.</p><p>지금부터 당신은 한 팀의 팀원이 되어 게임을 진행하려고 합니다. 다음은 5 x 5 크기의 맵에, 당신의 캐릭터가 (행: 1, 열: 1) 위치에 있고, 상대 팀 진영은 (행: 5, 열: 5) 위치에 있는 경우의 예시입니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/dc3a1b49-13d3-4047-b6f8-6cc40b2702a7/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B51_sxuruo.png" alt="최단거리1_sxuruo.png"></p><p>위 그림에서 검은색 부분은 벽으로 막혀있어 갈 수 없는 길이며, 흰색 부분은 갈 수 있는 길입니다. 캐릭터가 움직일 때는 동, 서, 남, 북 방향으로 한 칸씩 이동하며, 게임 맵을 벗어난 길은 갈 수 없습니다.\<br>아래 예시는 캐릭터가 상대 팀 진영으로 가는 두 가지 방법을 나타내고 있습니다.</p><ul><li>첫 번째 방법은 11개의 칸을 지나서 상대 팀 진영에 도착했습니다.</li></ul><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/9d909e5a-ca95-4088-9df9-d84cb804b2b0/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B52_hnjd3b.png" alt="최단거리2_hnjd3b.png"></p><ul><li>두 번째 방법은 15개의 칸을 지나서 상대팀 진영에 도착했습니다.</li></ul><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/4b7cd629-a3c2-4e02-b748-a707211131de/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B53_ntxygd.png" alt="최단거리3_ntxygd.png"></p><p>위 예시에서는 첫 번째 방법보다 더 빠르게 상대팀 진영에 도착하는 방법은 없으므로, 이 방법이 상대 팀 진영으로 가는 가장 빠른 방법입니다.</p><p>만약, 상대 팀이 자신의 팀 진영 주위에 벽을 세워두었다면 상대 팀 진영에 도착하지 못할 수도 있습니다. 예를 들어, 다음과 같은 경우에 당신의 캐릭터는 상대 팀 진영에 도착할 수 없습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/d963b4bd-12e5-45da-9ca7-549e453d58a9/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B54_of9xfg.png" alt="최단거리4_of9xfg.png"></p><p>게임 맵의 상태 maps가 매개변수로 주어질 때, 캐릭터가 상대 팀 진영에 도착하기 위해서 지나가야 하는 칸의 개수의 최솟값을 return 하도록 solution 함수를 완성해주세요. 단, 상대 팀 진영에 도착할 수 없을 때는 -1을 return 해주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>maps는 n x m 크기의 게임 맵의 상태가 들어있는 2차원 배열로, n과 m은 각각 1 이상 100 이하의 자연수입니다.<ul><li>n과 m은 서로 같을 수도, 다를 수도 있지만, n과 m이 모두 1인 경우는 입력으로 주어지지 않습니다.</li></ul></li><li>maps는 0과 1로만 이루어져 있으며, 0은 벽이 있는 자리, 1은 벽이 없는 자리를 나타냅니다.</li><li>처음에 캐릭터는 게임 맵의 좌측 상단인 (1, 1) 위치에 있으며, 상대방 진영은 게임 맵의 우측 하단인 (n, m) 위치에 있습니다.</li></ul><hr><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><div class="table-container"><table><thead><tr><th>maps</th><th>answer</th></tr></thead><tbody><tr><td>[[1,0,1,1,1],[1,0,1,0,1],[1,0,1,1,1],[1,1,1,0,1],[0,0,0,0,1]]</td><td>11</td></tr><tr><td>[[1,0,1,1,1],[1,0,1,0,1],[1,0,1,1,1],[1,1,1,0,0],[0,0,0,0,1]]</td><td>-1</td></tr></tbody></table></div><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><p>입출력 예 #1\<br>주어진 데이터는 다음과 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/6db71f7f-58d3-4623-9fab-7cd99fa863a5/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B56_lgjvrb.png" alt="최단거리6_lgjvrb.png"></p><p>캐릭터가 적 팀의 진영까지 이동하는 가장 빠른 길은 다음 그림과 같습니다.</p><p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/d223d017-b3e2-4772-9045-a565133d45ff/%E1%84%8E%E1%85%AC%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A5%E1%84%85%E1%85%B52_hnjd3b%20%281%29.png" alt="최단거리2_hnjd3b (1).png"></p><p>따라서 총 11칸을 캐릭터가 지나갔으므로 11을 return 하면 됩니다.</p><p>입출력 예 #2\<br>문제의 예시와 같으며, 상대 팀 진영에 도달할 방법이 없습니다. 따라서 -1을 return 합니다.</p><p><br/></p><p><br/></p></blockquote><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq <span class="keyword">as</span> h</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">maps</span>):</span></span><br><span class="line">    n = <span class="built_in">len</span>(maps[<span class="number">0</span>])</span><br><span class="line">    m = <span class="built_in">len</span>(maps)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>: <span class="keyword">return</span> m</span><br><span class="line">    <span class="keyword">elif</span> m == <span class="number">1</span>: <span class="keyword">return</span> n</span><br><span class="line">    </span><br><span class="line">    dxdy = (-<span class="number">1</span>,<span class="number">1</span>,n,-n)</span><br><span class="line">    isVisit = [<span class="literal">False</span>]*(n*m)</span><br><span class="line">    graph = [(<span class="number">1</span>,<span class="number">0</span>)]</span><br><span class="line">    <span class="keyword">while</span> graph:</span><br><span class="line">        dist, idx = h.heappop(graph)</span><br><span class="line">        idx *= -<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> idx == m*n -<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> dist</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> isVisit[idx]: <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>: isVisit[idx] = <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> dxdy:</span><br><span class="line">            i = idx + d</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (d == n <span class="keyword">or</span> d == -n) <span class="keyword">and</span> <span class="keyword">not</span> (-<span class="number">1</span> &lt; i &lt; n*m): <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> (d == <span class="number">1</span> <span class="keyword">or</span> d == -<span class="number">1</span>) <span class="keyword">and</span> i//n != idx//n: <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> maps[i//n][i%n] == <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> isVisit[i]:</span><br><span class="line">                h.heappush(graph,(dist+<span class="number">1</span>,-i))</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><p><br/></p><p><br/></p><h1 id="설명"><a href="#설명" class="headerlink" title="설명"></a>설명</h1><hr><h2 id="풀이-TIPS"><a href="#풀이-TIPS" class="headerlink" title="풀이 TIPS"></a>풀이 TIPS</h2><ul><li><code>n</code>이나 <code>m</code>이 1인 상황은 따로 대비한다.</li><li><code>heap queue</code>를 이용한 <code>BFS</code> 풀이, 그 중에서도 다익스트라 방식을 이용했다.</li><li>이동 가능한 노드들을 <code>heap queue</code>인 <code>graph</code>에 계속 저장한다.</li><li><code>graph</code>에서 꺼낸 노드는 최단거리 노드이므로 종료지점이면 바로 거리를 반환한다.</li><li><code>isVisit</code> 변수를 둬 이미 지난 노드로의 역행을 막는다</li></ul>]]></content:encoded>
      
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv2/">lv2</category>
      
      
      <category domain="https://sklubmk.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://sklubmk.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://sklubmk.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/">파이썬</category>
      
      <category domain="https://sklubmk.github.io/tags/lv2/">lv2</category>
      
      
      <comments>https://sklubmk.github.io/2021/09/21/c72c24f8d1cd/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
